[{"comment": "random_controller.h:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]", "resources": [], "location": {"function": null, "line": 0, "class": null, "file": "include/fictibot_controller/random_controller.h", "package": "fictibot_controller"}, "rule": "cpplint_plugin:no_copyright"}, {"comment": "random_controller.h:1:  #ifndef header guard has wrong style, please use: _TMP_TMPQUHPDY_CPPLINT_PLUGIN_RANDOM_CONTROLLER_H_  [build/header_guard] [5]", "resources": [], "location": {"function": null, "line": 1, "class": null, "file": "include/fictibot_controller/random_controller.h", "package": "fictibot_controller"}, "rule": "cpplint_plugin:header_guard_format"}, {"comment": "random_controller.h:1:  #ifndef header guard has wrong style, please use: RANDOM_CONTROLLER_H  [build/header_guard] [5]", "resources": [], "location": {"function": null, "line": 1, "class": null, "file": "include/fictibot_controller/random_controller.h", "package": "fictibot_controller"}, "rule": "cpplint_plugin:header_guard_format"}, {"comment": "random_controller.h:40:  #endif line should be \"#endif  // _TMP_TMPQUHPDY_CPPLINT_PLUGIN_RANDOM_CONTROLLER_H_\"  [build/header_guard] [5]", "resources": [], "location": {"function": null, "line": 40, "class": null, "file": "include/fictibot_controller/random_controller.h", "package": "fictibot_controller"}, "rule": "cpplint_plugin:header_guard_close"}, {"comment": "random_controller.h:8:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 8, "class": null, "file": "include/fictibot_controller/random_controller.h", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.h:9:  public: should be indented +1 space inside class RandomController  [whitespace/indent] [3]", "resources": [], "location": {"function": null, "line": 9, "class": null, "file": "include/fictibot_controller/random_controller.h", "package": "fictibot_controller"}, "rule": "cpplint_plugin:indent_access_mod"}, {"comment": "random_controller.h:10:  Is this a non-const reference? If so, make const or use a pointer: ros::NodeHandle& n  [runtime/references] [2]", "resources": [], "location": {"function": null, "line": 10, "class": null, "file": "include/fictibot_controller/random_controller.h", "package": "fictibot_controller"}, "rule": "cpplint_plugin:non_const_ref"}, {"comment": "random_controller.h:12:  You don't need a ; after a }  [readability/braces] [4]", "resources": [], "location": {"function": null, "line": 12, "class": null, "file": "include/fictibot_controller/random_controller.h", "package": "fictibot_controller"}, "rule": "cpplint_plugin:redundant_empty_statement"}, {"comment": "random_controller.h:17:  private: should be indented +1 space inside class RandomController  [whitespace/indent] [3]", "resources": [], "location": {"function": null, "line": 17, "class": null, "file": "include/fictibot_controller/random_controller.h", "package": "fictibot_controller"}, "rule": "cpplint_plugin:indent_access_mod"}, {"comment": "controller_node.cpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]", "resources": [], "location": {"function": null, "line": 0, "class": null, "file": "src/controller_node.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:no_copyright"}, {"comment": "controller_node.cpp:6:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 6, "class": null, "file": "src/controller_node.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "controller_node.cpp:15:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 15, "class": null, "file": "src/controller_node.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "Found implementation defined integer type.", "resources": [], "location": {"function": null, "line": 5, "class": null, "file": "src/controller_node.cpp", "package": "fictibot_controller"}, "rule": "cppcheck_plugin:harosIntegerTypes"}, {"comment": "Query found: RosPrimitiveCall(controller_cmd, , std_msgs/Float64) in fictibot_controller/src/random_controller.cpp:29, in function RandomController (depth 0)\nReported in fictibot_controller/src/random_controller.cpp:29, in function RandomController", "resources": [], "location": {"function": "RandomController", "line": 29, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "user:advertise_queue_1"}, {"comment": "Query found: RosPrimitiveCall(/stop_cmd, , std_msgs/Empty) in fictibot_controller/src/random_controller.cpp:31, in function RandomController (depth 0)\nReported in fictibot_controller/src/random_controller.cpp:31, in function RandomController", "resources": [], "location": {"function": "RandomController", "line": 31, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "no_global_names"}, {"comment": "Query found: RosPrimitiveCall(/stop_cmd, , std_msgs/Empty) in fictibot_controller/src/random_controller.cpp:31, in function RandomController (depth 0)\nReported in fictibot_controller/src/random_controller.cpp:31, in function RandomController", "resources": [], "location": {"function": "RandomController", "line": 31, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "user:infinite_queues"}, {"comment": "random_controller.cpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]", "resources": [], "location": {"function": null, "line": 0, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:no_copyright"}, {"comment": "random_controller.cpp:4:  Include 'cmath' instead of 'math.h'.  [build/include] [5]", "resources": [], "location": {"function": null, "line": 4, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:c_headers"}, {"comment": "random_controller.cpp:6:  Found C system header after C++ system header. Should be: random_controller.h, c system, c++ system, other.  [build/include_order] [4]", "resources": [], "location": {"function": null, "line": 6, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "random_controller.cpp:7:  Found C system header after C++ system header. Should be: random_controller.h, c system, c++ system, other.  [build/include_order] [4]", "resources": [], "location": {"function": null, "line": 7, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "random_controller.cpp:20:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 20, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:44:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 44, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:51:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 51, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:54:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "resources": [], "location": {"function": null, "line": 54, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "random_controller.cpp:55:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 55, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:58:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "resources": [], "location": {"function": null, "line": 58, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "random_controller.cpp:59:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 59, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:62:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "resources": [], "location": {"function": null, "line": 62, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "random_controller.cpp:63:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 63, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:66:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "resources": [], "location": {"function": null, "line": 66, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "random_controller.cpp:67:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 67, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:70:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "resources": [], "location": {"function": null, "line": 70, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "random_controller.cpp:71:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 71, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:74:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "resources": [], "location": {"function": null, "line": 74, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "random_controller.cpp:75:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 75, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:80:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 80, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:86:  Using C-style cast.  Use static_cast<double>(...) instead  [readability/casting] [4]", "resources": [], "location": {"function": null, "line": 86, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:deprecated_casting"}, {"comment": "random_controller.cpp:91:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 91, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:94:  Using C-style cast.  Use static_cast<double>(...) instead  [readability/casting] [4]", "resources": [], "location": {"function": null, "line": 94, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:deprecated_casting"}, {"comment": "random_controller.cpp:97:  Small and focused functions are preferred: RandomController::spin() has 48 non-comment lines (error triggered by exceeding 40 lines).  [readability/fn_size] [5]", "resources": [], "location": {"function": "RandomController::spin()", "line": 97, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "max_function_length_40"}, {"comment": "random_controller.cpp:101:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 101, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:103:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 103, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:106:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "resources": [], "location": {"function": null, "line": 106, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "random_controller.cpp:107:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 107, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:113:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 113, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:118:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 118, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:121:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "resources": [], "location": {"function": null, "line": 121, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "random_controller.cpp:122:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 122, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:126:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 126, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:129:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "resources": [], "location": {"function": null, "line": 129, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "random_controller.cpp:130:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 130, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:134:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 134, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:137:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "resources": [], "location": {"function": null, "line": 137, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "random_controller.cpp:138:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 138, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:144:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 144, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:148:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 148, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:151:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "resources": [], "location": {"function": null, "line": 151, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "random_controller.cpp:152:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 152, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:155:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "resources": [], "location": {"function": null, "line": 155, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "random_controller.cpp:156:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 156, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:161:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 161, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:164:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "resources": [], "location": {"function": null, "line": 164, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "random_controller.cpp:165:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 165, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:168:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "resources": [], "location": {"function": null, "line": 168, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "random_controller.cpp:169:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 169, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "random_controller.cpp:26:  Add #include <string> for string  [build/include_what_you_use] [4]", "resources": [], "location": {"function": null, "line": 26, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cpplint_plugin:include_what_you_use"}, {"comment": "Found implementation defined integer type.", "resources": [], "location": {"function": null, "line": 114, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cppcheck_plugin:harosIntegerTypes"}, {"comment": "Found implementation defined integer type.", "resources": [], "location": {"function": null, "line": 115, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cppcheck_plugin:harosIntegerTypes"}, {"comment": "Found implementation defined integer type.", "resources": [], "location": {"function": null, "line": 116, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cppcheck_plugin:harosIntegerTypes"}, {"comment": "Found implementation defined integer type.", "resources": [], "location": {"function": null, "line": 145, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cppcheck_plugin:harosIntegerTypes"}, {"comment": "Found implementation defined integer type.", "resources": [], "location": {"function": null, "line": 146, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "cppcheck_plugin:harosIntegerTypes"}, {"comment": "function with cyclomatic complexity 11", "resources": [], "location": {"function": "RandomController::spin", "line": 43, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "max_cyclomatic_complexity_10"}, {"comment": "Function length of 50", "resources": [], "location": {"function": "RandomController::spin", "line": 43, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "max_function_length_40"}, {"comment": "MI of 38.7192189321", "resources": [], "location": {"function": null, "line": null, "class": null, "file": "src/random_controller.cpp", "package": "fictibot_controller"}, "rule": "mi_below_65"}]