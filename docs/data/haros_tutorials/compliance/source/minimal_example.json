[{"comment": "subscriber.cpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]", "resources": [], "location": {"function": null, "line": 0, "class": null, "file": "src/subscriber.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:no_copyright"}, {"comment": "subscriber.cpp:7:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 7, "class": null, "file": "src/subscriber.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:opening_brace_line"}, {"comment": "subscriber.cpp:11:  Is this a non-const reference? If so, make const or use a pointer: minimal_example::GetCounter::Request  &req  [runtime/references] [2]", "resources": [], "location": {"function": null, "line": 11, "class": null, "file": "src/subscriber.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:non_const_ref"}, {"comment": "subscriber.cpp:12:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 12, "class": null, "file": "src/subscriber.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:opening_brace_line"}, {"comment": "subscriber.cpp:12:  Is this a non-const reference? If so, make const or use a pointer: minimal_example::GetCounter::Response &res  [runtime/references] [2]", "resources": [], "location": {"function": null, "line": 12, "class": null, "file": "src/subscriber.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:non_const_ref"}, {"comment": "subscriber.cpp:17:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 17, "class": null, "file": "src/subscriber.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:opening_brace_line"}, {"comment": "Found implementation defined integer type.", "resources": [], "location": {"function": null, "line": 5, "class": null, "file": "src/subscriber.cpp", "package": "minimal_example"}, "rule": "cppcheck_plugin:harosIntegerTypes"}, {"comment": "Found implementation defined integer type.", "resources": [], "location": {"function": null, "line": 17, "class": null, "file": "src/subscriber.cpp", "package": "minimal_example"}, "rule": "cppcheck_plugin:harosIntegerTypes"}, {"comment": "MI of 59.263512194", "resources": [], "location": {"function": null, "line": null, "class": null, "file": "src/subscriber.cpp", "package": "minimal_example"}, "rule": "mi_below_65"}, {"comment": "publisher.cpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]", "resources": [], "location": {"function": null, "line": 0, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:no_copyright"}, {"comment": "publisher.cpp:5:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 5, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:opening_brace_line"}, {"comment": "publisher.cpp:5:  Is this a non-const reference? If so, make const or use a pointer: ros::Publisher &pub  [runtime/references] [2]", "resources": [], "location": {"function": null, "line": 5, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:non_const_ref"}, {"comment": "publisher.cpp:11:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 11, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:opening_brace_line"}, {"comment": "publisher.cpp:11:  Is this a non-const reference? If so, make const or use a pointer: ros::ServiceClient &client  [runtime/references] [2]", "resources": [], "location": {"function": null, "line": 11, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:non_const_ref"}, {"comment": "publisher.cpp:13:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 13, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:opening_brace_line"}, {"comment": "publisher.cpp:15:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 15, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:opening_brace_line"}, {"comment": "publisher.cpp:15:  } should be on a line by itself  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 15, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:closing_brace_line"}, {"comment": "publisher.cpp:20:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 20, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:opening_brace_line"}, {"comment": "publisher.cpp:25:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "resources": [], "location": {"function": null, "line": 25, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "publisher.cpp:27:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 27, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:opening_brace_line"}, {"comment": "publisher.cpp:29:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 29, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:opening_brace_line"}, {"comment": "publisher.cpp:29:  } should be on a line by itself  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 29, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:closing_brace_line"}, {"comment": "publisher.cpp:34:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]", "resources": [], "location": {"function": null, "line": 34, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cpplint_plugin:opening_brace_line"}, {"comment": "Found implementation defined integer type.", "resources": [], "location": {"function": null, "line": 20, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "cppcheck_plugin:harosIntegerTypes"}, {"comment": "MI of 46.8688802642", "resources": [], "location": {"function": null, "line": null, "class": null, "file": "src/publisher.cpp", "package": "minimal_example"}, "rule": "mi_below_65"}]