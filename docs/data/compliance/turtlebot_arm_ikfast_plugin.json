[
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "ikfast.h",
    "line": 37,
    "function": null,
    "comment": "ikfast.h:37:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_IKFAST_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "ikfast.h",
    "line": 37,
    "function": null,
    "comment": "ikfast.h:37:  #ifndef header guard has wrong style, please use: IKFAST_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "ikfast.h",
    "line": 328,
    "function": null,
    "comment": "ikfast.h:328:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_IKFAST_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "ikfast.h",
    "line": 34,
    "function": null,
    "comment": "ikfast.h:34:  Include 'list' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 43,
    "function": null,
    "comment": "ikfast.h:43:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ikfast.h",
    "line": 48,
    "function": null,
    "comment": "ikfast.h:48:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "ikfast.h",
    "line": 49,
    "function": null,
    "comment": "ikfast.h:49:  public: should be indented +1 space inside class IkSingleDOFSolutionBase  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 50,
    "function": null,
    "comment": "ikfast.h:50:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 50,
    "function": null,
    "comment": "ikfast.h:50:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ikfast.h",
    "line": 53,
    "function": null,
    "comment": "ikfast.h:53:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ikfast.h",
    "line": 54,
    "function": null,
    "comment": "ikfast.h:54:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ikfast.h",
    "line": 55,
    "function": null,
    "comment": "ikfast.h:55:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 56,
    "function": null,
    "comment": "ikfast.h:56:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ikfast.h",
    "line": 56,
    "function": null,
    "comment": "ikfast.h:56:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 57,
    "function": null,
    "comment": "ikfast.h:57:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ikfast.h",
    "line": 57,
    "function": null,
    "comment": "ikfast.h:57:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 62,
    "function": null,
    "comment": "ikfast.h:62:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 63,
    "function": null,
    "comment": "ikfast.h:63:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ikfast.h",
    "line": 66,
    "function": null,
    "comment": "ikfast.h:66:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "ikfast.h",
    "line": 67,
    "function": null,
    "comment": "ikfast.h:67:  public: should be indented +1 space inside class IkSolutionBase  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 68,
    "function": null,
    "comment": "ikfast.h:68:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 77,
    "function": null,
    "comment": "ikfast.h:77:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 77,
    "function": null,
    "comment": "ikfast.h:77:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "ikfast.h",
    "line": 77,
    "function": null,
    "comment": "ikfast.h:77:  Is this a non-const reference? If so, make const or use a pointer: std::vector<T>& solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 79,
    "function": null,
    "comment": "ikfast.h:79:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 82,
    "function": null,
    "comment": "ikfast.h:82:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ikfast.h",
    "line": 94,
    "function": null,
    "comment": "ikfast.h:94:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "ikfast.h",
    "line": 95,
    "function": null,
    "comment": "ikfast.h:95:  public: should be indented +1 space inside class IkSolutionListBase  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 96,
    "function": null,
    "comment": "ikfast.h:96:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 101,
    "function": null,
    "comment": "ikfast.h:101:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 102,
    "function": null,
    "comment": "ikfast.h:102:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 103,
    "function": null,
    "comment": "ikfast.h:103:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 111,
    "function": null,
    "comment": "ikfast.h:111:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ikfast.h",
    "line": 118,
    "function": null,
    "comment": "ikfast.h:118:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "ikfast.h",
    "line": 119,
    "function": null,
    "comment": "ikfast.h:119:  public: should be indented +1 space inside class IkFastFunctions  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 120,
    "function": null,
    "comment": "ikfast.h:120:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 120,
    "function": null,
    "comment": "ikfast.h:120:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 122,
    "function": null,
    "comment": "ikfast.h:122:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 124,
    "function": null,
    "comment": "ikfast.h:124:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ikfast.h",
    "line": 149,
    "function": null,
    "comment": "ikfast.h:149:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "ikfast.h",
    "line": 150,
    "function": null,
    "comment": "ikfast.h:150:  public: should be indented +1 space inside class IkSolution  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 151,
    "function": null,
    "comment": "ikfast.h:151:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 151,
    "function": null,
    "comment": "ikfast.h:151:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 156,
    "function": null,
    "comment": "ikfast.h:156:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 157,
    "function": null,
    "comment": "ikfast.h:157:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 158,
    "function": null,
    "comment": "ikfast.h:158:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "ikfast.h",
    "line": 160,
    "function": null,
    "comment": "ikfast.h:160:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 160,
    "function": null,
    "comment": "ikfast.h:160:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 161,
    "function": null,
    "comment": "ikfast.h:161:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 162,
    "function": null,
    "comment": "ikfast.h:162:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 162,
    "function": null,
    "comment": "ikfast.h:162:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "ikfast.h",
    "line": 165,
    "function": null,
    "comment": "ikfast.h:165:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "ikfast.h",
    "line": 165,
    "function": null,
    "comment": "ikfast.h:165:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 165,
    "function": null,
    "comment": "ikfast.h:165:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 165,
    "function": null,
    "comment": "ikfast.h:165:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 172,
    "function": null,
    "comment": "ikfast.h:172:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 172,
    "function": null,
    "comment": "ikfast.h:172:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "ikfast.h",
    "line": 172,
    "function": null,
    "comment": "ikfast.h:172:  Is this a non-const reference? If so, make const or use a pointer: std::vector<T>& solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 174,
    "function": null,
    "comment": "ikfast.h:174:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 177,
    "function": null,
    "comment": "ikfast.h:177:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 180,
    "function": null,
    "comment": "ikfast.h:180:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 184,
    "function": null,
    "comment": "ikfast.h:184:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 185,
    "function": null,
    "comment": "ikfast.h:185:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 186,
    "function": null,
    "comment": "ikfast.h:186:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Whitespace inside parenthesis should be consistent, and should consist of either zero or one space.",
    "file": "ikfast.h",
    "line": 186,
    "function": null,
    "comment": "ikfast.h:186:  Mismatching spaces inside () in if  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 187,
    "function": null,
    "comment": "ikfast.h:187:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 189,
    "function": null,
    "comment": "ikfast.h:189:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 189,
    "function": null,
    "comment": "ikfast.h:189:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 190,
    "function": null,
    "comment": "ikfast.h:190:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 191,
    "function": null,
    "comment": "ikfast.h:191:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 193,
    "function": null,
    "comment": "ikfast.h:193:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 193,
    "function": null,
    "comment": "ikfast.h:193:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 194,
    "function": null,
    "comment": "ikfast.h:194:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 200,
    "function": null,
    "comment": "ikfast.h:200:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "ikfast.h",
    "line": 200,
    "function": null,
    "comment": "ikfast.h:200:  Is this a non-const reference? If so, make const or use a pointer: std::vector<unsigned int>& v  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 203,
    "function": null,
    "comment": "ikfast.h:203:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "ikfast.h",
    "line": 203,
    "function": null,
    "comment": "ikfast.h:203:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 204,
    "function": null,
    "comment": "ikfast.h:204:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 204,
    "function": null,
    "comment": "ikfast.h:204:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 205,
    "function": null,
    "comment": "ikfast.h:205:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "ikfast.h",
    "line": 208,
    "function": null,
    "comment": "ikfast.h:208:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 209,
    "function": null,
    "comment": "ikfast.h:209:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 210,
    "function": null,
    "comment": "ikfast.h:210:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 214,
    "function": null,
    "comment": "ikfast.h:214:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 215,
    "function": null,
    "comment": "ikfast.h:215:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 223,
    "function": null,
    "comment": "ikfast.h:223:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ikfast.h",
    "line": 230,
    "function": null,
    "comment": "ikfast.h:230:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "ikfast.h",
    "line": 231,
    "function": null,
    "comment": "ikfast.h:231:  public: should be indented +1 space inside class IkSolutionList  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 232,
    "function": null,
    "comment": "ikfast.h:232:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ikfast.h",
    "line": 233,
    "function": null,
    "comment": "ikfast.h:233:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "ikfast.h",
    "line": 235,
    "function": null,
    "comment": "ikfast.h:235:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ikfast.h",
    "line": 240,
    "function": null,
    "comment": "ikfast.h:240:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "ikfast.h",
    "line": 241,
    "function": null,
    "comment": "ikfast.h:241:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 244,
    "function": null,
    "comment": "ikfast.h:244:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "ikfast.h",
    "line": 245,
    "function": null,
    "comment": "ikfast.h:245:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 249,
    "function": null,
    "comment": "ikfast.h:249:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 253,
    "function": null,
    "comment": "ikfast.h:253:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "ikfast.h",
    "line": 257,
    "function": null,
    "comment": "ikfast.h:257:  protected: should be indented +1 space inside class IkSolutionList  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "ikfast.h",
    "line": 261,
    "function": null,
    "comment": "ikfast.h:261:  Namespace should be terminated with '// namespace ikfast'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ikfast.h",
    "line": 263,
    "function": null,
    "comment": "ikfast.h:263:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ikfast.h",
    "line": 280,
    "function": null,
    "comment": "ikfast.h:280:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 298,
    "function": null,
    "comment": "ikfast.h:298:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "ikfast.h",
    "line": 298,
    "function": null,
    "comment": "ikfast.h:298:  Is this a non-const reference? If so, make const or use a pointer: ikfast::IkSolutionListBase<IkReal>& solutions  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 300,
    "function": null,
    "comment": "ikfast.h:300:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ikfast.h",
    "line": 321,
    "function": null,
    "comment": "ikfast.h:321:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "ikfast.h",
    "line": 325,
    "function": null,
    "comment": "ikfast.h:325:  Namespace should be terminated with '// namespace IKFAST_NAMESPACE'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ikfast.h",
    "line": 328,
    "function": null,
    "comment": "ikfast.h:328:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 49,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:49:  Include 'moveit/kinematics_base/kinematics_base.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 51,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:51:  Include 'tf_conversions/tf_kdl.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 53,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:53:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 57,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:57:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 59,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:59:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 65,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:65:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 73,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:73:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 73,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:73:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 78,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:78:  public: should be indented +1 space inside class IKFastKinematicsPlugin  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 79,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:79:  Do not leave a blank line after 'public:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 83,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:83:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 94,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:94:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 97,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:97:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 98,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:98:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::MoveItErrorCodes &error_code  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 99,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:99:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 112,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:112:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 113,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:113:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::MoveItErrorCodes &error_code  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 114,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:114:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 129,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:129:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 130,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:130:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::MoveItErrorCodes &error_code  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 131,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:131:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 144,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:144:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 146,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:146:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::MoveItErrorCodes &error_code  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 147,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:147:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 163,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:163:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 165,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:165:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::MoveItErrorCodes &error_code  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 166,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:166:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 181,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:181:  Is this a non-const reference? If so, make const or use a pointer: std::vector<geometry_msgs::Pose> &poses  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 183,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:183:  private: should be indented +1 space inside class IKFastKinematicsPlugin  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 184,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:184:  Do not leave a blank line after 'private:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 195,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:195:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 195,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:195:  Is this a non-const reference? If so, make const or use a pointer: KDL::Frame &pose_frame  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 195,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:195:  Is this a non-const reference? If so, make const or use a pointer: IkSolutionList<IkReal> &solutions  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 200,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:200:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 200,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:200:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double>& solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 202,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:202:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 202,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:202:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 203,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:203:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 203,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:203:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 204,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:204:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 204,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:204:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 206,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:206:  Is this a non-const reference? If so, make const or use a pointer: int &count  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 207,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:207:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 208,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:208:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 215,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:215:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 216,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:216:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 222,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:222:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 225,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:225:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 228,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:228:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 229,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:229:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 237,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:237:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 238,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:238:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 239,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:239:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 241,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:241:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 243,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:243:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 244,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:244:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 244,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:244:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 248,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:248:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 251,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:251:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 253,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:253:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 254,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:254:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 255,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:255:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 256,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:256:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 259,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:259:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 260,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:260:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 261,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:261:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 262,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:262:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 263,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:263:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 263,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:263:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 269,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:269:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 270,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:270:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 271,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:271:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 274,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:274:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 274,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:274:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 280,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:280:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 281,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:281:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 286,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:286:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 287,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:287:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 292,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:292:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 293,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:293:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 299,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:299:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 299,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:299:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 300,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:300:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 301,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:301:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 301,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:301:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 306,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:306:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 307,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:307:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 308,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:308:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 308,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:308:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 312,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:312:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 313,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:313:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 314,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:314:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 315,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:315:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 316,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:316:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 318,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:318:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 318,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:318:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 319,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:319:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 319,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:319:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 325,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:325:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 326,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:326:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 330,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:330:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 332,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:332:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 332,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:332:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 344,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:344:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 347,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:347:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 347,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:347:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 352,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:352:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 353,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:353:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 357,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:357:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 358,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:358:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 364,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:364:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 365,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:365:  Missing spaces around >  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 365,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:365:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 372,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:372:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 375,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:375:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 376,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:376:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 379,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:379:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 379,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:379:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 380,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:380:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 381,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:381:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 381,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:381:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 384,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:384:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 384,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:384:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 387,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:387:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 387,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:387:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 390,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:390:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 390,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:390:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 398,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:398:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 421,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:421:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 422,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:422:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 428,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:428:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 428,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:428:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 429,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:429:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 430,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:430:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 432,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:432:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 433,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:433:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 434,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:434:  Missing spaces around <  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 434,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:434:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 434,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:434:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 439,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:439:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 439,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:439:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 440,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:440:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 446,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:446:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 448,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:448:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 448,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:448:  Missing spaces around <  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 448,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:448:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a semicolon, if it does not end the line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 448,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:448:  Missing space after ;  [whitespace/semicolon] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","semicolon"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 451,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:451:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 452,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:452:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 453,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:453:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 454,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:454:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 455,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:455:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 456,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:456:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 460,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:460:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 460,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:460:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 461,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:461:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 465,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:465:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 466,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:466:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 470,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:470:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 471,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:471:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 472,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:472:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 473,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:473:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 477,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:477:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 477,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:477:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 478,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:478:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 482,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:482:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 487,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:487:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 488,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:488:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 489,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:489:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 490,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:490:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 492,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:492:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 493,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:493:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 497,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:497:  Missing spaces around !=  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 497,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:497:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 497,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:497:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 498,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:498:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 504,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:504:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Do not use variable-length arrays.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 505,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:505:  Do not use variable-length arrays.  Use an appropriately named ('k' followed by CamelCase) compile-time constant for the size.  [runtime/arrays] [1]",
    "tags": ["code-standards","google-cpp","arrays","variables","constants"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 510,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:510:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 512,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:512:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 512,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:512:  Missing spaces around <  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 512,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:512:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a semicolon, if it does not end the line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 512,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:512:  Missing space after ;  [whitespace/semicolon] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","semicolon"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 515,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:515:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 515,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:515:  Missing spaces around <  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 515,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:515:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a semicolon, if it does not end the line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 515,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:515:  Missing space after ;  [whitespace/semicolon] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","semicolon"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 519,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:519:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 524,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:524:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 525,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:525:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 528,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:528:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 529,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:529:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 530,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:530:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 531,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:531:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 543,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:543:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 544,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:544:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 545,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:545:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 547,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:547:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 549,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:549:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 550,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:550:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 551,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:551:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 552,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:552:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 563,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:563:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 564,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:564:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 567,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:567:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 568,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:568:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 569,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:569:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 570,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:570:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 582,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:582:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 583,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:583:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 585,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:585:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 587,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:587:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 588,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:588:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 589,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:589:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 590,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:590:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 591,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:591:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 594,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:594:  Missing spaces around ==  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 594,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:594:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 595,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:595:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 596,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:596:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 596,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:596:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 599,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:599:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 600,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:600:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 601,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:601:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 607,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:607:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 608,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:608:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 610,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:610:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 611,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:611:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 612,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:612:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 615,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:615:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 616,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:616:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 617,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:617:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 617,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:617:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 621,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:621:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 622,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:622:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 623,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:623:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 627,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:627:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 629,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:629:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 630,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:630:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 631,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:631:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 636,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:636:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 637,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:637:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 638,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:638:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 638,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:638:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 643,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:643:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 644,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:644:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 645,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:645:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 645,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:645:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 651,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:651:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 655,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:655:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 665,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:665:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 670,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:670:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 671,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:671:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 674,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:674:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 675,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:675:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 677,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:677:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 677,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:677:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 678,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:678:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 678,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:678:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 680,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:680:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 680,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:680:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 681,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:681:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 682,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:682:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 683,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:683:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 686,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:686:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 689,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:689:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 689,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:689:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 691,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:691:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 692,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:692:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 694,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:694:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 696,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:696:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 696,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:696:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 698,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:698:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 700,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:700:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 701,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:701:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 702,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:702:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 703,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:703:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 705,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:705:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 708,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:708:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 709,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:709:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 710,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:710:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 710,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:710:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 711,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:711:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 715,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:715:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 715,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:715:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 717,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:717:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 718,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:718:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 719,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:719:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 721,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:721:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 722,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:722:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 723,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:723:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 726,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:726:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 727,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:727:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 731,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:731:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 732,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:732:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 739,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:739:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 740,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:740:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 746,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:746:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 746,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:746:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 756,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:756:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 758,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:758:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 759,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:759:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 760,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:760:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 761,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:761:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 763,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:763:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 764,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:764:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 765,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:765:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 770,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:770:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 771,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:771:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 773,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:773:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 778,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:778:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 781,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:781:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 783,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:783:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 783,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:783:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 785,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:785:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 786,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:786:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 787,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:787:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 788,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:788:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 790,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:790:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 791,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:791:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 791,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:791:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 794,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:794:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 795,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:795:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 797,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:797:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 797,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:797:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 798,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:798:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 799,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:799:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 802,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:802:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 802,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:802:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 806,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:806:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 807,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:807:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 809,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:809:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 815,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:815:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 816,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:816:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 817,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:817:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 826,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:826:  Namespace should be terminated with '// namespace ikfast_kinematics_plugin'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 826,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:826:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 828,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:828:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 829,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:829:  Found C system header after other header. Should be: turtlebot_arm_arm_ikfast_moveit_plugin.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 830,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:830:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 487,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:487:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 789,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp:789:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": null,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 8,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:8:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 18,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:18:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 19,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:19:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 21,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:21:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include the directory when naming header files.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 21,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:21:  Include the directory when naming .h files  [build/include] [4]",
    "tags": ["code-standards","google-cpp","naming","headers","include"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 22,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:22:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 25,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:25:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 26,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:26:  Missing spaces around ==  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 28,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:28:  Found C++ system header after other header. Should be: turtlebot_arm_arm_ikfast_solver.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 29,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:29:  Found C++ system header after other header. Should be: turtlebot_arm_arm_ikfast_solver.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 30,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:30:  Found C++ system header after other header. Should be: turtlebot_arm_arm_ikfast_solver.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 31,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:31:  Found C++ system header after other header. Should be: turtlebot_arm_arm_ikfast_solver.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 32,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:32:  Found C++ system header after other header. Should be: turtlebot_arm_arm_ikfast_solver.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 39,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:39:  Include 'sstream' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 40,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:40:  Include 'iostream' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 52,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:52:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 52,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:52:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 52,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:52:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 70,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:70:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 73,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:73:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 74,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:74:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 74,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:74:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 75,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:75:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 75,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:75:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 76,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:76:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 77,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:77:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 77,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:77:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 78,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:78:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 79,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:79:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 79,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:79:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 82,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:82:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 82,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:82:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 85,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:85:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 113,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:113:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 114,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:114:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 114,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:114:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 114,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:114:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 114,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:114:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 115,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:115:  Using deprecated casting style.  Use static_cast<float>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 116,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:116:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 116,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:116:  Using deprecated casting style.  Use static_cast<float>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 120,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:120:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 121,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:121:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 121,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:121:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 121,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:121:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 121,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:121:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 123,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:123:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 129,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:129:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 130,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:130:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 130,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:130:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 133,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:133:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 138,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:138:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 139,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:139:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 139,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:139:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 142,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:142:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 146,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:146:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 147,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:147:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 147,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:147:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 147,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:147:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 147,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:147:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 148,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:148:  Using deprecated casting style.  Use static_cast<float>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 149,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:149:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 149,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:149:  Using deprecated casting style.  Use static_cast<float>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 153,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:153:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 154,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:154:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 154,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:154:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 154,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:154:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 154,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:154:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 156,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:156:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 165,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:165:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "There should not be more than one semicolon statement in a single-line if or else statement, unless it is part of a lambda expression, or the if/else body is enclosed in curly braces.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 165,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:165:  If/else bodies with multiple statements require braces  [readability/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","if-else","single-line-statements"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 165,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:165:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 166,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:166:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "There should not be more than one semicolon statement in a single-line if or else statement, unless it is part of a lambda expression, or the if/else body is enclosed in curly braces.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 166,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:166:  If/else bodies with multiple statements require braces  [readability/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","if-else","single-line-statements"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 166,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:166:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 167,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:167:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 168,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:168:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 168,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:168:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 169,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:169:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 169,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:169:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 170,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:170:  Using deprecated casting style.  Use static_cast<float>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 172,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:172:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 172,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:172:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 172,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:172:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 172,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:172:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 175,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:175:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 177,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:177:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 178,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:178:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 178,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:178:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 179,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:179:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 179,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:179:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 182,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:182:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 182,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:182:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 182,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:182:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 182,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:182:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 185,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:185:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 188,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:188:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 189,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:189:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 189,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:189:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 190,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:190:  Using deprecated casting style.  Use static_cast<float>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 192,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:192:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 192,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:192:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 192,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:192:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 192,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:192:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 193,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:193:  Using deprecated casting style.  Use static_cast<float>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 198,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:198:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 199,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:199:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 199,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:199:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 202,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:202:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 202,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:202:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 202,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:202:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 202,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:202:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 210,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:210:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 211,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:211:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 211,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:211:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 212,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:212:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 213,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:213:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 214,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:214:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 215,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:215:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 216,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:216:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 217,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:217:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 218,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:218:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 219,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:219:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 220,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:220:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 221,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:221:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 222,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:222:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 223,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:223:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 224,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:224:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 225,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:225:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 226,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:226:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 227,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:227:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 228,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:228:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 229,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:229:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 230,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:230:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 231,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:231:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 231,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:231:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 232,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:232:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 233,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:233:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 234,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:234:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 235,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:235:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 236,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:236:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 237,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:237:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 238,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:238:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 239,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:239:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 240,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:240:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 241,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:241:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 242,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:242:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 243,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:243:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 244,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:244:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 245,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:245:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 246,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:246:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 247,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:247:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 248,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:248:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 249,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:249:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 249,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:249:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 250,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:250:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 251,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:251:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 252,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:252:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 252,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:252:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 253,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:253:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 254,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:254:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 255,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:255:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 256,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:256:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 257,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:257:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 258,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:258:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 259,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:259:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 270,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:270:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 271,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:271:  public: should be indented +1 space inside class IKSolver  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 272,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:272:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 272,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:272:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 273,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:273:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 273,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:273:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 275,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:275:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 275,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:275:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 275,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:275:  Is this a non-const reference? If so, make const or use a pointer: IkSolutionListBase<IkReal>& solutions  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 276,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:276:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 276,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:276:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 276,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:276:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 276,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:276:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 279,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:279:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 284,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:284:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 285,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:285:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 285,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:285:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 286,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:286:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 286,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:286:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 287,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:287:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 287,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:287:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 288,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:288:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 288,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:288:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 289,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:289:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 289,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:289:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 290,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:290:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 290,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:290:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 291,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:291:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 291,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:291:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 293,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:293:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 298,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:298:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 300,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:300:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 300,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:300:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 302,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:302:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 303,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:303:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 305,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:305:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 306,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:306:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 308,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:308:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 309,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:309:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 311,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:311:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 311,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:311:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 316,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:316:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 317,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:317:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 319,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:319:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 319,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:319:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 324,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:324:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 326,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:326:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 329,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:329:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 331,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:331:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 332,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:332:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 333,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:333:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 334,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:334:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 334,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:334:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 334,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:334:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 337,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:337:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 341,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:341:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 342,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:342:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 343,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:343:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 344,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:344:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 345,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:345:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 346,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:346:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 350,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:350:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 354,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:354:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 357,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:357:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 358,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:358:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 360,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:360:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 360,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:360:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 361,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:361:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 369,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:369:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 372,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:372:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 374,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:374:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 377,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:377:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 380,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:380:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 382,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:382:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 383,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:383:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 384,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:384:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 385,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:385:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 385,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:385:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 385,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:385:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 392,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:392:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 393,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:393:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 394,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:394:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 402,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:402:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 402,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:402:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 403,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:403:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 406,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:406:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 409,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:409:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 411,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:411:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 414,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:414:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 416,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:416:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 417,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:417:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 418,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:418:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 419,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:419:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 419,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:419:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 419,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:419:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 422,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:422:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 427,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:427:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 428,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:428:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 430,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:430:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 433,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:433:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 435,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:435:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 438,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:438:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 440,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:440:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 443,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:443:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 444,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:444:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 445,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:445:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 446,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:446:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 447,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:447:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 448,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:448:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 449,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:449:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 450,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:450:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 451,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:451:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 452,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:452:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 453,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:453:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 454,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:454:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 455,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:455:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 456,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:456:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 457,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:457:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 458,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:458:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 459,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:459:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 460,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:460:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 461,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:461:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 462,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:462:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 463,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:463:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 464,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:464:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 465,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:465:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 466,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:466:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 467,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:467:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 468,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:468:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 469,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:469:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 470,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:470:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 471,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:471:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 472,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:472:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 473,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:473:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 474,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:474:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 475,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:475:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 476,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:476:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 477,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:477:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 478,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:478:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 479,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:479:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 480,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:480:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 481,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:481:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 482,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:482:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 483,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:483:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 484,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:484:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 485,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:485:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 486,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:486:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 487,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:487:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 488,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:488:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 489,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:489:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 490,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:490:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 491,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:491:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 492,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:492:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 493,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:493:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 494,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:494:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 495,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:495:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 496,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:496:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 501,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:501:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 502,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:502:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 503,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:503:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 504,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:504:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 505,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:505:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 513,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:513:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 513,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:513:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 514,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:514:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 517,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:517:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 520,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:520:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 522,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:522:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 525,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:525:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 527,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:527:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 528,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:528:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 529,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:529:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 530,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:530:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 530,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:530:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 530,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:530:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 533,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:533:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 536,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:536:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 537,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:537:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 538,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:538:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 539,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:539:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 540,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:540:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 541,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:541:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 542,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:542:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 543,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:543:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 544,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:544:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 545,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:545:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 546,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:546:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 547,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:547:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 548,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:548:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 549,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:549:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 550,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:550:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 551,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:551:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 552,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:552:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 553,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:553:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 554,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:554:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 555,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:555:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 556,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:556:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 558,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:558:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 566,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:566:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 566,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:566:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 567,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:567:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 569,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:569:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 573,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:573:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 573,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:573:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 574,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:574:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 576,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:576:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 578,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:578:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 579,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:579:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 579,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:579:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 580,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:580:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 585,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:585:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 586,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:586:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 587,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:587:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 588,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:588:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 589,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:589:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 590,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:590:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 591,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:591:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 592,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:592:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 593,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:593:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 594,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:594:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 595,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:595:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 596,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:596:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 597,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:597:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 598,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:598:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 599,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:599:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 600,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:600:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 601,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:601:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 602,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:602:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 603,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:603:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 604,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:604:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 605,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:605:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 606,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:606:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 607,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:607:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 608,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:608:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 609,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:609:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 611,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:611:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 611,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:611:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 612,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:612:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 613,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:613:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 615,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:615:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 616,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:616:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 618,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:618:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 618,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:618:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 623,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:623:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 625,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:625:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 628,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:628:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 630,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:630:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 631,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:631:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 632,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:632:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 633,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:633:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 633,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:633:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 633,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:633:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 636,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:636:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 639,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:639:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 640,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:640:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 641,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:641:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 642,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:642:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 643,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:643:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 644,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:644:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 645,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:645:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 646,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:646:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 647,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:647:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 648,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:648:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 649,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:649:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 650,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:650:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 651,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:651:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 652,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:652:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 653,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:653:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 654,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:654:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 655,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:655:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 656,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:656:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 657,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:657:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 658,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:658:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 659,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:659:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 660,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:660:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 661,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:661:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 662,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:662:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 663,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:663:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 664,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:664:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 665,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:665:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 666,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:666:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 667,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:667:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 668,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:668:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 669,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:669:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 670,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:670:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 671,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:671:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 704,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:704:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 708,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:708:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 710,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:710:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 712,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:712:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 713,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:713:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 713,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:713:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 714,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:714:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 719,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:719:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 720,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:720:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 721,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:721:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 722,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:722:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 723,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:723:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 724,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:724:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 725,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:725:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 726,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:726:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 727,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:727:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 728,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:728:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 729,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:729:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 730,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:730:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 731,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:731:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 732,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:732:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 733,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:733:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 734,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:734:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 735,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:735:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 736,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:736:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 738,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:738:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 738,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:738:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 739,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:739:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 740,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:740:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 742,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:742:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 743,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:743:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 745,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:745:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 745,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:745:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 750,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:750:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 752,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:752:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 755,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:755:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 757,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:757:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 758,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:758:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 759,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:759:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 760,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:760:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 760,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:760:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 760,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:760:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 763,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:763:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 766,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:766:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 767,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:767:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 768,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:768:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 769,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:769:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 770,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:770:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 771,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:771:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 772,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:772:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 773,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:773:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 774,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:774:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 775,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:775:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 776,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:776:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 777,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:777:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 778,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:778:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 779,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:779:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 780,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:780:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 781,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:781:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 782,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:782:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 783,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:783:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 784,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:784:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 785,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:785:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 786,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:786:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 787,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:787:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 788,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:788:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 789,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:789:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 790,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:790:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 791,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:791:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 792,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:792:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 793,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:793:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 794,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:794:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 795,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:795:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 796,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:796:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 797,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:797:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 798,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:798:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 831,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:831:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 835,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:835:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 837,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:837:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 841,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:841:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 842,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:842:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 842,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:842:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 843,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:843:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 844,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:844:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 845,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:845:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 846,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:846:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 847,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:847:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 848,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:848:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 849,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:849:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 850,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:850:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 851,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:851:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 852,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:852:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 853,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:853:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 854,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:854:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 855,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:855:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 856,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:856:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 857,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:857:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 858,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:858:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 859,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:859:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 860,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:860:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 861,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:861:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 862,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:862:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 863,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:863:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 864,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:864:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 865,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:865:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 866,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:866:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 867,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:867:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 868,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:868:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 869,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:869:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 870,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:870:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 871,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:871:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 872,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:872:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 873,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:873:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 874,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:874:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 875,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:875:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 876,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:876:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 877,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:877:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 878,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:878:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 879,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:879:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 880,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:880:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 881,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:881:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 882,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:882:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 883,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:883:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 884,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:884:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 885,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:885:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 886,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:886:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 887,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:887:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 888,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:888:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 889,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:889:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 890,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:890:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 891,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:891:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 892,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:892:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 893,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:893:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 894,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:894:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 895,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:895:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 896,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:896:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 897,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:897:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 902,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:902:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 903,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:903:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 904,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:904:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 905,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:905:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 906,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:906:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 914,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:914:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 914,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:914:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 915,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:915:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 918,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:918:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 921,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:921:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 923,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:923:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 926,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:926:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 928,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:928:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 929,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:929:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 930,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:930:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 931,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:931:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 931,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:931:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 931,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:931:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 934,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:934:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 937,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:937:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 938,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:938:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 939,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:939:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 940,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:940:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 941,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:941:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 942,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:942:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 943,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:943:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 944,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:944:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 945,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:945:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 946,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:946:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 947,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:947:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 948,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:948:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 949,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:949:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 950,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:950:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 951,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:951:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 952,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:952:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 953,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:953:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 954,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:954:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 955,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:955:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 956,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:956:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 957,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:957:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 959,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:959:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 967,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:967:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 967,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:967:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 968,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:968:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 970,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:970:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 974,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:974:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 974,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:974:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 975,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:975:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 977,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:977:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 979,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:979:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 980,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:980:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 980,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:980:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 981,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:981:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 986,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:986:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 987,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:987:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 988,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:988:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 989,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:989:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 990,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:990:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 991,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:991:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 992,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:992:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 993,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:993:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 994,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:994:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 995,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:995:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 996,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:996:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 997,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:997:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 998,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:998:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 999,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:999:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1000,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1000:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1001,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1001:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1002,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1002:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1003,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1003:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1004,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1004:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1005,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1005:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1006,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1006:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1007,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1007:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1008,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1008:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1009,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1009:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1011,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1011:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1011,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1011:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1012,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1012:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1013,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1013:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1015,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1015:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1016,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1016:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1018,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1018:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1018,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1018:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1023,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1023:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1025,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1025:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1028,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1028:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1030,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1030:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1031,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1031:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1032,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1032:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1033,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1033:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1033,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1033:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1033,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1033:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1036,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1036:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1039,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1039:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1040,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1040:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1041,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1041:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1042,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1042:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1043,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1043:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1044,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1044:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1045,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1045:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1046,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1046:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1047,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1047:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1048,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1048:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1049,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1049:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1050,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1050:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1051,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1051:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1052,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1052:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1053,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1053:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1054,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1054:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1055,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1055:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1056,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1056:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1057,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1057:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1058,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1058:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1059,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1059:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1060,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1060:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1061,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1061:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1062,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1062:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1063,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1063:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1064,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1064:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1065,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1065:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1066,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1066:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1067,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1067:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1068,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1068:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1069,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1069:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1070,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1070:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1071,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1071:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1104,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1104:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1108,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1108:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1110,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1110:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1112,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1112:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1113,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1113:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1113,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1113:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1114,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1114:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1119,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1119:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1120,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1120:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1121,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1121:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1122,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1122:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1123,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1123:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1124,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1124:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1125,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1125:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1126,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1126:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1127,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1127:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1128,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1128:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1129,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1129:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1130,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1130:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1131,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1131:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1132,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1132:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1133,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1133:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1134,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1134:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1136,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1136:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1136,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1136:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1137,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1137:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1138,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1138:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1140,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1140:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1141,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1141:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1143,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1143:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1143,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1143:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1148,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1148:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1150,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1150:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1153,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1153:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1155,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1155:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1156,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1156:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1157,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1157:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1158,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1158:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1158,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1158:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1158,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1158:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1161,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1161:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1164,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1164:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1165,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1165:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1166,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1166:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1167,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1167:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1168,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1168:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1169,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1169:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1170,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1170:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1171,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1171:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1172,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1172:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1173,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1173:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1174,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1174:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1175,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1175:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1176,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1176:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1177,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1177:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1178,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1178:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1179,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1179:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1180,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1180:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1181,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1181:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1182,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1182:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1183,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1183:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1184,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1184:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1185,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1185:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1186,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1186:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1187,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1187:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1188,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1188:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1189,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1189:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1190,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1190:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1191,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1191:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1192,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1192:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1193,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1193:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1194,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1194:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1195,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1195:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1196,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1196:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1229,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1229:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1233,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1233:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1235,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1235:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1239,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1239:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1240,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1240:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1240,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1240:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1241,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1241:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1243,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1243:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1245,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1245:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1246,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1246:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1246,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1246:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1247,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1247:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1252,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1252:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1253,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1253:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1253,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1253:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1254,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1254:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1259,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1259:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1260,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1260:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1261,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1261:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1262,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1262:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1263,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1263:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1264,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1264:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1265,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1265:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1266,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1266:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1267,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1267:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1268,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1268:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1269,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1269:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1270,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1270:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1271,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1271:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1272,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1272:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1273,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1273:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1275,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1275:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1276,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1276:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1277,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1277:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1279,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1279:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1280,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1280:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1282,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1282:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1282,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1282:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1287,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1287:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1289,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1289:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1292,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1292:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1294,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1294:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1295,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1295:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1296,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1296:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1297,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1297:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1297,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1297:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1297,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1297:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1300,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1300:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1303,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1303:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1304,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1304:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1305,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1305:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1306,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1306:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1307,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1307:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1308,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1308:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1309,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1309:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1310,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1310:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1311,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1311:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1312,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1312:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1313,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1313:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1314,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1314:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1315,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1315:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1316,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1316:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1317,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1317:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1318,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1318:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1319,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1319:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1320,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1320:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1321,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1321:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1322,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1322:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1323,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1323:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1324,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1324:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1325,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1325:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1326,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1326:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1327,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1327:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1328,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1328:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1329,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1329:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1330,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1330:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1331,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1331:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1332,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1332:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1333,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1333:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1334,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1334:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1335,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1335:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1336,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1336:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1337,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1337:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1338,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1338:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1339,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1339:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1340,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1340:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1341,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1341:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1342,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1342:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1343,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1343:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1344,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1344:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1352,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1352:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1352,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1352:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1353,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1353:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1355,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1355:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1359,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1359:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1360,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1360:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1360,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1360:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1361,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1361:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1362,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1362:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1364,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1364:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1367,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1367:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1368,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1368:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1369,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1369:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1370,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1370:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1371,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1371:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1372,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1372:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1373,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1373:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1374,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1374:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1375,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1375:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1376,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1376:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1377,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1377:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1378,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1378:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1379,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1379:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1380,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1380:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1381,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1381:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1382,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1382:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1383,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1383:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1384,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1384:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1385,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1385:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1386,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1386:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1387,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1387:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1388,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1388:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1389,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1389:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1390,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1390:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1391,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1391:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1392,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1392:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1393,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1393:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1394,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1394:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1395,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1395:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1396,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1396:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1397,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1397:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1398,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1398:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1399,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1399:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1400,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1400:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1401,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1401:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1402,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1402:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1403,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1403:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1404,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1404:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1405,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1405:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1406,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1406:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1407,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1407:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1408,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1408:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1409,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1409:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1410,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1410:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1411,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1411:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1412,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1412:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1413,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1413:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1414,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1414:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1415,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1415:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1416,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1416:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1417,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1417:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1418,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1418:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1419,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1419:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1420,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1420:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1421,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1421:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1422,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1422:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1423,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1423:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1424,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1424:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1425,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1425:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1426,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1426:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1427,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1427:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1428,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1428:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1429,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1429:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1430,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1430:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1431,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1431:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1435,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1435:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1435,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1435:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1436,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1436:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1438,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1438:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1442,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1442:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1442,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1442:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1443,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1443:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1445,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1445:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1447,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1447:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1448,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1448:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1448,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1448:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1449,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1449:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1454,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1454:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1455,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1455:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1456,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1456:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1457,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1457:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1458,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1458:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1459,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1459:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1460,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1460:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1461,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1461:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1462,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1462:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1463,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1463:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1464,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1464:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1465,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1465:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1466,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1466:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1467,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1467:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1468,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1468:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1469,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1469:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1470,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1470:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1471,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1471:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1472,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1472:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1473,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1473:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1474,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1474:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1475,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1475:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1476,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1476:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1477,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1477:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1478,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1478:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1480,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1480:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1480,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1480:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1481,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1481:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1482,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1482:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1484,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1484:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1485,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1485:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1487,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1487:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1487,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1487:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1492,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1492:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1494,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1494:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1497,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1497:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1499,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1499:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1500,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1500:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1501,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1501:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1502,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1502:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1502,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1502:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1502,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1502:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1505,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1505:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1508,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1508:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1509,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1509:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1510,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1510:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1511,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1511:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1512,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1512:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1513,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1513:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1514,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1514:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1515,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1515:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1516,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1516:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1517,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1517:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1518,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1518:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1519,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1519:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1520,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1520:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1521,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1521:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1522,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1522:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1523,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1523:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1524,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1524:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1525,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1525:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1526,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1526:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1527,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1527:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1528,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1528:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1529,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1529:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1530,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1530:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1531,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1531:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1532,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1532:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1533,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1533:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1534,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1534:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1535,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1535:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1536,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1536:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1537,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1537:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1538,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1538:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1539,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1539:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1540,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1540:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1573,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1573:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1577,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1577:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1579,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1579:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1581,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1581:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1582,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1582:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1582,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1582:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1583,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1583:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1588,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1588:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1589,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1589:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1590,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1590:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1591,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1591:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1592,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1592:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1593,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1593:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1594,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1594:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1595,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1595:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1596,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1596:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1597,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1597:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1598,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1598:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1599,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1599:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1600,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1600:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1601,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1601:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1602,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1602:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1603,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1603:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1605,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1605:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1605,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1605:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1606,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1606:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1607,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1607:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1609,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1609:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1610,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1610:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1612,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1612:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1612,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1612:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1617,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1617:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1619,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1619:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1622,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1622:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1624,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1624:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1625,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1625:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1626,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1626:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1627,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1627:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1627,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1627:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1627,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1627:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1630,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1630:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1633,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1633:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1634,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1634:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1635,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1635:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1636,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1636:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1637,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1637:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1638,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1638:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1639,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1639:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1640,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1640:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1641,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1641:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1642,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1642:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1643,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1643:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1644,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1644:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1645,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1645:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1646,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1646:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1647,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1647:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1648,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1648:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1649,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1649:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1650,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1650:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1651,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1651:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1652,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1652:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1653,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1653:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1654,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1654:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1655,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1655:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1656,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1656:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1657,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1657:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1658,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1658:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1659,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1659:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1660,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1660:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1661,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1661:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1662,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1662:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1663,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1663:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1664,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1664:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1665,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1665:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1698,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1698:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1702,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1702:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1704,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1704:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1706,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1706:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1707,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1707:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1707,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1707:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1708,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1708:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1709,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1709:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1710,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1710:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1711,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1711:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1712,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1712:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1713,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1713:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1714,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1714:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1715,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1715:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1716,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1716:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1717,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1717:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1718,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1718:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1719,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1719:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1720,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1720:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1721,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1721:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1722,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1722:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1723,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1723:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1724,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1724:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1725,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1725:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1726,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1726:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1727,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1727:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1728,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1728:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1729,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1729:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1730,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1730:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1731,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1731:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1732,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1732:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1733,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1733:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1734,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1734:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1735,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1735:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1736,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1736:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1737,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1737:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1738,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1738:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1739,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1739:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1740,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1740:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1741,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1741:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1742,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1742:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1743,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1743:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1744,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1744:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1745,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1745:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1746,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1746:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1747,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1747:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1748,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1748:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1749,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1749:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1750,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1750:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1751,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1751:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1752,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1752:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1753,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1753:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1754,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1754:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1755,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1755:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1756,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1756:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1757,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1757:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1758,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1758:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1759,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1759:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1760,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1760:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1761,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1761:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1762,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1762:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1763,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1763:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1764,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1764:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1765,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1765:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1766,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1766:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1767,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1767:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1768,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1768:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1769,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1769:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1770,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1770:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1771,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1771:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1772,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1772:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1773,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1773:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1777,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1777:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1777,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1777:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1778,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1778:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1780,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1780:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1784,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1784:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1784,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1784:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1785,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1785:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1787,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1787:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1789,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1789:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1790,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1790:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1790,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1790:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1791,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1791:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1796,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1796:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1797,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1797:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1798,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1798:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1799,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1799:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1800,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1800:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1801,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1801:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1802,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1802:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1803,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1803:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1804,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1804:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1805,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1805:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1806,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1806:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1807,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1807:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1808,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1808:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1809,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1809:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1810,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1810:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1811,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1811:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1812,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1812:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1813,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1813:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1814,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1814:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1815,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1815:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1816,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1816:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1817,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1817:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1818,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1818:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1820,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1820:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1820,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1820:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1821,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1821:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1822,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1822:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1824,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1824:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1825,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1825:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1827,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1827:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1827,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1827:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1832,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1832:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1834,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1834:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1837,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1837:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1839,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1839:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1840,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1840:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1841,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1841:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1842,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1842:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1842,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1842:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1842,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1842:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1845,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1845:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1848,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1848:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1849,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1849:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1850,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1850:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1851,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1851:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1852,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1852:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1853,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1853:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1854,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1854:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1855,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1855:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1856,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1856:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1857,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1857:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1858,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1858:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1859,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1859:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1860,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1860:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1861,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1861:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1862,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1862:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1863,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1863:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1864,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1864:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1865,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1865:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1866,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1866:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1867,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1867:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1868,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1868:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1869,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1869:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1870,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1870:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1871,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1871:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1872,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1872:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1873,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1873:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1874,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1874:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1875,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1875:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1876,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1876:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1877,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1877:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1878,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1878:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1879,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1879:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1880,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1880:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1913,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1913:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1917,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1917:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1919,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1919:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1921,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1921:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1922,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1922:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1922,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1922:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1923,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1923:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1928,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1928:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1929,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1929:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1930,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1930:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1931,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1931:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1932,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1932:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1933,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1933:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1934,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1934:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1935,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1935:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1936,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1936:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1937,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1937:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1938,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1938:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1939,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1939:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1940,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1940:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1941,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1941:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1942,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1942:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1943,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1943:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1944,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1944:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1945,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1945:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1947,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1947:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1947,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1947:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1948,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1948:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1949,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1949:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1951,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1951:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1952,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1952:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1954,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1954:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1954,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1954:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1959,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1959:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1961,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1961:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1964,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1964:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1966,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1966:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1967,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1967:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1968,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1968:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1969,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1969:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1969,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1969:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1969,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1969:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1972,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1972:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1975,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1975:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1976,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1976:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1977,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1977:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1978,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1978:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1979,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1979:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1980,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1980:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1981,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1981:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1982,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1982:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1983,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1983:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1984,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1984:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1985,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1985:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1986,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1986:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1987,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1987:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1988,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1988:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1989,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1989:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1990,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1990:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1991,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1991:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1992,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1992:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1993,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1993:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1994,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1994:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1995,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1995:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1996,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1996:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1997,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1997:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1998,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1998:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1999,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:1999:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2000,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2000:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2001,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2001:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2002,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2002:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2003,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2003:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2004,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2004:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2005,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2005:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2006,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2006:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2007,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2007:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2040,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2040:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2044,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2044:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2046,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2046:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2048,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2048:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2049,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2049:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2049,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2049:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2050,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2050:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2052,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2052:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2054,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2054:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2055,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2055:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2055,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2055:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2056,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2056:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2061,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2061:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2062,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2062:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2062,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2062:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2063,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2063:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2068,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2068:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2069,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2069:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2070,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2070:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2071,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2071:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2072,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2072:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2073,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2073:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2074,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2074:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2075,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2075:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2076,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2076:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2077,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2077:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2078,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2078:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2079,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2079:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2080,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2080:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2081,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2081:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2082,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2082:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2083,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2083:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2084,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2084:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2085,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2085:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2086,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2086:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2087,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2087:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2088,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2088:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2089,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2089:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2091,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2091:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2091,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2091:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2092,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2092:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2093,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2093:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2095,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2095:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2096,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2096:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2098,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2098:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2098,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2098:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2103,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2103:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2105,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2105:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2108,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2108:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2110,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2110:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2111,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2111:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2112,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2112:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2113,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2113:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2113,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2113:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2113,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2113:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2116,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2116:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2119,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2119:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2120,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2120:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2121,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2121:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2122,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2122:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2123,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2123:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2124,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2124:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2125,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2125:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2126,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2126:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2127,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2127:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2128,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2128:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2129,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2129:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2130,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2130:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2131,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2131:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2132,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2132:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2133,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2133:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2134,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2134:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2135,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2135:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2136,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2136:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2137,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2137:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2138,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2138:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2139,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2139:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2140,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2140:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2141,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2141:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2142,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2142:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2143,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2143:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2144,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2144:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2145,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2145:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2146,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2146:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2147,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2147:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2148,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2148:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2149,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2149:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2150,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2150:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2151,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2151:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2152,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2152:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2153,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2153:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2154,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2154:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2155,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2155:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2156,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2156:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2157,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2157:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2158,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2158:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2159,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2159:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2160,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2160:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2161,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2161:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2162,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2162:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2163,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2163:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2164,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2164:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2165,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2165:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2166,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2166:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2167,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2167:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2168,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2168:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2169,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2169:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2170,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2170:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2171,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2171:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2172,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2172:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2173,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2173:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2174,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2174:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2175,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2175:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2176,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2176:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2177,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2177:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2178,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2178:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2179,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2179:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2180,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2180:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2181,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2181:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2182,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2182:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2183,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2183:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2184,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2184:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2185,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2185:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2186,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2186:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2187,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2187:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2188,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2188:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2189,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2189:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2222,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2222:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2226,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2226:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2228,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2228:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2230,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2230:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2231,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2231:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2231,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2231:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2232,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2232:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2237,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2237:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2238,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2238:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2239,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2239:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2240,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2240:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2241,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2241:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2242,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2242:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2243,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2243:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2244,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2244:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2245,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2245:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2246,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2246:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2247,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2247:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2248,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2248:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2249,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2249:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2250,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2250:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2251,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2251:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2253,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2253:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2253,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2253:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2254,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2254:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2255,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2255:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2257,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2257:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2258,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2258:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2260,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2260:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2260,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2260:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2265,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2265:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2267,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2267:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2270,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2270:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2272,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2272:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2273,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2273:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2274,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2274:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2275,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2275:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2275,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2275:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2275,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2275:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2278,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2278:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2281,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2281:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2282,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2282:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2283,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2283:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2284,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2284:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2285,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2285:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2286,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2286:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2287,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2287:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2288,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2288:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2289,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2289:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2290,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2290:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2291,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2291:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2292,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2292:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2293,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2293:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2294,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2294:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2295,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2295:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2296,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2296:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2297,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2297:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2298,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2298:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2299,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2299:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2300,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2300:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2301,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2301:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2302,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2302:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2303,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2303:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2304,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2304:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2305,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2305:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2306,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2306:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2307,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2307:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2308,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2308:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2309,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2309:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2310,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2310:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2311,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2311:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2312,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2312:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2313,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2313:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2314,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2314:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2315,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2315:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2316,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2316:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2317,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2317:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2318,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2318:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2319,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2319:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2320,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2320:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2321,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2321:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2322,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2322:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2323,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2323:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2324,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2324:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2325,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2325:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2326,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2326:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2327,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2327:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2328,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2328:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2329,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2329:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2330,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2330:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2331,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2331:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2332,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2332:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2333,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2333:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2334,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2334:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2335,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2335:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2336,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2336:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2337,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2337:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2338,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2338:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2339,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2339:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2340,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2340:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2341,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2341:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2342,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2342:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2343,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2343:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2344,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2344:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2345,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2345:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2346,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2346:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2347,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2347:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2348,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2348:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2349,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2349:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2350,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2350:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2351,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2351:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2384,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2384:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2388,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2388:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2390,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2390:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2394,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2394:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2396,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2396:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2398,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2398:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2399,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2399:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2399,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2399:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2400,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2400:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2405,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2405:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2406,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2406:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2407,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2407:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2408,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2408:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2409,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2409:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2410,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2410:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2411,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2411:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2413,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2413:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2414,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2414:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2415,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2415:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2417,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2417:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2418,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2418:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2420,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2420:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2420,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2420:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2425,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2425:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2427,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2427:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2430,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2430:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2432,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2432:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2433,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2433:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2434,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2434:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2435,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2435:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2435,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2435:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2435,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2435:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2438,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2438:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2441,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2441:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2442,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2442:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2443,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2443:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2444,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2444:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2445,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2445:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2446,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2446:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2447,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2447:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2448,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2448:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2449,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2449:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2450,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2450:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2451,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2451:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2452,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2452:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2453,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2453:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2454,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2454:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2455,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2455:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2456,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2456:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2457,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2457:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2458,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2458:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2459,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2459:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2460,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2460:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2461,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2461:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2462,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2462:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2463,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2463:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2464,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2464:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2465,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2465:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2466,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2466:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2467,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2467:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2468,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2468:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2469,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2469:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2470,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2470:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2471,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2471:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2472,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2472:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2473,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2473:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2474,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2474:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2475,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2475:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2476,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2476:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2477,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2477:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2478,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2478:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2479,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2479:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2480,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2480:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2481,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2481:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2482,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2482:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2490,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2490:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2490,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2490:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2491,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2491:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2493,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2493:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2497,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2497:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2498,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2498:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2498,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2498:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2499,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2499:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2500,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2500:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2502,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2502:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2505,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2505:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2506,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2506:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2507,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2507:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2508,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2508:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2509,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2509:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2510,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2510:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2511,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2511:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2512,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2512:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2513,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2513:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2514,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2514:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2515,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2515:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2516,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2516:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2517,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2517:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2518,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2518:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2519,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2519:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2520,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2520:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2521,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2521:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2522,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2522:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2523,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2523:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2524,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2524:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2525,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2525:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2526,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2526:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2527,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2527:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2528,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2528:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2529,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2529:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2530,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2530:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2531,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2531:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2532,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2532:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2533,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2533:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2534,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2534:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2535,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2535:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2536,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2536:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2537,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2537:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2538,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2538:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2539,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2539:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2540,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2540:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2541,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2541:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2542,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2542:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2543,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2543:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2544,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2544:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2545,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2545:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2546,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2546:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2547,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2547:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2548,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2548:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2549,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2549:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2550,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2550:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2551,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2551:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2552,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2552:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2553,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2553:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2554,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2554:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2555,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2555:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2556,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2556:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2557,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2557:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2558,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2558:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2559,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2559:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2560,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2560:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2561,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2561:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2562,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2562:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2563,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2563:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2564,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2564:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2565,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2565:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2566,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2566:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2567,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2567:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2568,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2568:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2569,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2569:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2573,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2573:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2573,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2573:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2574,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2574:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2576,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2576:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2580,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2580:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2580,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2580:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2581,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2581:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2583,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2583:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2585,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2585:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2586,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2586:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2586,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2586:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2587,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2587:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2592,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2592:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2593,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2593:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2594,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2594:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2595,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2595:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2596,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2596:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2597,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2597:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2598,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2598:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2599,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2599:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2600,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2600:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2601,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2601:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2602,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2602:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2603,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2603:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2604,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2604:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2605,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2605:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2606,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2606:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2607,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2607:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2608,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2608:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2609,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2609:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2610,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2610:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2611,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2611:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2612,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2612:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2613,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2613:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2614,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2614:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2615,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2615:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2616,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2616:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2618,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2618:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2618,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2618:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2619,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2619:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2620,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2620:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2622,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2622:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2623,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2623:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2625,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2625:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2625,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2625:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2630,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2630:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2632,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2632:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2635,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2635:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2637,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2637:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2638,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2638:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2639,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2639:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2640,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2640:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2640,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2640:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2640,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2640:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2643,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2643:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2646,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2646:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2647,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2647:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2648,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2648:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2649,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2649:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2650,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2650:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2651,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2651:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2652,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2652:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2653,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2653:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2654,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2654:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2655,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2655:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2656,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2656:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2657,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2657:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2658,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2658:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2659,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2659:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2660,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2660:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2661,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2661:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2662,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2662:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2663,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2663:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2664,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2664:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2665,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2665:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2666,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2666:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2667,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2667:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2668,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2668:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2669,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2669:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2670,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2670:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2671,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2671:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2672,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2672:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2673,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2673:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2674,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2674:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2675,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2675:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2676,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2676:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2677,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2677:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2678,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2678:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2711,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2711:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2715,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2715:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2717,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2717:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2719,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2719:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2720,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2720:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2720,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2720:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2721,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2721:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2726,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2726:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2727,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2727:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2728,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2728:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2729,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2729:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2730,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2730:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2731,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2731:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2732,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2732:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2733,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2733:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2734,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2734:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2735,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2735:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2736,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2736:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2737,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2737:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2738,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2738:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2739,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2739:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2740,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2740:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2741,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2741:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2743,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2743:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2743,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2743:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2744,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2744:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2745,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2745:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2747,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2747:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2748,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2748:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2750,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2750:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2750,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2750:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2755,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2755:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2757,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2757:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2760,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2760:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2762,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2762:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2763,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2763:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2764,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2764:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2765,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2765:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2765,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2765:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2765,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2765:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2768,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2768:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2771,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2771:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2772,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2772:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2773,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2773:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2774,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2774:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2775,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2775:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2776,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2776:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2777,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2777:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2778,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2778:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2779,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2779:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2780,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2780:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2781,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2781:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2782,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2782:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2783,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2783:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2784,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2784:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2785,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2785:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2786,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2786:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2787,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2787:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2788,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2788:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2789,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2789:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2790,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2790:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2791,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2791:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2792,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2792:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2793,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2793:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2794,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2794:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2795,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2795:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2796,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2796:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2797,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2797:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2798,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2798:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2799,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2799:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2800,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2800:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2801,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2801:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2802,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2802:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2803,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2803:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2836,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2836:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2840,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2840:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2842,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2842:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2844,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2844:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2845,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2845:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2845,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2845:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2846,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2846:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2847,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2847:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2848,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2848:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2849,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2849:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2850,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2850:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2851,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2851:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2852,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2852:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2853,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2853:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2854,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2854:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2855,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2855:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2856,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2856:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2857,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2857:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2858,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2858:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2859,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2859:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2860,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2860:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2861,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2861:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2862,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2862:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2863,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2863:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2864,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2864:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2865,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2865:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2866,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2866:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2867,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2867:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2868,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2868:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2869,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2869:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2870,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2870:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2871,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2871:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2872,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2872:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2873,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2873:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2874,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2874:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2875,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2875:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2876,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2876:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2877,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2877:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2878,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2878:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2879,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2879:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2880,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2880:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2881,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2881:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2882,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2882:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2883,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2883:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2884,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2884:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2885,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2885:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2886,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2886:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2887,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2887:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2888,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2888:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2889,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2889:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2890,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2890:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2891,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2891:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2892,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2892:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2893,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2893:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2894,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2894:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2895,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2895:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2896,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2896:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2897,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2897:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2898,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2898:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2899,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2899:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2900,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2900:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2901,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2901:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2902,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2902:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2903,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2903:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2904,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2904:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2905,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2905:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2906,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2906:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2907,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2907:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2908,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2908:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2909,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2909:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2910,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2910:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2911,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2911:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2915,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2915:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2915,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2915:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2916,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2916:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2918,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2918:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2922,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2922:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2922,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2922:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2923,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2923:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2925,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2925:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2927,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2927:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2928,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2928:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2928,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2928:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2929,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2929:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2934,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2934:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2935,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2935:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2936,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2936:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2937,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2937:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2938,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2938:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2939,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2939:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2940,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2940:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2941,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2941:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2942,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2942:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2943,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2943:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2944,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2944:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2945,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2945:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2946,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2946:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2947,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2947:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2948,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2948:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2949,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2949:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2950,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2950:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2951,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2951:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2952,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2952:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2953,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2953:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2954,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2954:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2955,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2955:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2956,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2956:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2958,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2958:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2958,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2958:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2959,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2959:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2960,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2960:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2962,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2962:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2963,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2963:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2965,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2965:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2965,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2965:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2970,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2970:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2972,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2972:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2975,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2975:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2977,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2977:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2978,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2978:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2979,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2979:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2980,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2980:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2980,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2980:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2980,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2980:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2983,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2983:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2986,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2986:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2987,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2987:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2988,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2988:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2989,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2989:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2990,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2990:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2991,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2991:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2992,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2992:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2993,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2993:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2994,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2994:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2995,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2995:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2996,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2996:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2997,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2997:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2998,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2998:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2999,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:2999:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3000,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3000:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3001,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3001:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3002,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3002:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3003,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3003:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3004,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3004:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3005,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3005:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3006,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3006:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3007,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3007:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3008,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3008:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3009,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3009:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3010,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3010:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3011,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3011:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3012,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3012:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3013,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3013:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3014,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3014:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3015,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3015:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3016,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3016:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3017,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3017:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3018,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3018:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3051,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3051:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3055,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3055:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3057,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3057:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3059,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3059:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3060,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3060:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3060,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3060:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3061,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3061:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3066,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3066:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3067,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3067:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3068,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3068:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3069,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3069:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3070,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3070:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3071,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3071:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3072,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3072:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3073,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3073:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3074,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3074:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3075,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3075:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3076,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3076:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3077,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3077:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3078,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3078:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3079,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3079:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3080,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3080:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3081,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3081:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3082,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3082:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3083,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3083:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3085,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3085:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3085,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3085:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3086,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3086:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3087,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3087:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3089,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3089:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3090,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3090:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3092,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3092:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3092,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3092:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3097,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3097:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3099,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3099:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3102,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3102:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3104,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3104:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3105,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3105:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3106,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3106:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3107,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3107:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3107,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3107:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3107,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3107:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3110,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3110:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3113,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3113:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3114,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3114:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3115,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3115:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3116,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3116:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3117,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3117:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3118,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3118:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3119,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3119:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3120,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3120:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3121,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3121:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3122,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3122:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3123,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3123:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3124,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3124:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3125,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3125:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3126,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3126:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3127,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3127:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3128,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3128:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3129,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3129:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3130,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3130:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3131,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3131:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3132,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3132:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3133,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3133:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3134,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3134:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3135,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3135:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3136,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3136:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3137,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3137:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3138,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3138:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3139,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3139:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3140,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3140:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3141,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3141:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3142,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3142:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3143,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3143:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3144,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3144:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3145,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3145:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3178,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3178:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3182,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3182:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3184,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3184:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3186,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3186:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3187,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3187:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3187,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3187:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3188,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3188:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3190,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3190:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3192,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3192:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3193,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3193:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3193,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3193:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3194,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3194:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3199,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3199:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3200,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3200:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3200,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3200:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3201,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3201:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3206,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3206:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3207,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3207:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3208,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3208:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3209,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3209:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3210,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3210:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3211,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3211:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3212,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3212:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3213,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3213:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3214,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3214:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3215,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3215:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3216,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3216:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3217,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3217:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3218,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3218:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3219,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3219:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3220,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3220:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3221,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3221:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3222,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3222:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3223,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3223:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3224,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3224:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3225,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3225:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3226,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3226:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3227,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3227:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3229,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3229:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3229,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3229:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3230,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3230:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3231,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3231:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3233,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3233:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3234,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3234:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3236,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3236:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3236,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3236:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3241,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3241:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3243,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3243:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3246,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3246:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3248,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3248:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3249,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3249:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3250,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3250:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3251,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3251:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3251,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3251:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3251,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3251:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3254,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3254:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3257,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3257:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3258,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3258:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3259,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3259:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3260,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3260:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3261,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3261:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3262,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3262:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3263,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3263:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3264,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3264:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3265,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3265:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3266,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3266:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3267,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3267:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3268,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3268:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3269,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3269:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3270,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3270:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3271,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3271:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3272,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3272:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3273,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3273:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3274,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3274:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3275,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3275:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3276,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3276:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3277,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3277:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3278,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3278:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3279,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3279:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3280,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3280:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3281,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3281:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3282,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3282:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3283,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3283:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3284,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3284:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3285,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3285:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3286,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3286:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3287,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3287:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3288,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3288:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3289,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3289:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3290,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3290:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3291,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3291:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3292,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3292:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3293,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3293:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3294,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3294:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3295,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3295:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3296,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3296:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3297,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3297:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3298,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3298:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3299,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3299:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3300,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3300:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3301,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3301:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3302,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3302:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3303,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3303:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3304,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3304:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3305,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3305:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3306,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3306:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3307,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3307:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3308,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3308:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3309,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3309:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3310,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3310:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3311,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3311:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3312,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3312:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3313,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3313:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3314,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3314:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3315,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3315:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3316,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3316:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3317,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3317:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3318,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3318:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3319,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3319:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3320,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3320:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3321,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3321:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3322,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3322:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3323,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3323:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3324,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3324:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3325,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3325:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3326,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3326:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3327,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3327:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3360,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3360:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3364,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3364:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3366,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3366:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3368,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3368:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3369,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3369:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3369,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3369:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3370,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3370:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3375,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3375:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3376,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3376:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3377,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3377:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3378,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3378:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3379,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3379:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3380,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3380:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3381,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3381:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3382,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3382:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3383,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3383:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3384,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3384:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3385,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3385:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3386,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3386:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3387,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3387:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3388,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3388:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3389,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3389:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3391,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3391:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3391,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3391:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3392,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3392:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3393,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3393:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3395,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3395:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3396,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3396:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3398,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3398:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3398,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3398:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3403,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3403:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3405,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3405:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3408,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3408:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3410,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3410:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3411,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3411:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3412,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3412:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3413,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3413:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3413,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3413:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3413,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3413:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3416,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3416:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3419,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3419:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3420,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3420:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3421,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3421:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3422,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3422:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3423,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3423:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3424,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3424:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3425,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3425:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3426,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3426:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3427,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3427:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3428,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3428:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3429,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3429:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3430,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3430:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3431,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3431:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3432,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3432:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3433,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3433:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3434,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3434:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3435,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3435:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3436,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3436:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3437,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3437:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3438,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3438:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3439,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3439:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3440,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3440:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3441,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3441:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3442,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3442:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3443,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3443:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3444,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3444:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3445,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3445:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3446,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3446:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3447,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3447:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3448,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3448:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3449,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3449:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3450,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3450:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3451,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3451:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3452,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3452:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3453,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3453:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3454,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3454:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3455,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3455:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3456,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3456:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3457,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3457:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3458,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3458:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3459,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3459:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3460,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3460:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3461,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3461:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3462,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3462:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3463,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3463:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3464,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3464:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3465,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3465:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3466,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3466:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3467,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3467:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3468,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3468:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3469,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3469:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3470,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3470:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3471,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3471:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3472,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3472:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3473,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3473:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3474,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3474:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3475,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3475:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3476,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3476:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3477,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3477:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3478,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3478:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3479,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3479:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3480,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3480:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3481,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3481:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3482,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3482:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3483,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3483:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3484,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3484:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3485,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3485:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3486,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3486:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3487,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3487:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3488,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3488:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3489,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3489:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3522,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3522:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3526,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3526:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3528,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3528:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3532,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3532:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3534,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3534:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3536,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3536:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3537,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3537:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3537,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3537:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3538,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3538:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3543,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3543:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3544,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3544:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3545,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3545:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3546,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3546:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3547,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3547:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3548,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3548:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3549,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3549:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3550,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3550:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3551,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3551:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3552,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3552:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3553,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3553:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3554,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3554:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3555,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3555:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3556,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3556:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3557,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3557:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3558,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3558:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3559,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3559:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3560,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3560:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3561,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3561:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3563,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3563:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3563,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3563:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3564,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3564:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3565,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3565:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3567,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3567:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3568,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3568:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3570,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3570:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3570,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3570:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3575,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3575:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3577,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3577:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3580,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3580:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3582,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3582:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3583,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3583:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3584,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3584:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3585,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3585:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3585,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3585:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3585,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3585:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3588,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3588:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3591,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3591:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3592,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3592:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3593,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3593:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3594,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3594:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3595,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3595:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3596,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3596:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3597,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3597:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3598,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3598:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3599,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3599:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3600,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3600:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3601,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3601:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3602,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3602:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3603,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3603:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3604,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3604:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3605,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3605:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3606,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3606:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3607,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3607:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3608,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3608:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3609,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3609:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3610,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3610:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3611,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3611:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3612,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3612:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3613,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3613:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3614,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3614:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3615,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3615:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3616,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3616:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3617,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3617:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3618,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3618:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3619,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3619:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3620,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3620:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3621,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3621:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3622,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3622:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3623,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3623:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3624,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3624:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3625,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3625:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3626,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3626:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3627,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3627:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3628,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3628:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3629,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3629:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3630,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3630:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3631,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3631:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3632,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3632:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3640,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3640:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3640,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3640:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3641,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3641:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3643,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3643:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3647,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3647:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3648,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3648:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3648,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3648:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3649,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3649:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3650,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3650:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3652,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3652:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3655,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3655:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3656,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3656:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3657,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3657:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3658,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3658:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3659,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3659:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3660,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3660:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3661,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3661:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3662,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3662:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3663,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3663:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3664,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3664:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3665,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3665:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3666,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3666:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3667,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3667:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3668,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3668:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3669,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3669:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3670,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3670:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3671,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3671:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3672,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3672:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3673,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3673:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3674,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3674:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3675,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3675:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3676,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3676:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3677,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3677:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3678,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3678:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3679,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3679:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3680,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3680:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3681,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3681:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3682,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3682:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3683,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3683:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3684,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3684:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3685,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3685:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3686,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3686:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3687,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3687:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3688,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3688:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3689,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3689:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3690,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3690:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3691,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3691:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3692,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3692:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3693,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3693:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3694,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3694:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3695,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3695:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3696,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3696:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3697,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3697:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3698,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3698:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3699,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3699:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3700,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3700:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3701,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3701:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3702,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3702:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3703,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3703:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3704,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3704:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3705,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3705:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3706,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3706:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3707,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3707:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3708,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3708:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3709,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3709:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3710,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3710:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3711,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3711:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3712,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3712:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3713,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3713:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3714,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3714:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3715,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3715:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3716,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3716:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3717,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3717:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3718,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3718:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3719,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3719:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3723,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3723:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3723,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3723:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3724,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3724:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3726,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3726:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3730,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3730:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3730,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3730:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3731,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3731:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3733,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3733:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3735,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3735:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3736,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3736:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3736,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3736:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3737,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3737:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3742,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3742:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3743,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3743:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3744,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3744:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3745,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3745:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3746,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3746:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3747,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3747:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3748,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3748:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3749,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3749:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3750,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3750:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3751,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3751:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3752,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3752:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3753,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3753:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3754,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3754:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3755,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3755:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3756,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3756:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3757,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3757:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3758,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3758:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3759,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3759:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3760,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3760:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3761,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3761:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3762,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3762:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3763,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3763:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3764,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3764:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3765,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3765:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3766,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3766:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3768,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3768:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3768,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3768:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3769,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3769:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3770,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3770:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3772,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3772:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3773,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3773:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3775,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3775:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3775,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3775:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3780,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3780:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3782,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3782:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3785,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3785:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3787,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3787:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3788,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3788:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3789,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3789:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3790,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3790:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3790,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3790:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3790,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3790:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3793,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3793:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3796,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3796:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3797,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3797:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3798,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3798:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3799,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3799:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3800,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3800:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3801,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3801:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3802,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3802:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3803,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3803:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3804,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3804:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3805,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3805:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3806,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3806:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3807,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3807:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3808,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3808:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3809,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3809:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3810,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3810:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3811,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3811:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3812,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3812:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3813,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3813:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3814,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3814:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3815,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3815:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3816,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3816:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3817,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3817:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3818,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3818:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3819,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3819:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3820,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3820:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3821,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3821:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3822,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3822:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3823,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3823:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3824,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3824:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3825,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3825:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3826,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3826:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3827,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3827:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3828,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3828:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3861,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3861:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3865,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3865:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3867,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3867:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3869,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3869:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3870,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3870:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3870,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3870:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3871,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3871:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3876,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3876:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3877,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3877:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3878,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3878:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3879,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3879:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3880,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3880:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3881,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3881:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3882,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3882:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3883,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3883:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3884,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3884:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3885,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3885:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3886,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3886:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3887,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3887:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3888,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3888:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3889,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3889:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3890,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3890:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3891,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3891:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3893,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3893:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3893,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3893:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3894,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3894:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3895,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3895:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3897,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3897:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3898,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3898:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3900,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3900:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3900,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3900:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3905,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3905:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3907,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3907:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3910,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3910:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3912,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3912:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3913,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3913:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3914,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3914:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3915,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3915:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3915,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3915:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3915,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3915:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3918,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3918:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3921,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3921:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3922,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3922:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3923,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3923:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3924,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3924:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3925,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3925:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3926,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3926:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3927,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3927:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3928,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3928:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3929,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3929:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3930,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3930:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3931,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3931:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3932,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3932:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3933,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3933:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3934,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3934:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3935,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3935:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3936,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3936:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3937,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3937:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3938,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3938:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3939,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3939:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3940,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3940:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3941,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3941:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3942,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3942:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3943,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3943:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3944,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3944:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3945,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3945:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3946,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3946:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3947,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3947:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3948,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3948:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3949,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3949:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3950,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3950:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3951,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3951:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3952,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3952:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3953,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3953:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3986,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3986:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3990,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3990:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3992,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3992:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3994,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3994:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3995,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3995:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3995,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3995:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3996,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3996:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3997,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3997:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3998,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3998:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3999,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:3999:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4000,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4000:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4001,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4001:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4002,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4002:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4003,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4003:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4004,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4004:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4005,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4005:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4006,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4006:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4007,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4007:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4008,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4008:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4009,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4009:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4010,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4010:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4011,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4011:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4012,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4012:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4013,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4013:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4014,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4014:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4015,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4015:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4016,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4016:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4017,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4017:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4018,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4018:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4019,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4019:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4020,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4020:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4021,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4021:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4022,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4022:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4023,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4023:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4024,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4024:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4025,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4025:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4026,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4026:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4027,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4027:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4028,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4028:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4029,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4029:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4030,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4030:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4031,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4031:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4032,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4032:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4033,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4033:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4034,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4034:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4035,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4035:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4036,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4036:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4037,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4037:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4038,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4038:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4039,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4039:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4040,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4040:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4041,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4041:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4042,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4042:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4043,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4043:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4044,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4044:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4045,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4045:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4046,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4046:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4047,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4047:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4048,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4048:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4049,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4049:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4050,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4050:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4051,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4051:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4052,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4052:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4053,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4053:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4054,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4054:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4055,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4055:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4056,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4056:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4057,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4057:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4058,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4058:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4059,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4059:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4060,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4060:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4061,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4061:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4065,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4065:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4065,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4065:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4066,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4066:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4068,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4068:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4072,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4072:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4072,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4072:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4073,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4073:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4075,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4075:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4077,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4077:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4078,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4078:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4078,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4078:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4079,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4079:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4084,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4084:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4085,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4085:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4086,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4086:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4087,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4087:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4088,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4088:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4089,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4089:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4090,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4090:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4091,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4091:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4092,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4092:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4093,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4093:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4094,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4094:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4095,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4095:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4096,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4096:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4097,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4097:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4098,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4098:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4099,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4099:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4100,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4100:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4101,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4101:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4102,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4102:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4103,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4103:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4104,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4104:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4105,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4105:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4106,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4106:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4108,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4108:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4108,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4108:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4109,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4109:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4110,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4110:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4112,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4112:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4113,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4113:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4115,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4115:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4115,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4115:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4120,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4120:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4122,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4122:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4125,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4125:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4127,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4127:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4128,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4128:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4129,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4129:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4130,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4130:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4130,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4130:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4130,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4130:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4133,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4133:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4136,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4136:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4137,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4137:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4138,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4138:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4139,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4139:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4140,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4140:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4141,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4141:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4142,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4142:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4143,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4143:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4144,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4144:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4145,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4145:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4146,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4146:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4147,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4147:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4148,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4148:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4149,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4149:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4150,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4150:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4151,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4151:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4152,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4152:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4153,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4153:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4154,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4154:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4155,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4155:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4156,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4156:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4157,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4157:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4158,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4158:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4159,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4159:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4160,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4160:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4161,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4161:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4162,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4162:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4163,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4163:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4164,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4164:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4165,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4165:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4166,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4166:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4167,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4167:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4168,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4168:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4201,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4201:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4205,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4205:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4207,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4207:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4209,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4209:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4210,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4210:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4210,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4210:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4211,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4211:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4216,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4216:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4217,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4217:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4218,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4218:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4219,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4219:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4220,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4220:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4221,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4221:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4222,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4222:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4223,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4223:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4224,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4224:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4225,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4225:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4226,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4226:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4227,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4227:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4228,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4228:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4229,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4229:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4230,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4230:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4231,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4231:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4232,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4232:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4233,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4233:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4235,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4235:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4235,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4235:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4236,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4236:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4237,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4237:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4239,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4239:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4240,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4240:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4242,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4242:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4242,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4242:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4247,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4247:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4249,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4249:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4252,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4252:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4254,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4254:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4255,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4255:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4256,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4256:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4257,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4257:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4257,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4257:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4257,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4257:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4260,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4260:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4263,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4263:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4264,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4264:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4265,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4265:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4266,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4266:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4267,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4267:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4268,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4268:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4269,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4269:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4270,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4270:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4271,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4271:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4272,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4272:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4273,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4273:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4274,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4274:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4275,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4275:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4276,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4276:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4277,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4277:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4278,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4278:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4279,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4279:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4280,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4280:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4281,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4281:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4282,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4282:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4283,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4283:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4284,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4284:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4285,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4285:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4286,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4286:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4287,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4287:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4288,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4288:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4289,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4289:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4290,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4290:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4291,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4291:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4292,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4292:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4293,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4293:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4294,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4294:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4295,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4295:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4328,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4328:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4332,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4332:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4334,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4334:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4336,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4336:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4337,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4337:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4337,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4337:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4338,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4338:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4340,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4340:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4342,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4342:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4343,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4343:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4343,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4343:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4344,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4344:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4349,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4349:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4350,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4350:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4350,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4350:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4351,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4351:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4356,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4356:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4357,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4357:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4358,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4358:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4359,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4359:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4360,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4360:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4361,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4361:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4362,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4362:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4363,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4363:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4364,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4364:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4365,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4365:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4366,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4366:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4367,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4367:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4368,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4368:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4369,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4369:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4370,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4370:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4371,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4371:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4372,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4372:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4373,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4373:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4374,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4374:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4375,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4375:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4376,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4376:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4377,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4377:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4379,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4379:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4379,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4379:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4380,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4380:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4381,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4381:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4383,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4383:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4384,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4384:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4386,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4386:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4386,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4386:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4391,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4391:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4393,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4393:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4396,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4396:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4398,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4398:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4399,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4399:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4400,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4400:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4401,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4401:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4401,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4401:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4401,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4401:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4404,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4404:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4407,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4407:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4408,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4408:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4409,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4409:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4410,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4410:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4411,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4411:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4412,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4412:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4413,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4413:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4414,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4414:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4415,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4415:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4416,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4416:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4417,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4417:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4418,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4418:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4419,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4419:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4420,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4420:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4421,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4421:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4422,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4422:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4423,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4423:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4424,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4424:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4425,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4425:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4426,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4426:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4427,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4427:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4428,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4428:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4429,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4429:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4430,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4430:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4431,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4431:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4432,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4432:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4433,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4433:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4434,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4434:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4435,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4435:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4436,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4436:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4437,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4437:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4438,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4438:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4439,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4439:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4440,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4440:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4441,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4441:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4442,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4442:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4443,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4443:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4444,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4444:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4445,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4445:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4446,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4446:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4447,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4447:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4448,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4448:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4449,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4449:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4450,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4450:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4451,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4451:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4452,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4452:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4453,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4453:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4454,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4454:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4455,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4455:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4456,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4456:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4457,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4457:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4458,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4458:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4459,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4459:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4460,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4460:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4461,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4461:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4462,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4462:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4463,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4463:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4464,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4464:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4465,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4465:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4466,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4466:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4467,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4467:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4468,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4468:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4469,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4469:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4470,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4470:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4471,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4471:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4472,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4472:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4473,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4473:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4474,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4474:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4475,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4475:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4476,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4476:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4477,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4477:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4510,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4510:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4514,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4514:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4516,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4516:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4518,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4518:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4519,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4519:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4519,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4519:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4520,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4520:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4525,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4525:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4526,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4526:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4527,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4527:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4528,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4528:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4529,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4529:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4530,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4530:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4531,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4531:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4532,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4532:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4533,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4533:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4534,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4534:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4535,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4535:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4536,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4536:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4537,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4537:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4538,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4538:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4539,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4539:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4541,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4541:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4541,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4541:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4542,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4542:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4543,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4543:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4545,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4545:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4546,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4546:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4548,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4548:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4548,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4548:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4553,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4553:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4555,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4555:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4558,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4558:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4560,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4560:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4561,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4561:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4562,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4562:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4563,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4563:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4563,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4563:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4563,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4563:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4566,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4566:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4569,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4569:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4570,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4570:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4571,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4571:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4572,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4572:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4573,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4573:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4574,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4574:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4575,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4575:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4576,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4576:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4577,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4577:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4578,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4578:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4579,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4579:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4580,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4580:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4581,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4581:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4582,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4582:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4583,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4583:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4584,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4584:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4585,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4585:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4586,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4586:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4587,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4587:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4588,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4588:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4589,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4589:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4590,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4590:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4591,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4591:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4592,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4592:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4593,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4593:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4594,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4594:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4595,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4595:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4596,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4596:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4597,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4597:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4598,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4598:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4599,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4599:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4600,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4600:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4601,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4601:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4602,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4602:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4603,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4603:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4604,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4604:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4605,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4605:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4606,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4606:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4607,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4607:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4608,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4608:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4609,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4609:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4610,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4610:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4611,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4611:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4612,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4612:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4613,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4613:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4614,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4614:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4615,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4615:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4616,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4616:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4617,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4617:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4618,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4618:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4619,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4619:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4620,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4620:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4621,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4621:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4622,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4622:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4623,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4623:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4624,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4624:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4625,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4625:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4626,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4626:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4627,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4627:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4628,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4628:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4629,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4629:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4630,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4630:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4631,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4631:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4632,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4632:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4633,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4633:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4634,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4634:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4635,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4635:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4636,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4636:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4637,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4637:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4638,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4638:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4639,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4639:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4672,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4672:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4676,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4676:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4678,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4678:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4682,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4682:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4684,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4684:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4692,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4692:  Missing spaces around >  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4694,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4694:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4694,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4694:  Is this a non-const reference? If so, make const or use a pointer: int& numroots  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4695,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4695:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4702,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4702:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4707,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4707:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4708,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4708:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4708,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4708:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4708,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4708:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4711,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4711:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4715,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4715:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4717,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4717:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4722,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4722:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4725,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4725:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4726,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4726:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4727,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4727:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4736,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4736:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4736,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4736:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4743,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4743:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4744,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4744:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4744,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4744:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4745,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4745:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4747,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4747:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4749,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4749:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4750,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4750:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4750,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4750:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4756,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4756:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4756,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4756:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4759,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4759:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4760,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4760:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4760,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4760:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4771,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4771:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4771,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4771:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4771,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4771:  Is this a non-const reference? If so, make const or use a pointer: IkSolutionListBase<IkReal>& solutions  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4773,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4773:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4776,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4776:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4778,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4778:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4781,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4781:  Namespace should be terminated with '// namespace IKFAST_NAMESPACE'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4781,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4781:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not include the C standard headers. Use the C++ headers instead.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4785,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4785:  Include 'cstdio' instead of 'stdio.h'.  [build/include] [5]",
    "tags": ["hicpp","code-standards","headers","include","preprocessor","deprecation","c"]
  },
  {
    "rule": "Do not include the C standard headers. Use the C++ headers instead.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4786,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4786:  Include 'cstdlib' instead of 'stdlib.h'.  [build/include] [5]",
    "tags": ["hicpp","code-standards","headers","include","preprocessor","deprecation","c"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4788,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4788:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4791,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4791:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4792,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4792:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4793,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4793:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4794,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4794:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4796,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4796:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4796,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4796:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4802,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4802:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4803,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4803:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4803,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4803:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4804,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4804:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4804,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4804:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4805,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4805:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4805,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4805:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4806,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4806:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4808,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4808:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4810,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4810:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4810,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4810:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4811,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4811:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4815,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4815:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4817,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4817:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4819,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4819:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4821,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4821:  Missing spaces around >  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4821,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4821:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4822,
    "function": null,
    "comment": "turtlebot_arm_arm_ikfast_solver.cpp:4822:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Ensure that no expression is redundant.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 284,
    "function": null,
    "comment": "Variable 'px' is reassigned a value before the old one has been used. Make sure that this variable is not used like a semaphore in a threading environment before simplifying this code.",
    "tags": ["hicpp","code-standards","redundancy"]
  },
  {
    "rule": "Ensure that no expression is redundant.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 284,
    "function": null,
    "comment": "Variable 'py' is reassigned a value before the old one has been used. Make sure that this variable is not used like a semaphore in a threading environment before simplifying this code.",
    "tags": ["hicpp","code-standards","redundancy"]
  },
  {
    "rule": "Ensure that no expression is redundant.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 284,
    "function": null,
    "comment": "Variable 'pz' is reassigned a value before the old one has been used. Make sure that this variable is not used like a semaphore in a threading environment before simplifying this code.",
    "tags": ["hicpp","code-standards","redundancy"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 83,
    "function": null,
    "comment": "Member variable 'IKFastKinematicsPlugin::num_joints_' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 76,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 77,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 78,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 79,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 125,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 141,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 159,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 534,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 553,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 572,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Do not use default arguments.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 95,
    "function": null,
    "comment": "Found function with default arguments.",
    "tags": ["hicpp","code-standards","functions","parameters","default-arguments","arguments"]
  },
  {
    "rule": "Do not use default arguments.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 109,
    "function": null,
    "comment": "Found function with default arguments.",
    "tags": ["hicpp","code-standards","functions","parameters","default-arguments","arguments"]
  },
  {
    "rule": "Do not use default arguments.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 125,
    "function": null,
    "comment": "Found function with default arguments.",
    "tags": ["hicpp","code-standards","functions","parameters","default-arguments","arguments"]
  },
  {
    "rule": "Do not use default arguments.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 141,
    "function": null,
    "comment": "Found function with default arguments.",
    "tags": ["hicpp","code-standards","functions","parameters","default-arguments","arguments"]
  },
  {
    "rule": "Do not use default arguments.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 159,
    "function": null,
    "comment": "Found function with default arguments.",
    "tags": ["hicpp","code-standards","functions","parameters","default-arguments","arguments"]
  },
  {
    "rule": "Do not use std::vector<bool>. It does not conform to the requirements of a container.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 69,
    "function": null,
    "comment": "Found std::vector of bool.",
    "tags": ["hicpp","code-standards","misra-cpp","std-vector","boolean"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 26,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 74,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 75,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 76,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 77,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 78,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 79,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 262,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 263,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 264,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 266,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 268,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 277,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 323,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 330,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 340,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 348,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 349,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 353,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 371,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 381,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 408,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 415,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 519,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 526,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 622,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 629,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 749,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 756,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 920,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 927,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1022,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1029,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1147,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1154,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1286,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1293,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1491,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1498,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1616,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1623,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1831,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1838,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1958,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 1965,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2102,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2109,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2264,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2271,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2424,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2431,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2629,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2636,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2754,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2761,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2969,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 2976,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3096,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3103,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3240,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3247,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3402,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3409,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3574,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3581,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3779,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3786,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3904,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 3911,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4119,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4126,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4246,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4253,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4390,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4397,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4552,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4559,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4694,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4702,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4711,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4715,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4717,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4722,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4725,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4743,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4748,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4749,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 71,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 195,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 200,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 205,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 206,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 267,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 318,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 325,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 357,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 379,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 424,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 428,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 445,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 448,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 451,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 512,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 515,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 660,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 667,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 668,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 694,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 702,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 708,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 770,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 772,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 781,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 787,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 794,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4790,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4806,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4817,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4822,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4778,
    "function": null,
    "comment": "The function 'GetIkFastVersion' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 266,
    "function": null,
    "comment": "The function 'GetIkRealSize' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 268,
    "function": null,
    "comment": "The function 'GetIkType' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4776,
    "function": null,
    "comment": "The function 'GetKinematicsHash' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 94,
    "function": null,
    "comment": "The function 'IKlog' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 165,
    "function": null,
    "comment": "The function 'IKsqrt' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 421,
    "function": null,
    "comment": "The function 'getClosestSolution' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 487,
    "function": null,
    "comment": "The function 'getPositionFK' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 210,
    "function": null,
    "comment": "The function 'initialize' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "ikfast.h",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "ikfast.h",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  },
  {
    "rule": "Maximum coupling between objects: 5",
    "file": "ikfast.h",
    "line": null,
    "function": null,
    "comment": "CBO is greater than 5, IkFastFunctions, 9",
    "tags": ["metrics","nasa-satc","ros","coupling"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum coupling between objects: 5",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": null,
    "function": null,
    "comment": "CBO is greater than 5, IKFastKinematicsPlugin, 11",
    "tags": ["metrics","nasa-satc","ros","coupling"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 206,
    "function": "getCount",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 755,
    "function": "getPositionIK",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 185,
    "function": "initialize",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 15",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 185,
    "function": "initialize",
    "comment": "CC is greater than 15",
    "tags": ["metrics","ros","cyclomatic-complexity","kth"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 582,
    "function": "searchPositionIK",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 15",
    "file": "turtlebot_arm_arm_ikfast_moveit_plugin.cpp",
    "line": 582,
    "function": "searchPositionIK",
    "comment": "CC is greater than 15",
    "tags": ["metrics","ros","cyclomatic-complexity","kth"]
  },
  {
    "rule": "Minimum lines of comments: 20%",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is below 20%",
    "tags": ["metrics","nasa-satc","his","uai","ros","comments","comment-ratio"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 275,
    "function": "ComputeIk",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 15",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 275,
    "function": "ComputeIk",
    "comment": "CC is greater than 15",
    "tags": ["metrics","ros","cyclomatic-complexity","kth"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4694,
    "function": "polyroots4",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 15",
    "file": "turtlebot_arm_arm_ikfast_solver.cpp",
    "line": 4694,
    "function": "polyroots4",
    "comment": "CC is greater than 15",
    "tags": ["metrics","ros","cyclomatic-complexity","kth"]
  }
]