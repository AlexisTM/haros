[
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "block_detection_action_server.cpp",
    "line": 34,
    "function": null,
    "comment": "block_detection_action_server.cpp:34:  Include 'actionlib/server/simple_action_server.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "block_detection_action_server.cpp",
    "line": 40,
    "function": null,
    "comment": "block_detection_action_server.cpp:40:  Include 'pcl/point_cloud.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "block_detection_action_server.cpp",
    "line": 42,
    "function": null,
    "comment": "block_detection_action_server.cpp:42:  Include 'pcl/filters/passthrough.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "block_detection_action_server.cpp",
    "line": 44,
    "function": null,
    "comment": "block_detection_action_server.cpp:44:  Include 'pcl/filters/extract_indices.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not include the same file twice.",
    "file": "block_detection_action_server.cpp",
    "line": 49,
    "function": null,
    "comment": "block_detection_action_server.cpp:49:  'pcl/segmentation/extract_clusters.h' already included at block_detection_action_server.cpp:43  [build/include] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "block_detection_action_server.cpp",
    "line": 55,
    "function": null,
    "comment": "block_detection_action_server.cpp:55:  Include 'algorithm' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 58,
    "function": null,
    "comment": "block_detection_action_server.cpp:58:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 61,
    "function": null,
    "comment": "block_detection_action_server.cpp:61:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "block_detection_action_server.cpp",
    "line": 62,
    "function": null,
    "comment": "block_detection_action_server.cpp:62:  private: should be indented +1 space inside class BlockDetectionServer  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 63,
    "function": null,
    "comment": "block_detection_action_server.cpp:63:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "block_detection_action_server.cpp",
    "line": 63,
    "function": null,
    "comment": "block_detection_action_server.cpp:63:  Do not leave a blank line after 'private:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 65,
    "function": null,
    "comment": "block_detection_action_server.cpp:65:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 72,
    "function": null,
    "comment": "block_detection_action_server.cpp:72:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 74,
    "function": null,
    "comment": "block_detection_action_server.cpp:74:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 79,
    "function": null,
    "comment": "block_detection_action_server.cpp:79:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 81,
    "function": null,
    "comment": "block_detection_action_server.cpp:81:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 83,
    "function": null,
    "comment": "block_detection_action_server.cpp:83:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "block_detection_action_server.cpp",
    "line": 84,
    "function": null,
    "comment": "block_detection_action_server.cpp:84:  public: should be indented +1 space inside class BlockDetectionServer  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 85,
    "function": null,
    "comment": "block_detection_action_server.cpp:85:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "block_detection_action_server.cpp",
    "line": 85,
    "function": null,
    "comment": "block_detection_action_server.cpp:85:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 87,
    "function": null,
    "comment": "block_detection_action_server.cpp:87:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 89,
    "function": null,
    "comment": "block_detection_action_server.cpp:89:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 90,
    "function": null,
    "comment": "block_detection_action_server.cpp:90:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 91,
    "function": null,
    "comment": "block_detection_action_server.cpp:91:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 94,
    "function": null,
    "comment": "block_detection_action_server.cpp:94:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 95,
    "function": null,
    "comment": "block_detection_action_server.cpp:95:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 97,
    "function": null,
    "comment": "block_detection_action_server.cpp:97:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 99,
    "function": null,
    "comment": "block_detection_action_server.cpp:99:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 100,
    "function": null,
    "comment": "block_detection_action_server.cpp:100:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 101,
    "function": null,
    "comment": "block_detection_action_server.cpp:101:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 102,
    "function": null,
    "comment": "block_detection_action_server.cpp:102:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 106,
    "function": null,
    "comment": "block_detection_action_server.cpp:106:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 110,
    "function": null,
    "comment": "block_detection_action_server.cpp:110:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 112,
    "function": null,
    "comment": "block_detection_action_server.cpp:112:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 121,
    "function": null,
    "comment": "block_detection_action_server.cpp:121:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_detection_action_server.cpp",
    "line": 127,
    "function": null,
    "comment": "block_detection_action_server.cpp:127:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 127,
    "function": null,
    "comment": "block_detection_action_server.cpp:127:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 128,
    "function": null,
    "comment": "block_detection_action_server.cpp:128:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 131,
    "function": null,
    "comment": "block_detection_action_server.cpp:131:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 133,
    "function": null,
    "comment": "block_detection_action_server.cpp:133:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 136,
    "function": null,
    "comment": "block_detection_action_server.cpp:136:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 137,
    "function": null,
    "comment": "block_detection_action_server.cpp:137:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 139,
    "function": null,
    "comment": "block_detection_action_server.cpp:139:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 140,
    "function": null,
    "comment": "block_detection_action_server.cpp:140:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 141,
    "function": null,
    "comment": "block_detection_action_server.cpp:141:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 142,
    "function": null,
    "comment": "block_detection_action_server.cpp:142:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 143,
    "function": null,
    "comment": "block_detection_action_server.cpp:143:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 144,
    "function": null,
    "comment": "block_detection_action_server.cpp:144:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 148,
    "function": null,
    "comment": "block_detection_action_server.cpp:148:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 149,
    "function": null,
    "comment": "block_detection_action_server.cpp:149:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 153,
    "function": null,
    "comment": "block_detection_action_server.cpp:153:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 154,
    "function": null,
    "comment": "block_detection_action_server.cpp:154:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 155,
    "function": null,
    "comment": "block_detection_action_server.cpp:155:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 156,
    "function": null,
    "comment": "block_detection_action_server.cpp:156:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 157,
    "function": null,
    "comment": "block_detection_action_server.cpp:157:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 158,
    "function": null,
    "comment": "block_detection_action_server.cpp:158:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 159,
    "function": null,
    "comment": "block_detection_action_server.cpp:159:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 162,
    "function": null,
    "comment": "block_detection_action_server.cpp:162:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 164,
    "function": null,
    "comment": "block_detection_action_server.cpp:164:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "block_detection_action_server.cpp",
    "line": 167,
    "function": null,
    "comment": "block_detection_action_server.cpp:167:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "block_detection_action_server.cpp",
    "line": 167,
    "function": null,
    "comment": "block_detection_action_server.cpp:167:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "block_detection_action_server.cpp",
    "line": 170,
    "function": null,
    "comment": "block_detection_action_server.cpp:170:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 170,
    "function": null,
    "comment": "block_detection_action_server.cpp:170:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a closing brace, if it does not end the line (for instance, '} else {').",
    "file": "block_detection_action_server.cpp",
    "line": 170,
    "function": null,
    "comment": "block_detection_action_server.cpp:170:  Missing space before else  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 173,
    "function": null,
    "comment": "block_detection_action_server.cpp:173:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 175,
    "function": null,
    "comment": "block_detection_action_server.cpp:175:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 178,
    "function": null,
    "comment": "block_detection_action_server.cpp:178:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 180,
    "function": null,
    "comment": "block_detection_action_server.cpp:180:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 181,
    "function": null,
    "comment": "block_detection_action_server.cpp:181:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 184,
    "function": null,
    "comment": "block_detection_action_server.cpp:184:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 185,
    "function": null,
    "comment": "block_detection_action_server.cpp:185:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 189,
    "function": null,
    "comment": "block_detection_action_server.cpp:189:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 190,
    "function": null,
    "comment": "block_detection_action_server.cpp:190:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 191,
    "function": null,
    "comment": "block_detection_action_server.cpp:191:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 194,
    "function": null,
    "comment": "block_detection_action_server.cpp:194:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 195,
    "function": null,
    "comment": "block_detection_action_server.cpp:195:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 195,
    "function": null,
    "comment": "block_detection_action_server.cpp:195:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 198,
    "function": null,
    "comment": "block_detection_action_server.cpp:198:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 199,
    "function": null,
    "comment": "block_detection_action_server.cpp:199:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 203,
    "function": null,
    "comment": "block_detection_action_server.cpp:203:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 204,
    "function": null,
    "comment": "block_detection_action_server.cpp:204:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 208,
    "function": null,
    "comment": "block_detection_action_server.cpp:208:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 209,
    "function": null,
    "comment": "block_detection_action_server.cpp:209:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 210,
    "function": null,
    "comment": "block_detection_action_server.cpp:210:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 211,
    "function": null,
    "comment": "block_detection_action_server.cpp:211:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_detection_action_server.cpp",
    "line": 212,
    "function": null,
    "comment": "block_detection_action_server.cpp:212:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_detection_action_server.cpp",
    "line": 213,
    "function": null,
    "comment": "block_detection_action_server.cpp:213:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 219,
    "function": null,
    "comment": "block_detection_action_server.cpp:219:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 219,
    "function": null,
    "comment": "block_detection_action_server.cpp:219:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "block_detection_action_server.cpp",
    "line": 221,
    "function": null,
    "comment": "block_detection_action_server.cpp:221:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "block_detection_action_server.cpp",
    "line": 222,
    "function": null,
    "comment": "block_detection_action_server.cpp:222:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 224,
    "function": null,
    "comment": "block_detection_action_server.cpp:224:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 230,
    "function": null,
    "comment": "block_detection_action_server.cpp:230:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "block_detection_action_server.cpp",
    "line": 235,
    "function": null,
    "comment": "block_detection_action_server.cpp:235:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 236,
    "function": null,
    "comment": "block_detection_action_server.cpp:236:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 243,
    "function": null,
    "comment": "block_detection_action_server.cpp:243:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 245,
    "function": null,
    "comment": "block_detection_action_server.cpp:245:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 250,
    "function": null,
    "comment": "block_detection_action_server.cpp:250:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "block_detection_action_server.cpp",
    "line": 251,
    "function": null,
    "comment": "block_detection_action_server.cpp:251:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 258,
    "function": null,
    "comment": "block_detection_action_server.cpp:258:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 261,
    "function": null,
    "comment": "block_detection_action_server.cpp:261:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 264,
    "function": null,
    "comment": "block_detection_action_server.cpp:264:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 265,
    "function": null,
    "comment": "block_detection_action_server.cpp:265:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 268,
    "function": null,
    "comment": "block_detection_action_server.cpp:268:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_detection_action_server.cpp",
    "line": 268,
    "function": null,
    "comment": "block_detection_action_server.cpp:268:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 271,
    "function": null,
    "comment": "block_detection_action_server.cpp:271:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 273,
    "function": null,
    "comment": "block_detection_action_server.cpp:273:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "block_detection_action_server.cpp",
    "line": 278,
    "function": null,
    "comment": "block_detection_action_server.cpp:278:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 282,
    "function": null,
    "comment": "block_detection_action_server.cpp:282:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 284,
    "function": null,
    "comment": "block_detection_action_server.cpp:284:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 289,
    "function": null,
    "comment": "block_detection_action_server.cpp:289:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 290,
    "function": null,
    "comment": "block_detection_action_server.cpp:290:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "block_detection_action_server.cpp",
    "line": 290,
    "function": null,
    "comment": "block_detection_action_server.cpp:290:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 291,
    "function": null,
    "comment": "block_detection_action_server.cpp:291:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_detection_action_server.cpp",
    "line": 296,
    "function": null,
    "comment": "block_detection_action_server.cpp:296:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "block_detection_action_server.cpp",
    "line": 299,
    "function": null,
    "comment": "block_detection_action_server.cpp:299:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "block_detection_action_server.cpp",
    "line": 302,
    "function": null,
    "comment": "block_detection_action_server.cpp:302:  Namespace should be terminated with '// namespace turtlebot_arm_block_manipulation'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_detection_action_server.cpp",
    "line": 305,
    "function": null,
    "comment": "block_detection_action_server.cpp:305:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_detection_action_server.cpp",
    "line": 308,
    "function": null,
    "comment": "block_detection_action_server.cpp:308:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "block_detection_action_server.cpp",
    "line": 142,
    "function": null,
    "comment": "block_detection_action_server.cpp:142:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "block_detection_action_server.cpp",
    "line": 206,
    "function": null,
    "comment": "block_detection_action_server.cpp:206:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 42,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:42:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 45,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:45:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pick_and_place_action_server.cpp",
    "line": 46,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:46:  private: should be indented +1 space inside class PickAndPlaceServer  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 47,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:47:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pick_and_place_action_server.cpp",
    "line": 47,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:47:  Do not leave a blank line after 'private:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 49,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:49:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 51,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:51:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 62,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:62:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pick_and_place_action_server.cpp",
    "line": 69,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:69:  public: should be indented +1 space inside class PickAndPlaceServer  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 70,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:70:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "pick_and_place_action_server.cpp",
    "line": 70,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:70:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 71,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:71:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 72,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:72:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 75,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:75:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 76,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:76:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 79,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:79:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 83,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:83:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 90,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:90:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 103,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:103:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 107,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:107:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 114,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:114:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 119,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:119:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 120,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:120:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 121,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:121:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 123,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:123:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 144,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:144:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pick_and_place_action_server.cpp",
    "line": 144,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:144:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 165,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:165:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pick_and_place_action_server.cpp",
    "line": 165,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:165:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 182,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:182:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 185,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:185:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 186,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:186:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pick_and_place_action_server.cpp",
    "line": 191,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:191:  Using deprecated casting style.  Use static_cast<bool>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 192,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:192:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pick_and_place_action_server.cpp",
    "line": 195,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:195:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 196,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:196:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 197,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:197:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 210,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:210:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 213,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:213:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 215,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:215:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 225,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:225:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 231,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:231:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 232,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:232:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 237,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:237:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 238,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:238:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 239,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:239:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 245,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:245:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 247,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:247:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pick_and_place_action_server.cpp",
    "line": 254,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:254:  Using deprecated casting style.  Use static_cast<bool>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 255,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:255:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pick_and_place_action_server.cpp",
    "line": 258,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:258:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 259,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:259:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 260,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:260:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 266,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:266:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 277,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:277:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 280,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:280:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pick_and_place_action_server.cpp",
    "line": 286,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:286:  Using deprecated casting style.  Use static_cast<bool>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 287,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:287:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pick_and_place_action_server.cpp",
    "line": 290,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:290:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 291,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:291:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 292,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:292:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 300,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:300:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pick_and_place_action_server.cpp",
    "line": 301,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:301:  Using deprecated casting style.  Use static_cast<float>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "Avoid using thread-unsafe functions, when thread-safe variants are available.",
    "file": "pick_and_place_action_server.cpp",
    "line": 301,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:301:  Consider using rand_r(...) instead of rand(...) for improved thread safety.  [runtime/threadsafe_fn] [2]",
    "tags": ["code-standards","google-cpp","multi-threading","thread-safety"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "pick_and_place_action_server.cpp",
    "line": 305,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:305:  Namespace should be terminated with '// namespace turtlebot_arm_block_manipulation'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pick_and_place_action_server.cpp",
    "line": 309,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:309:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pick_and_place_action_server.cpp",
    "line": 312,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:312:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pick_and_place_action_server.cpp",
    "line": 181,
    "function": null,
    "comment": "pick_and_place_action_server.cpp:181:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 38,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:38:  Include 'geometry_msgs/PoseArray.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 40,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:40:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 43,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:43:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 46,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:46:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 47,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:47:  private: should be indented +1 space inside class InteractiveManipulationServer  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 51,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:51:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 52,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:52:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 54,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:54:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 55,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:55:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 56,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:56:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 57,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:57:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 58,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:58:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 63,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:63:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 66,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:66:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 70,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:70:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 74,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:74:  public: should be indented +1 space inside class InteractiveManipulationServer  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 75,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:75:  Do not leave a blank line after 'public:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 76,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:76:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 76,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:76:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 77,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:77:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 78,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:78:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 81,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:81:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 83,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:83:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 84,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:84:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 85,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:85:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 87,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:87:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 88,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:88:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 89,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:89:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 91,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:91:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 93,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:93:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 94,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:94:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 97,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:97:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 98,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:98:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 99,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:99:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 102,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:102:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 108,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:108:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 113,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:113:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 115,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:115:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 118,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:118:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 122,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:122:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 124,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:124:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 129,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:129:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 131,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:131:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 135,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:135:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 138,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:138:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 139,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:139:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 141,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:141:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 146,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:146:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 148,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:148:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 151,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:151:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 153,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:153:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 157,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:157:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 158,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:158:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 160,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:160:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 161,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:161:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 162,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:162:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 166,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:166:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 170,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:170:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 174,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:174:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 181,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:181:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 183,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:183:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 185,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:185:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 191,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:191:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 191,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:191:  Is this a non-const reference? If so, make const or use a pointer: InteractiveMarker &msg  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 192,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:192:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 206,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:206:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 208,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:208:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 208,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:208:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 209,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:209:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 214,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:214:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 218,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:218:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 227,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:227:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 229,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:229:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 229,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:229:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 230,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:230:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 231,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:231:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 233,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:233:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 233,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:233:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 234,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:234:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 236,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:236:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 236,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:236:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 237,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:237:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 237,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:237:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 237,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:237:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 239,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:239:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 242,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:242:  Namespace should be terminated with '// namespace turtlebot_arm_block_manipulation'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 245,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:245:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 249,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:249:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 208,
    "function": null,
    "comment": "interactive_manipulation_action_server.cpp:208:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "block_manipulation_demo.cpp",
    "line": 35,
    "function": null,
    "comment": "block_manipulation_demo.cpp:35:  Include 'turtlebot_arm_block_manipulation/InteractiveBlockManipulationAction.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "block_manipulation_demo.cpp",
    "line": 36,
    "function": null,
    "comment": "block_manipulation_demo.cpp:36:  Include 'arbotix_msgs/Relax.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "block_manipulation_demo.cpp",
    "line": 39,
    "function": null,
    "comment": "block_manipulation_demo.cpp:39:  Include 'sstream' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_demo.cpp",
    "line": 45,
    "function": null,
    "comment": "block_manipulation_demo.cpp:45:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_demo.cpp",
    "line": 48,
    "function": null,
    "comment": "block_manipulation_demo.cpp:48:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "block_manipulation_demo.cpp",
    "line": 49,
    "function": null,
    "comment": "block_manipulation_demo.cpp:49:  private: should be indented +1 space inside class BlockManipulationAction  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 51,
    "function": null,
    "comment": "block_manipulation_demo.cpp:51:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_demo.cpp",
    "line": 54,
    "function": null,
    "comment": "block_manipulation_demo.cpp:54:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 56,
    "function": null,
    "comment": "block_manipulation_demo.cpp:56:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 69,
    "function": null,
    "comment": "block_manipulation_demo.cpp:69:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "block_manipulation_demo.cpp",
    "line": 70,
    "function": null,
    "comment": "block_manipulation_demo.cpp:70:  public: should be indented +1 space inside class BlockManipulationAction  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "block_manipulation_demo.cpp",
    "line": 71,
    "function": null,
    "comment": "block_manipulation_demo.cpp:71:  Do not leave a blank line after 'public:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_demo.cpp",
    "line": 76,
    "function": null,
    "comment": "block_manipulation_demo.cpp:76:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 84,
    "function": null,
    "comment": "block_manipulation_demo.cpp:84:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 91,
    "function": null,
    "comment": "block_manipulation_demo.cpp:91:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 97,
    "function": null,
    "comment": "block_manipulation_demo.cpp:97:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 100,
    "function": null,
    "comment": "block_manipulation_demo.cpp:100:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 102,
    "function": null,
    "comment": "block_manipulation_demo.cpp:102:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 105,
    "function": null,
    "comment": "block_manipulation_demo.cpp:105:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 108,
    "function": null,
    "comment": "block_manipulation_demo.cpp:108:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 111,
    "function": null,
    "comment": "block_manipulation_demo.cpp:111:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 114,
    "function": null,
    "comment": "block_manipulation_demo.cpp:114:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_demo.cpp",
    "line": 116,
    "function": null,
    "comment": "block_manipulation_demo.cpp:116:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_demo.cpp",
    "line": 117,
    "function": null,
    "comment": "block_manipulation_demo.cpp:117:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation_demo.cpp",
    "line": 117,
    "function": null,
    "comment": "block_manipulation_demo.cpp:117:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 119,
    "function": null,
    "comment": "block_manipulation_demo.cpp:119:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_demo.cpp",
    "line": 120,
    "function": null,
    "comment": "block_manipulation_demo.cpp:120:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_demo.cpp",
    "line": 121,
    "function": null,
    "comment": "block_manipulation_demo.cpp:121:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 124,
    "function": null,
    "comment": "block_manipulation_demo.cpp:124:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_demo.cpp",
    "line": 128,
    "function": null,
    "comment": "block_manipulation_demo.cpp:128:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_demo.cpp",
    "line": 132,
    "function": null,
    "comment": "block_manipulation_demo.cpp:132:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation_demo.cpp",
    "line": 132,
    "function": null,
    "comment": "block_manipulation_demo.cpp:132:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 134,
    "function": null,
    "comment": "block_manipulation_demo.cpp:134:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_demo.cpp",
    "line": 135,
    "function": null,
    "comment": "block_manipulation_demo.cpp:135:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_demo.cpp",
    "line": 136,
    "function": null,
    "comment": "block_manipulation_demo.cpp:136:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 138,
    "function": null,
    "comment": "block_manipulation_demo.cpp:138:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_demo.cpp",
    "line": 142,
    "function": null,
    "comment": "block_manipulation_demo.cpp:142:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_demo.cpp",
    "line": 146,
    "function": null,
    "comment": "block_manipulation_demo.cpp:146:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation_demo.cpp",
    "line": 146,
    "function": null,
    "comment": "block_manipulation_demo.cpp:146:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_demo.cpp",
    "line": 148,
    "function": null,
    "comment": "block_manipulation_demo.cpp:148:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_demo.cpp",
    "line": 149,
    "function": null,
    "comment": "block_manipulation_demo.cpp:149:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_demo.cpp",
    "line": 150,
    "function": null,
    "comment": "block_manipulation_demo.cpp:150:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "block_manipulation_demo.cpp",
    "line": 164,
    "function": null,
    "comment": "block_manipulation_demo.cpp:164:  Namespace should be terminated with '// namespace turtlebot_arm_block_manipulation'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_demo.cpp",
    "line": 167,
    "function": null,
    "comment": "block_manipulation_demo.cpp:167:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_demo.cpp",
    "line": 178,
    "function": null,
    "comment": "block_manipulation_demo.cpp:178:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "block_manipulation.cpp",
    "line": 39,
    "function": null,
    "comment": "block_manipulation.cpp:39:  Include 'pcl/point_cloud.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "block_manipulation.cpp",
    "line": 41,
    "function": null,
    "comment": "block_manipulation.cpp:41:  Include 'pcl/filters/passthrough.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "block_manipulation.cpp",
    "line": 43,
    "function": null,
    "comment": "block_manipulation.cpp:43:  Include 'pcl/kdtree/kdtree.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "block_manipulation.cpp",
    "line": 53,
    "function": null,
    "comment": "block_manipulation.cpp:53:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 66,
    "function": null,
    "comment": "block_manipulation.cpp:66:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "block_manipulation.cpp",
    "line": 67,
    "function": null,
    "comment": "block_manipulation.cpp:67:  public: should be indented +1 space inside class Block  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 72,
    "function": null,
    "comment": "block_manipulation.cpp:72:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation.cpp",
    "line": 74,
    "function": null,
    "comment": "block_manipulation.cpp:74:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 77,
    "function": null,
    "comment": "block_manipulation.cpp:77:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 80,
    "function": null,
    "comment": "block_manipulation.cpp:80:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 86,
    "function": null,
    "comment": "block_manipulation.cpp:86:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "block_manipulation.cpp",
    "line": 87,
    "function": null,
    "comment": "block_manipulation.cpp:87:  private: should be indented +1 space inside class BlockManipulation  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 99,
    "function": null,
    "comment": "block_manipulation.cpp:99:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "block_manipulation.cpp",
    "line": 102,
    "function": null,
    "comment": "block_manipulation.cpp:102:  public: should be indented +1 space inside class BlockManipulation  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "block_manipulation.cpp",
    "line": 103,
    "function": null,
    "comment": "block_manipulation.cpp:103:  Do not leave a blank line after 'public:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 105,
    "function": null,
    "comment": "block_manipulation.cpp:105:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 111,
    "function": null,
    "comment": "block_manipulation.cpp:111:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation.cpp",
    "line": 125,
    "function": null,
    "comment": "block_manipulation.cpp:125:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 129,
    "function": null,
    "comment": "block_manipulation.cpp:129:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation.cpp",
    "line": 134,
    "function": null,
    "comment": "block_manipulation.cpp:134:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 135,
    "function": null,
    "comment": "block_manipulation.cpp:135:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 137,
    "function": null,
    "comment": "block_manipulation.cpp:137:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 139,
    "function": null,
    "comment": "block_manipulation.cpp:139:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 144,
    "function": null,
    "comment": "block_manipulation.cpp:144:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 147,
    "function": null,
    "comment": "block_manipulation.cpp:147:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 151,
    "function": null,
    "comment": "block_manipulation.cpp:151:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "block_manipulation.cpp",
    "line": 154,
    "function": null,
    "comment": "block_manipulation.cpp:154:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 204,
    "function": null,
    "comment": "block_manipulation.cpp:204:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 208,
    "function": null,
    "comment": "block_manipulation.cpp:208:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation.cpp",
    "line": 209,
    "function": null,
    "comment": "block_manipulation.cpp:209:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "block_manipulation.cpp",
    "line": 209,
    "function": null,
    "comment": "block_manipulation.cpp:209:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "block_manipulation.cpp",
    "line": 209,
    "function": null,
    "comment": "block_manipulation.cpp:209:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 210,
    "function": null,
    "comment": "block_manipulation.cpp:210:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "block_manipulation.cpp",
    "line": 211,
    "function": null,
    "comment": "block_manipulation.cpp:211:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 212,
    "function": null,
    "comment": "block_manipulation.cpp:212:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 222,
    "function": null,
    "comment": "block_manipulation.cpp:222:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 223,
    "function": null,
    "comment": "block_manipulation.cpp:223:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation.cpp",
    "line": 227,
    "function": null,
    "comment": "block_manipulation.cpp:227:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "block_manipulation.cpp",
    "line": 227,
    "function": null,
    "comment": "block_manipulation.cpp:227:  Is this a non-const reference? If so, make const or use a pointer: InteractiveMarker &msg  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 228,
    "function": null,
    "comment": "block_manipulation.cpp:228:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 242,
    "function": null,
    "comment": "block_manipulation.cpp:242:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation.cpp",
    "line": 244,
    "function": null,
    "comment": "block_manipulation.cpp:244:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation.cpp",
    "line": 244,
    "function": null,
    "comment": "block_manipulation.cpp:244:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 245,
    "function": null,
    "comment": "block_manipulation.cpp:245:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 252,
    "function": null,
    "comment": "block_manipulation.cpp:252:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation.cpp",
    "line": 253,
    "function": null,
    "comment": "block_manipulation.cpp:253:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_manipulation.cpp",
    "line": 253,
    "function": null,
    "comment": "block_manipulation.cpp:253:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation.cpp",
    "line": 254,
    "function": null,
    "comment": "block_manipulation.cpp:254:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_manipulation.cpp",
    "line": 254,
    "function": null,
    "comment": "block_manipulation.cpp:254:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 255,
    "function": null,
    "comment": "block_manipulation.cpp:255:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation.cpp",
    "line": 264,
    "function": null,
    "comment": "block_manipulation.cpp:264:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_manipulation.cpp",
    "line": 264,
    "function": null,
    "comment": "block_manipulation.cpp:264:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 265,
    "function": null,
    "comment": "block_manipulation.cpp:265:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation.cpp",
    "line": 266,
    "function": null,
    "comment": "block_manipulation.cpp:266:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation.cpp",
    "line": 268,
    "function": null,
    "comment": "block_manipulation.cpp:268:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_manipulation.cpp",
    "line": 268,
    "function": null,
    "comment": "block_manipulation.cpp:268:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 269,
    "function": null,
    "comment": "block_manipulation.cpp:269:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation.cpp",
    "line": 271,
    "function": null,
    "comment": "block_manipulation.cpp:271:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_manipulation.cpp",
    "line": 271,
    "function": null,
    "comment": "block_manipulation.cpp:271:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation.cpp",
    "line": 272,
    "function": null,
    "comment": "block_manipulation.cpp:272:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation.cpp",
    "line": 272,
    "function": null,
    "comment": "block_manipulation.cpp:272:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_manipulation.cpp",
    "line": 272,
    "function": null,
    "comment": "block_manipulation.cpp:272:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation.cpp",
    "line": 276,
    "function": null,
    "comment": "block_manipulation.cpp:276:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_manipulation.cpp",
    "line": 276,
    "function": null,
    "comment": "block_manipulation.cpp:276:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 277,
    "function": null,
    "comment": "block_manipulation.cpp:277:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "block_manipulation.cpp",
    "line": 278,
    "function": null,
    "comment": "block_manipulation.cpp:278:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 279,
    "function": null,
    "comment": "block_manipulation.cpp:279:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_manipulation.cpp",
    "line": 282,
    "function": null,
    "comment": "block_manipulation.cpp:282:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 283,
    "function": null,
    "comment": "block_manipulation.cpp:283:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation.cpp",
    "line": 285,
    "function": null,
    "comment": "block_manipulation.cpp:285:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 286,
    "function": null,
    "comment": "block_manipulation.cpp:286:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation.cpp",
    "line": 287,
    "function": null,
    "comment": "block_manipulation.cpp:287:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation.cpp",
    "line": 288,
    "function": null,
    "comment": "block_manipulation.cpp:288:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 289,
    "function": null,
    "comment": "block_manipulation.cpp:289:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_manipulation.cpp",
    "line": 290,
    "function": null,
    "comment": "block_manipulation.cpp:290:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation.cpp",
    "line": 295,
    "function": null,
    "comment": "block_manipulation.cpp:295:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 297,
    "function": null,
    "comment": "block_manipulation.cpp:297:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "block_manipulation.cpp",
    "line": 301,
    "function": null,
    "comment": "block_manipulation.cpp:301:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "block_manipulation.cpp",
    "line": 301,
    "function": null,
    "comment": "block_manipulation.cpp:301:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "block_manipulation.cpp",
    "line": 304,
    "function": null,
    "comment": "block_manipulation.cpp:304:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "block_manipulation.cpp",
    "line": 304,
    "function": null,
    "comment": "block_manipulation.cpp:304:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a closing brace, if it does not end the line (for instance, '} else {').",
    "file": "block_manipulation.cpp",
    "line": 304,
    "function": null,
    "comment": "block_manipulation.cpp:304:  Missing space before else  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation.cpp",
    "line": 309,
    "function": null,
    "comment": "block_manipulation.cpp:309:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 311,
    "function": null,
    "comment": "block_manipulation.cpp:311:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation.cpp",
    "line": 322,
    "function": null,
    "comment": "block_manipulation.cpp:322:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "block_manipulation.cpp",
    "line": 322,
    "function": null,
    "comment": "block_manipulation.cpp:322:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "block_manipulation.cpp",
    "line": 322,
    "function": null,
    "comment": "block_manipulation.cpp:322:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 323,
    "function": null,
    "comment": "block_manipulation.cpp:323:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 329,
    "function": null,
    "comment": "block_manipulation.cpp:329:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 329,
    "function": null,
    "comment": "block_manipulation.cpp:329:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "block_manipulation.cpp",
    "line": 331,
    "function": null,
    "comment": "block_manipulation.cpp:331:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 333,
    "function": null,
    "comment": "block_manipulation.cpp:333:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 338,
    "function": null,
    "comment": "block_manipulation.cpp:338:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation.cpp",
    "line": 346,
    "function": null,
    "comment": "block_manipulation.cpp:346:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation.cpp",
    "line": 353,
    "function": null,
    "comment": "block_manipulation.cpp:353:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "block_manipulation.cpp",
    "line": 353,
    "function": null,
    "comment": "block_manipulation.cpp:353:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "block_manipulation.cpp",
    "line": 353,
    "function": null,
    "comment": "block_manipulation.cpp:353:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 354,
    "function": null,
    "comment": "block_manipulation.cpp:354:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "block_manipulation.cpp",
    "line": 355,
    "function": null,
    "comment": "block_manipulation.cpp:355:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 357,
    "function": null,
    "comment": "block_manipulation.cpp:357:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "block_manipulation.cpp",
    "line": 364,
    "function": null,
    "comment": "block_manipulation.cpp:364:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "block_manipulation.cpp",
    "line": 364,
    "function": null,
    "comment": "block_manipulation.cpp:364:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation.cpp",
    "line": 366,
    "function": null,
    "comment": "block_manipulation.cpp:366:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation.cpp",
    "line": 366,
    "function": null,
    "comment": "block_manipulation.cpp:366:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_manipulation.cpp",
    "line": 366,
    "function": null,
    "comment": "block_manipulation.cpp:366:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "block_manipulation.cpp",
    "line": 366,
    "function": null,
    "comment": "block_manipulation.cpp:366:  Using C-style cast.  Use static_cast<float>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation.cpp",
    "line": 371,
    "function": null,
    "comment": "block_manipulation.cpp:371:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "block_manipulation.cpp",
    "line": 371,
    "function": null,
    "comment": "block_manipulation.cpp:371:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "block_manipulation.cpp",
    "line": 371,
    "function": null,
    "comment": "block_manipulation.cpp:371:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 372,
    "function": null,
    "comment": "block_manipulation.cpp:372:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "block_manipulation.cpp",
    "line": 373,
    "function": null,
    "comment": "block_manipulation.cpp:373:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "block_manipulation.cpp",
    "line": 373,
    "function": null,
    "comment": "block_manipulation.cpp:373:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not use alternative tokens instead of operators (e.g. 'and', 'or').",
    "file": "block_manipulation.cpp",
    "line": 373,
    "function": null,
    "comment": "block_manipulation.cpp:373:  Use operator || instead of or  [readability/alt_tokens] [2]",
    "tags": ["code-standards","google-cpp","operators","tokens","alternative-tokens"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "block_manipulation.cpp",
    "line": 375,
    "function": null,
    "comment": "block_manipulation.cpp:375:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "block_manipulation.cpp",
    "line": 375,
    "function": null,
    "comment": "block_manipulation.cpp:375:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "block_manipulation.cpp",
    "line": 375,
    "function": null,
    "comment": "block_manipulation.cpp:375:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a closing brace, if it does not end the line (for instance, '} else {').",
    "file": "block_manipulation.cpp",
    "line": 375,
    "function": null,
    "comment": "block_manipulation.cpp:375:  Missing space before else  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation.cpp",
    "line": 376,
    "function": null,
    "comment": "block_manipulation.cpp:376:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "block_manipulation.cpp",
    "line": 383,
    "function": null,
    "comment": "block_manipulation.cpp:383:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation.cpp",
    "line": 387,
    "function": null,
    "comment": "block_manipulation.cpp:387:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "block_manipulation.cpp",
    "line": 288,
    "function": null,
    "comment": "block_manipulation.cpp:288:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "block_manipulation_actions.cpp",
    "line": 40,
    "function": null,
    "comment": "block_manipulation_actions.cpp:40:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_actions.cpp",
    "line": 53,
    "function": null,
    "comment": "block_manipulation_actions.cpp:53:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "block_manipulation_actions.cpp",
    "line": 54,
    "function": null,
    "comment": "block_manipulation_actions.cpp:54:  private: should be indented +1 space inside class BlockManipulationAction  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 56,
    "function": null,
    "comment": "block_manipulation_actions.cpp:56:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 58,
    "function": null,
    "comment": "block_manipulation_actions.cpp:58:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_actions.cpp",
    "line": 60,
    "function": null,
    "comment": "block_manipulation_actions.cpp:60:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_actions.cpp",
    "line": 61,
    "function": null,
    "comment": "block_manipulation_actions.cpp:61:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 62,
    "function": null,
    "comment": "block_manipulation_actions.cpp:62:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 65,
    "function": null,
    "comment": "block_manipulation_actions.cpp:65:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "block_manipulation_actions.cpp",
    "line": 68,
    "function": null,
    "comment": "block_manipulation_actions.cpp:68:  public: should be indented +1 space inside class BlockManipulationAction  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "block_manipulation_actions.cpp",
    "line": 69,
    "function": null,
    "comment": "block_manipulation_actions.cpp:69:  Do not leave a blank line after 'public:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 70,
    "function": null,
    "comment": "block_manipulation_actions.cpp:70:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 71,
    "function": null,
    "comment": "block_manipulation_actions.cpp:71:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_actions.cpp",
    "line": 74,
    "function": null,
    "comment": "block_manipulation_actions.cpp:74:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 76,
    "function": null,
    "comment": "block_manipulation_actions.cpp:76:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 81,
    "function": null,
    "comment": "block_manipulation_actions.cpp:81:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 86,
    "function": null,
    "comment": "block_manipulation_actions.cpp:86:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 88,
    "function": null,
    "comment": "block_manipulation_actions.cpp:88:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 91,
    "function": null,
    "comment": "block_manipulation_actions.cpp:91:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 93,
    "function": null,
    "comment": "block_manipulation_actions.cpp:93:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 96,
    "function": null,
    "comment": "block_manipulation_actions.cpp:96:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_actions.cpp",
    "line": 98,
    "function": null,
    "comment": "block_manipulation_actions.cpp:98:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 101,
    "function": null,
    "comment": "block_manipulation_actions.cpp:101:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_actions.cpp",
    "line": 102,
    "function": null,
    "comment": "block_manipulation_actions.cpp:102:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation_actions.cpp",
    "line": 102,
    "function": null,
    "comment": "block_manipulation_actions.cpp:102:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 104,
    "function": null,
    "comment": "block_manipulation_actions.cpp:104:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_actions.cpp",
    "line": 105,
    "function": null,
    "comment": "block_manipulation_actions.cpp:105:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_actions.cpp",
    "line": 106,
    "function": null,
    "comment": "block_manipulation_actions.cpp:106:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 109,
    "function": null,
    "comment": "block_manipulation_actions.cpp:109:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_actions.cpp",
    "line": 111,
    "function": null,
    "comment": "block_manipulation_actions.cpp:111:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 116,
    "function": null,
    "comment": "block_manipulation_actions.cpp:116:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 117,
    "function": null,
    "comment": "block_manipulation_actions.cpp:117:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 119,
    "function": null,
    "comment": "block_manipulation_actions.cpp:119:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation_actions.cpp",
    "line": 122,
    "function": null,
    "comment": "block_manipulation_actions.cpp:122:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_actions.cpp",
    "line": 123,
    "function": null,
    "comment": "block_manipulation_actions.cpp:123:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_actions.cpp",
    "line": 125,
    "function": null,
    "comment": "block_manipulation_actions.cpp:125:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 127,
    "function": null,
    "comment": "block_manipulation_actions.cpp:127:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 130,
    "function": null,
    "comment": "block_manipulation_actions.cpp:130:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 132,
    "function": null,
    "comment": "block_manipulation_actions.cpp:132:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 137,
    "function": null,
    "comment": "block_manipulation_actions.cpp:137:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 138,
    "function": null,
    "comment": "block_manipulation_actions.cpp:138:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 140,
    "function": null,
    "comment": "block_manipulation_actions.cpp:140:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_actions.cpp",
    "line": 141,
    "function": null,
    "comment": "block_manipulation_actions.cpp:141:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_actions.cpp",
    "line": 142,
    "function": null,
    "comment": "block_manipulation_actions.cpp:142:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_actions.cpp",
    "line": 145,
    "function": null,
    "comment": "block_manipulation_actions.cpp:145:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "block_manipulation_actions.cpp",
    "line": 146,
    "function": null,
    "comment": "block_manipulation_actions.cpp:146:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "block_manipulation_actions.cpp",
    "line": 147,
    "function": null,
    "comment": "block_manipulation_actions.cpp:147:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 148,
    "function": null,
    "comment": "block_manipulation_actions.cpp:148:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_actions.cpp",
    "line": 149,
    "function": null,
    "comment": "block_manipulation_actions.cpp:149:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_actions.cpp",
    "line": 150,
    "function": null,
    "comment": "block_manipulation_actions.cpp:150:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "block_manipulation_actions.cpp",
    "line": 153,
    "function": null,
    "comment": "block_manipulation_actions.cpp:153:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_actions.cpp",
    "line": 154,
    "function": null,
    "comment": "block_manipulation_actions.cpp:154:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation_actions.cpp",
    "line": 160,
    "function": null,
    "comment": "block_manipulation_actions.cpp:160:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "block_manipulation_actions.cpp",
    "line": 160,
    "function": null,
    "comment": "block_manipulation_actions.cpp:160:  Is this a non-const reference? If so, make const or use a pointer: InteractiveMarker &msg  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_actions.cpp",
    "line": 161,
    "function": null,
    "comment": "block_manipulation_actions.cpp:161:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 175,
    "function": null,
    "comment": "block_manipulation_actions.cpp:175:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation_actions.cpp",
    "line": 177,
    "function": null,
    "comment": "block_manipulation_actions.cpp:177:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_actions.cpp",
    "line": 178,
    "function": null,
    "comment": "block_manipulation_actions.cpp:178:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 185,
    "function": null,
    "comment": "block_manipulation_actions.cpp:185:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 189,
    "function": null,
    "comment": "block_manipulation_actions.cpp:189:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation_actions.cpp",
    "line": 198,
    "function": null,
    "comment": "block_manipulation_actions.cpp:198:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_manipulation_actions.cpp",
    "line": 198,
    "function": null,
    "comment": "block_manipulation_actions.cpp:198:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 199,
    "function": null,
    "comment": "block_manipulation_actions.cpp:199:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation_actions.cpp",
    "line": 200,
    "function": null,
    "comment": "block_manipulation_actions.cpp:200:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation_actions.cpp",
    "line": 202,
    "function": null,
    "comment": "block_manipulation_actions.cpp:202:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_manipulation_actions.cpp",
    "line": 202,
    "function": null,
    "comment": "block_manipulation_actions.cpp:202:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "block_manipulation_actions.cpp",
    "line": 203,
    "function": null,
    "comment": "block_manipulation_actions.cpp:203:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation_actions.cpp",
    "line": 205,
    "function": null,
    "comment": "block_manipulation_actions.cpp:205:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_manipulation_actions.cpp",
    "line": 205,
    "function": null,
    "comment": "block_manipulation_actions.cpp:205:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "block_manipulation_actions.cpp",
    "line": 206,
    "function": null,
    "comment": "block_manipulation_actions.cpp:206:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "block_manipulation_actions.cpp",
    "line": 206,
    "function": null,
    "comment": "block_manipulation_actions.cpp:206:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "block_manipulation_actions.cpp",
    "line": 206,
    "function": null,
    "comment": "block_manipulation_actions.cpp:206:  Extra space before )  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "block_manipulation_actions.cpp",
    "line": 208,
    "function": null,
    "comment": "block_manipulation_actions.cpp:208:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "block_manipulation_actions.cpp",
    "line": 212,
    "function": null,
    "comment": "block_manipulation_actions.cpp:212:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "block_manipulation_actions.cpp",
    "line": 42,
    "function": null,
    "comment": "block_manipulation_actions.cpp:42:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "block_manipulation_demo.cpp",
    "line": 72,
    "function": null,
    "comment": "Member variable 'BlockManipulationAction::gripper_open' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "block_manipulation_demo.cpp",
    "line": 72,
    "function": null,
    "comment": "Member variable 'BlockManipulationAction::gripper_closed' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "block_manipulation_demo.cpp",
    "line": 72,
    "function": null,
    "comment": "Member variable 'BlockManipulationAction::z_up' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "block_manipulation_demo.cpp",
    "line": 72,
    "function": null,
    "comment": "Member variable 'BlockManipulationAction::z_down' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "block_manipulation_demo.cpp",
    "line": 72,
    "function": null,
    "comment": "Member variable 'BlockManipulationAction::block_size' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "block_manipulation_demo.cpp",
    "line": 72,
    "function": null,
    "comment": "Member variable 'BlockManipulationAction::once' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation_demo.cpp",
    "line": 166,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_detection_action_server.cpp",
    "line": 173,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_detection_action_server.cpp",
    "line": 218,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_detection_action_server.cpp",
    "line": 223,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_detection_action_server.cpp",
    "line": 225,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_detection_action_server.cpp",
    "line": 304,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not rely on the sequence of evaluation within an expression.",
    "file": "block_detection_action_server.cpp",
    "line": 231,
    "function": null,
    "comment": "Found assignment as a subexpression.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","evaluation-order","expressions"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 123,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 208,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "interactive_manipulation_action_server.cpp",
    "line": 244,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pick_and_place_action_server.cpp",
    "line": 211,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pick_and_place_action_server.cpp",
    "line": 308,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "block_manipulation.cpp",
    "line": 244,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation.cpp",
    "line": 68,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation.cpp",
    "line": 74,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation.cpp",
    "line": 93,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation.cpp",
    "line": 94,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation.cpp",
    "line": 95,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation.cpp",
    "line": 244,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation.cpp",
    "line": 328,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation.cpp",
    "line": 331,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation.cpp",
    "line": 332,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation.cpp",
    "line": 334,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation.cpp",
    "line": 386,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation_actions.cpp",
    "line": 110,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation_actions.cpp",
    "line": 177,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "block_manipulation_actions.cpp",
    "line": 211,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "block_detection_action_server.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum coupling between objects: 5",
    "file": "block_detection_action_server.cpp",
    "line": null,
    "function": null,
    "comment": "CBO is greater than 5, BlockDetectionServer, 10",
    "tags": ["metrics","nasa-satc","ros","coupling"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "block_detection_action_server.cpp",
    "line": 127,
    "function": "cloudCb",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 15",
    "file": "block_detection_action_server.cpp",
    "line": 127,
    "function": "cloudCb",
    "comment": "CC is greater than 15",
    "tags": ["metrics","ros","cyclomatic-complexity","kth"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "pick_and_place_action_server.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum coupling between objects: 5",
    "file": "pick_and_place_action_server.cpp",
    "line": null,
    "function": null,
    "comment": "CBO is greater than 5, PickAndPlaceServer, 11",
    "tags": ["metrics","nasa-satc","ros","coupling"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "pick_and_place_action_server.cpp",
    "line": 120,
    "function": "pickAndPlace",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 15",
    "file": "pick_and_place_action_server.cpp",
    "line": 120,
    "function": "pickAndPlace",
    "comment": "CC is greater than 15",
    "tags": ["metrics","ros","cyclomatic-complexity","kth"]
  },
  {
    "rule": "Maximum coupling between objects: 5",
    "file": "interactive_manipulation_action_server.cpp",
    "line": null,
    "function": null,
    "comment": "CBO is greater than 5, InteractiveManipulationServer, 14",
    "tags": ["metrics","nasa-satc","ros","coupling"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "block_manipulation_demo.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum coupling between objects: 5",
    "file": "block_manipulation_demo.cpp",
    "line": null,
    "function": null,
    "comment": "CBO is greater than 5, BlockManipulationAction, 11",
    "tags": ["metrics","nasa-satc","ros","coupling"]
  },
  {
    "rule": "Maximum coupling between objects: 5",
    "file": "block_manipulation.cpp",
    "line": null,
    "function": null,
    "comment": "CBO is greater than 5, BlockManipulation, 11",
    "tags": ["metrics","nasa-satc","ros","coupling"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "block_manipulation.cpp",
    "line": 276,
    "function": "cloudCb",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 15",
    "file": "block_manipulation.cpp",
    "line": 276,
    "function": "cloudCb",
    "comment": "CC is greater than 15",
    "tags": ["metrics","ros","cyclomatic-complexity","kth"]
  },
  {
    "rule": "Maximum coupling between objects: 5",
    "file": "block_manipulation_actions.cpp",
    "line": null,
    "function": null,
    "comment": "CBO is greater than 5, BlockManipulationAction, 10",
    "tags": ["metrics","nasa-satc","ros","coupling"]
  }
]