[{"scope": "file", "description": "Number of Delivered Bugs threshold is [0,n/a]", "tags": ["metrics"], "id": "metric:halstead_bugs", "name": "Number of Delivered Bugs Threshold"}, {"scope": "file", "description": "Do not overload operators with special semantics, such as '&&', '||', ',' or '&'.", "tags": ["code-standards", "overload", "operators", "hicpp", "misra-cpp", "jsf-av-cpp"], "id": "cppcheck_plugin:harosOverrideUnaryAnd", "name": "Operator Overload"}, {"scope": "file", "description": "Do not use asm declarations.", "tags": ["code-standards", "assembly", "asm", "hicpp"], "id": "cppcheck_plugin:harosInlineAssembly", "name": "No ASM Declarations"}, {"scope": "file", "description": "Maximum Coupling Between Objects of 5", "tags": ["metrics", "nasa-satc", "ros", "coupling", "cbo"], "id": "max_coupling_objects_5", "name": "Maximum Coupling Between Objects of 5"}, {"scope": "file", "description": "Maximum Estimated Static Path Count of 80", "tags": ["metrics", "his", "static-path"], "id": "max_static_path_80", "name": "Maximum Estimated Static Path Count of 80"}, {"scope": "file", "description": "Number of Immediate Children threshold is [0,n/a]", "tags": ["metrics"], "id": "metric:number_of_children", "name": "Number of Immediate Children Threshold"}, {"scope": "function", "description": "Number of Distinct Function Calls threshold is [0,n/a]", "tags": ["metrics"], "id": "metric:unique_function_calls", "name": "Number of Distinct Function Calls Threshold"}, {"scope": "file", "description": "Coupling Between Objects threshold is [0,n/a]", "tags": ["metrics"], "id": "metric:coupling", "name": "Coupling Between Objects Threshold"}, {"scope": "file", "description": "Maintainability Index below 20", "tags": ["metrics", "microsoft", "maintainability", "mi", "maintainability-index"], "id": "mi_below_20", "name": "Maintainability Index Below 20"}, {"scope": "file", "description": "ROS-comm primitives inside control flow structures may not be executed.", "tags": ["warning", "haros", "ros-comm", "topics", "control-flow"], "id": "static_graph:control_nesting", "name": "Primitives Under Control Flow"}, {"scope": "file", "description": "Do not use integer types directly. Use size-specific typedefs, for instance from &lt;cstdint&gt;.", "tags": ["code-standards", "integer-types", "type-safety", "portability", "hicpp", "misra-cpp", "jsf-av-cpp"], "id": "cppcheck_plugin:harosIntegerTypes", "name": "Integer Types"}, {"scope": "file", "description": "Logical Lines of Code threshold is [0,n/a]", "tags": ["metrics"], "id": "metric:lloc", "name": "Logical Lines of Code Threshold"}, {"scope": "file", "description": "Maximum Nesting of Control Structures of 5", "tags": ["metrics", "kth", "ros", "nesting", "control-structures", "control-flow"], "id": "max_control_nesting_5", "name": "Maximum Nesting of Control Structures of 5"}, {"scope": "file", "description": "Maximum Nesting of Control Structures of 4", "tags": ["metrics", "his", "nesting", "control-structures", "control-flow"], "id": "max_control_nesting_4", "name": "Maximum Nesting of Control Structures of 4"}, {"scope": "function", "description": "Do not use throw exception specifications. Use noexcept instead.", "tags": ["code-standards", "deprecation", "cpp11", "exceptions", "throw", "hicpp"], "id": "cppcheck_plugin:harosThrowSpecification", "name": "Use noexcept"}, {"scope": "file", "description": "Do not use std::vector<bool>. It does not conform to the requirements of a container.", "tags": ["code-standards", "std-vector", "boolean", "hicpp", "misra-cpp"], "id": "cppcheck_plugin:harosBooleanVector", "name": "No Boolean Vectors"}, {"scope": "file", "description": "Source Lines of Code threshold is [0,n/a]", "tags": ["metrics"], "id": "metric:sloc", "name": "Source Lines of Code Threshold"}, {"scope": "file", "description": "Weighted Methods per Class threshold is [1,n/a]", "tags": ["metrics"], "id": "metric:weighted_methods", "name": "Weighted Methods per Class Threshold"}, {"scope": "file", "description": "Maximum Executable Lines of Code of 70", "tags": ["metrics", "kth", "ros", "eloc", "loc", "lines-of-code"], "id": "max_eloc_70", "name": "Maximum Executable Lines of Code of 70"}, {"scope": "file", "description": "Do not use deprecated STL library features.", "tags": ["code-standards", "deprecation", "functions", "hicpp"], "id": "cppcheck_plugin:harosDeprecatedSTL", "name": "Deprecated Functions"}, {"scope": "file", "description": "Cyclomatic Complexity threshold is [1,n/a]", "tags": ["metrics"], "id": "metric:cyclomatic_complexity", "name": "Cyclomatic Complexity Threshold"}, {"scope": "function", "description": "Infinite queue sizes (0) are not recommended.", "tags": ["warning", "ros", "ros-comm", "topics", "queue-size", "configuration"], "id": "static_graph:infinite_queue", "name": "Use of Infinite Topic Queue"}, {"scope": "file", "description": "Do not overload operators with special semantics, such as '&&', '||', ',' or '&'.", "tags": ["code-standards", "overload", "operators", "hicpp", "misra-cpp", "jsf-av-cpp"], "id": "cppcheck_plugin:harosOverrideBinaryOr", "name": "Operator Overload"}, {"scope": "function", "description": "Number of Function Calls threshold is [0,n/a]", "tags": ["metrics"], "id": "metric:function_calls", "name": "Number of Function Calls Threshold"}, {"scope": "file", "description": "Declarations should be at the smallest feasible scope.", "tags": ["code-standards", "scope", "declarations", "jsf-av-cpp"], "id": "cppcheck_plugin:variableScope", "name": "Smallest Feasible Scope"}, {"scope": "file", "description": "Some packages are referenced, but not part of the analysis corpus.", "tags": ["warning", "haros", "packages", "unknown-references", "configuration"], "id": "static_graph:unknown_packages", "name": "Use of Unknown Packages"}, {"scope": "file", "description": "Ensure that no expression is redundant.", "tags": ["code-standards", "redundancy", "hicpp"], "id": "cppcheck_plugin:unreadVariable", "name": "No Redundant Variables"}, {"scope": "file", "description": "Program Lines of Code threshold is [0,n/a]", "tags": ["metrics"], "id": "metric:ploc", "name": "Program Lines of Code Threshold"}, {"scope": "function", "description": "Nesting of Control Structures threshold is [0,n/a]", "tags": ["metrics"], "id": "metric:nested_control", "name": "Nesting of Control Structures Threshold"}, {"scope": "function", "description": "Estimated Static Path Count threshold is [1,n/a]", "tags": ["metrics"], "id": "metric:static_path_count", "name": "Estimated Static Path Count Threshold"}, {"scope": "file", "description": "Maximum Executable Lines of Code of 50", "tags": ["metrics", "nasa-satc", "his", "eloc", "loc", "lines-of-code"], "id": "max_eloc_50", "name": "Maximum Executable Lines of Code of 50"}, {"scope": "file", "description": "Maximum Function Calls of 10", "tags": ["metrics", "kth", "ros", "function-calls"], "id": "max_function_calls_10", "name": "Maximum Function Calls of 10"}, {"scope": "function", "description": "Queue sizes should be adequate for their purpose.", "tags": ["warning", "ros", "ros-comm", "topics", "queue-size", "configuration"], "id": "static_graph:small_queue_sizes", "name": "Use Adequate Queue Sizes"}, {"scope": "file", "description": "Halstead Bugs above 2", "tags": ["metrics", "verifysoft", "halstead", "bugs", "halstead-bugs"], "id": "halstead_bugs_above_2", "name": "Halstead Bugs Above 2"}, {"scope": "function", "description": "Do not pass a std::unique_ptr by const reference.", "tags": ["code-standards", "pointers", "std-unique-ptr", "const", "references", "hicpp"], "id": "cppcheck_plugin:harosConstUniquePtr", "name": "No unique_ptr by Const Reference"}, {"scope": "file", "description": "Minimum Comment Ratio of 20%", "tags": ["metrics", "nasa-satc", "his", "unak", "ros", "comments", "comment-ratio"], "id": "min_comment_ratio_20", "name": "Minimum Comment Ratio of 20%"}, {"scope": "file", "description": "Maximum Weighted Methods per Class of 50", "tags": ["metrics", "unak", "wmc", "weighted-methods", "methods"], "id": "max_weighted_methods_50", "name": "Maximum Weighted Methods per Class of 50"}, {"scope": "file", "description": "Do not rely on the sequence of evaluation within an expression.", "tags": ["code-standards", "evaluation-order", "expressions", "hicpp", "misra-cpp", "jsf-av-cpp"], "id": "cppcheck_plugin:harosAssignIncrement", "name": "Order of Evaluation"}, {"scope": "function", "description": "Message types must match on both communication ends.", "tags": ["warning", "ros", "ros-comm", "type-checking", "configuration"], "id": "static_graph:msg_type_check", "name": "Message Type Mismatch"}, {"scope": "file", "description": "Halstead Volume above 8000", "tags": ["metrics", "verifysoft", "halstead", "halstead-volume"], "id": "halstead_volume_above_8000", "name": "Halstead Volume Above 8000"}, {"scope": "function", "description": "Maximum number of function parameters of 6", "tags": ["code-standards", "functions", "parameters", "hicpp"], "id": "max_function_parameters_6", "name": "Maximum Function Parameters of 6"}, {"scope": "file", "description": "Maximum Estimated Static Path Count of 200", "tags": ["metrics", "hicpp", "static-path"], "id": "max_static_path_200", "name": "Maximum Estimated Static Path Count of 200"}, {"scope": "file", "description": "Executable Lines of Code threshold is [0,n/a]", "tags": ["metrics"], "id": "metric:eloc", "name": "Executable Lines of Code Threshold"}, {"scope": "file", "description": "Maximum Deepest Level of Inheritance of 5", "tags": ["metrics", "nasa-satc", "unak", "dit", "inheritance"], "id": "max_deepest_inheritance_5", "name": "Maximum Deepest Level of Inheritance of 5"}, {"scope": "file", "description": "Referencing ROS resources by global name should be avoided.", "tags": ["warning", "ros", "ros-comm", "topics", "names", "global-names"], "id": "static_graph:global_names", "name": "Use of Global Names"}, {"scope": "function", "description": "Maximum number of function parameters: 6", "tags": ["code-standards", "functions", "parameters", "hicpp"], "id": "cppcheck_plugin:harosSixParams", "name": "Maximum of 6 Function Parameters"}, {"scope": "file", "description": "Halstead's Volume threshold is [0,n/a]", "tags": ["metrics"], "id": "metric:halstead_volume", "name": "Halstead's Volume Threshold"}, {"scope": "file", "description": "Time Required to Program threshold is [0,n/a]", "tags": ["metrics"], "id": "metric:halstead_time", "name": "Time Required to Program Threshold"}, {"scope": "function", "description": "Number of Function Parameters threshold is [0,n/a]", "tags": ["metrics"], "id": "metric:function_parameters", "name": "Number of Function Parameters Threshold"}, {"scope": "file", "description": "Maximum Estimated Static Path Count of 250", "tags": ["metrics", "kth", "ros", "static-path"], "id": "max_static_path_250", "name": "Maximum Estimated Static Path Count of 250"}, {"scope": "file", "description": "Maximum Methods Available in Class of 20", "tags": ["metrics", "nasa-satc", "ros", "mac", "methods-available", "methods"], "id": "max_methods_available_20", "name": "Maximum Methods Available in Class of 20"}, {"scope": "file", "description": "Lines of Comments threshold is [0,n/a]", "tags": ["metrics"], "id": "metric:comments", "name": "Lines of Comments Threshold"}, {"scope": "file", "description": "Use at most two levels of pointer indirection.", "tags": ["code-standards", "pointers", "multiple-pointers", "misra-cpp", "jsf-av-cpp"], "id": "cppcheck_plugin:harosTriplePointer", "name": "Pointer Indirection"}, {"scope": "file", "description": "Do not overload operators with special semantics, such as '&&', '||', ',' or '&'.", "tags": ["code-standards", "overload", "operators", "hicpp", "misra-cpp", "jsf-av-cpp"], "id": "cppcheck_plugin:harosOverrideComma", "name": "Operator Overload"}, {"scope": "function", "description": "Do not create an rvalue reference of std::array.", "tags": ["code-standards", "std-array", "rvalue-reference", "hicpp"], "id": "cppcheck_plugin:harosRvalueStdArray", "name": "Array Reference"}, {"scope": "file", "description": "Do not use the deprecated register keyword.", "tags": ["code-standards", "deprecation", "register", "cpp11", "hicpp"], "id": "cppcheck_plugin:harosRegisterKeyword", "name": "Do Not Use register"}, {"scope": "file", "description": "Maximum Cyclomatic Complexity of 15", "tags": ["metrics", "kth", "ros", "cyclomatic-complexity"], "id": "max_cyclomatic_complexity_15", "name": "Maximum Cyclomatic Complexity of 15"}, {"scope": "function", "description": "Maximum number of function lines of code of 40", "tags": ["code-standards", "metrics", "functions", "loc", "lines-of-code", "google-cpp", "verifysoft"], "id": "max_function_length_40", "name": "Maximum Function Length of 40"}, {"scope": "file", "description": "Maximum Cyclomatic Complexity of 10", "tags": ["metrics", "nasa-satc", "his", "cyclomatic-complexity"], "id": "max_cyclomatic_complexity_10", "name": "Maximum Cyclomatic Complexity of 10"}, {"scope": "file", "description": "Maintainability Index below 65", "tags": ["metrics", "verifysoft", "maintainability", "mi", "maintainability-index"], "id": "mi_below_65", "name": "Maintainability Index Below 65"}, {"scope": "file", "description": "Do not rely on the sequence of evaluation within an expression.", "tags": ["code-standards", "evaluation-order", "expressions", "hicpp", "misra-cpp", "jsf-av-cpp"], "id": "cppcheck_plugin:harosAssignAssignment", "name": "Order of Evaluation"}, {"scope": "file", "description": "Two disconnected topics look very similar. Maybe they were meant to be the same.", "tags": ["warning", "ros", "ros-comm", "topics", "naming", "remappings", "configuration"], "id": "static_graph:disconnected_topics", "name": "Possible Topic Naming Mistake"}, {"scope": "file", "description": "Wrap use of the C Standard Library.", "tags": ["code-standards", "c", "libraries", "c-standard-library", "hicpp", "misra-cpp"], "id": "cppcheck_plugin:harosUsingErrno", "name": "C Standard Library"}, {"scope": "file", "description": "Ensure that no expression is redundant.", "tags": ["code-standards", "redundancy", "hicpp"], "id": "cppcheck_plugin:redundantAssignment", "name": "No Redundant Expressions"}, {"scope": "file", "description": "Maximum Weighted Methods per Class of 100", "tags": ["metrics", "nasa-satc", "ros", "wmc", "weighted-methods", "methods"], "id": "max_weighted_methods_100", "name": "Maximum Weighted Methods per Class of 100"}, {"scope": "file", "description": "Use at most one level of pointer indirection.", "tags": ["code-standards", "pointers", "multiple-pointers", "hicpp"], "id": "cppcheck_plugin:harosDoublePointer", "name": "Pointer Indirection"}, {"scope": "file", "description": "Maintainability Index threshold is [0,100]", "tags": ["metrics"], "id": "metric:maintainability_index", "name": "Maintainability Index Threshold"}, {"scope": "function", "description": "A switch should have at least two cases distinct from the default case.", "tags": ["code-standards", "switch", "hicpp", "misra-cpp", "jsf-av-cpp"], "id": "cppcheck_plugin:harosBooleanCase", "name": "At Least Two Cases"}, {"scope": "file", "description": "Maximum Comment Ratio of 40%", "tags": ["metrics", "unak", "comments", "comment-ratio"], "id": "max_comment_ratio_40", "name": "Maximum Comment Ratio of 40%"}, {"scope": "file", "description": "There shall be no unused variables.", "tags": ["code-standards", "variables", "unused-variables", "misra-cpp"], "id": "cppcheck_plugin:unusedFunction", "name": "No Unused Variables"}, {"scope": "file", "description": "Comment Ratio threshold is [0,1.0]", "tags": ["metrics"], "id": "metric:comment_ratio", "name": "Comment Ratio Threshold"}, {"scope": "file", "description": "Maximum Number of Immediate Children of 10", "tags": ["metrics", "unak", "immediate-children", "noc"], "id": "max_immediate_children_10", "name": "Maximum Number of Immediate Children of 10"}, {"scope": "file", "description": "Deepest Level of Inheritance threshold is [1,n/a]", "tags": ["metrics"], "id": "metric:depth_in_tree", "name": "Deepest Level of Inheritance Threshold"}, {"scope": "class", "description": "All member variables of a class should be initialized after calling the constructor.", "tags": ["code-standards", "classes", "member-variables", "uninitialized-variables", "constructors", "google-cpp", "jsf-av-cpp", "misra-cpp", "hicpp"], "id": "cppcheck_plugin:uninitMemberVar", "name": "No Uninitialized Member Variables"}, {"scope": "function", "description": "Do not use default arguments.", "tags": ["code-standards", "functions", "default-arguments", "arguments", "parameters", "hicpp"], "id": "cppcheck_plugin:harosDefaultArguments", "name": "No Default Arguments"}, {"scope": "file", "description": "Do not use unions. Use a safe polymorphic abstraction, instead.", "tags": ["code-standards", "unions", "polymorphism", "type-safety", "hicpp", "misra-cpp", "jsf-av-cpp"], "id": "cppcheck_plugin:harosUnion", "name": "No Unions"}, {"scope": "file", "description": "Methods Available in Class threshold is [1,n/a]", "tags": ["metrics"], "id": "metric:methods_available", "name": "Methods Available in Class Threshold"}, {"scope": "file", "description": "Maximum Comment Ratio of 30%", "tags": ["metrics", "nasa-satc", "comments", "comment-ratio"], "id": "max_comment_ratio_30", "name": "Maximum Comment Ratio of 30%"}, {"scope": "file", "description": "Maximum number of program lines of code in a file of 400", "tags": ["metrics", "loc", "lines-of-code", "verifysoft"], "id": "max_file_length_400", "name": "Maximum File Length of 400"}, {"scope": "file", "description": "Do not write code that expects floating point calculations to yield exact results.", "tags": ["code-standards", "floats", "floating-point", "hicpp"], "id": "cppcheck_plugin:harosFloatEquality", "name": "Float Accuracy"}, {"scope": "function", "description": "Non-empty case blocks must not fall through to the next case.", "tags": ["code-standards", "switch", "case", "fall-through", "hicpp"], "id": "cppcheck_plugin:harosCaseWithoutBreak", "name": "Unexpected Case Fall Through"}, {"scope": "file", "description": "Maximum Function Calls of 7", "tags": ["metrics", "his", "function-calls"], "id": "max_function_calls_7", "name": "Maximum Function Calls of 7"}, {"scope": "file", "description": "Ensure that an enum has a specified base type able to accomodate all its values.", "tags": ["code-standards", "enum", "types", "hicpp"], "id": "cppcheck_plugin:harosEnumWithoutBase", "name": "Enum With No Base Type"}, {"scope": "file", "description": "Do not overload operators with special semantics, such as '&&', '||', ',' or '&'.", "tags": ["code-standards", "overload", "operators", "hicpp", "misra-cpp", "jsf-av-cpp"], "id": "cppcheck_plugin:harosOverrideBinaryAnd", "name": "Operator Overload"}]