[
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "run_stop_auto_restart.cpp",
    "line": 31,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:31:  Include 'pr2_msgs/PowerBoardState.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "run_stop_auto_restart.cpp",
    "line": 33,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:33:  Include 'pr2_power_board/PowerBoardCommand.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "run_stop_auto_restart.cpp",
    "line": 39,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:39:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "run_stop_auto_restart.cpp",
    "line": 40,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:40:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "run_stop_auto_restart.cpp",
    "line": 40,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:40:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "run_stop_auto_restart.cpp",
    "line": 44,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:44:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "run_stop_auto_restart.cpp",
    "line": 44,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:44:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "run_stop_auto_restart.cpp",
    "line": 44,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:44:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "run_stop_auto_restart.cpp",
    "line": 51,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:51:  Missing spaces around <  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "run_stop_auto_restart.cpp",
    "line": 51,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:51:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "run_stop_auto_restart.cpp",
    "line": 54,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:54:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "run_stop_auto_restart.cpp",
    "line": 54,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:54:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "run_stop_auto_restart.cpp",
    "line": 59,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:59:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "run_stop_auto_restart.cpp",
    "line": 59,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:59:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "run_stop_auto_restart.cpp",
    "line": 59,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:59:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "run_stop_auto_restart.cpp",
    "line": 73,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:73:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "run_stop_auto_restart.cpp",
    "line": 78,
    "function": null,
    "comment": "run_stop_auto_restart.cpp:78:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "run_stop_auto_restart.cpp",
    "line": 51,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "run_stop_auto_restart.cpp",
    "line": 72,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "run_stop_auto_restart.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "run_stop_auto_restart.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  }
]