[
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "teleop_gripper.cpp",
    "line": 32,
    "function": null,
    "comment": "teleop_gripper.cpp:32:  Include 'pr2_controllers_msgs/Pr2GripperCommand.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_gripper.cpp",
    "line": 36,
    "function": null,
    "comment": "teleop_gripper.cpp:36:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "teleop_gripper.cpp",
    "line": 37,
    "function": null,
    "comment": "teleop_gripper.cpp:37:  public: should be indented +1 space inside class TeleopGripper  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_gripper.cpp",
    "line": 39,
    "function": null,
    "comment": "teleop_gripper.cpp:39:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_gripper.cpp",
    "line": 51,
    "function": null,
    "comment": "teleop_gripper.cpp:51:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_gripper.cpp",
    "line": 58,
    "function": null,
    "comment": "teleop_gripper.cpp:58:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "teleop_gripper.cpp",
    "line": 60,
    "function": null,
    "comment": "teleop_gripper.cpp:60:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "teleop_gripper.cpp",
    "line": 61,
    "function": null,
    "comment": "teleop_gripper.cpp:61:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_gripper.cpp",
    "line": 64,
    "function": null,
    "comment": "teleop_gripper.cpp:64:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_gripper.cpp",
    "line": 65,
    "function": null,
    "comment": "teleop_gripper.cpp:65:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_gripper.cpp",
    "line": 69,
    "function": null,
    "comment": "teleop_gripper.cpp:69:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_gripper.cpp",
    "line": 72,
    "function": null,
    "comment": "teleop_gripper.cpp:72:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "teleop_gripper.cpp",
    "line": 76,
    "function": null,
    "comment": "teleop_gripper.cpp:76:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_gripper.cpp",
    "line": 77,
    "function": null,
    "comment": "teleop_gripper.cpp:77:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "teleop_gripper.cpp",
    "line": 83,
    "function": null,
    "comment": "teleop_gripper.cpp:83:  private: should be indented +1 space inside class TeleopGripper  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_gripper.cpp",
    "line": 97,
    "function": null,
    "comment": "teleop_gripper.cpp:97:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "teleop_gripper.cpp",
    "line": 103,
    "function": null,
    "comment": "teleop_gripper.cpp:103:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "teleop_pr2.cpp",
    "line": 31,
    "function": null,
    "comment": "teleop_pr2.cpp:31:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 32,
    "function": null,
    "comment": "teleop_pr2.cpp:32:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "teleop_pr2.cpp",
    "line": 32,
    "function": null,
    "comment": "teleop_pr2.cpp:32:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "teleop_pr2.cpp",
    "line": 35,
    "function": null,
    "comment": "teleop_pr2.cpp:35:  Include 'cstdio' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "teleop_pr2.cpp",
    "line": 36,
    "function": null,
    "comment": "teleop_pr2.cpp:36:  Found C system header after C++ system header. Should be: teleop_pr2.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "teleop_pr2.cpp",
    "line": 37,
    "function": null,
    "comment": "teleop_pr2.cpp:37:  Found C system header after C++ system header. Should be: teleop_pr2.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not include the C standard headers. Use the C++ headers instead.",
    "file": "teleop_pr2.cpp",
    "line": 37,
    "function": null,
    "comment": "teleop_pr2.cpp:37:  Include 'cmath' instead of 'math.h'.  [build/include] [5]",
    "tags": ["hicpp","code-standards","headers","include","preprocessor","deprecation","c"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "teleop_pr2.cpp",
    "line": 38,
    "function": null,
    "comment": "teleop_pr2.cpp:38:  Found C system header after C++ system header. Should be: teleop_pr2.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "teleop_pr2.cpp",
    "line": 41,
    "function": null,
    "comment": "teleop_pr2.cpp:41:  Include 'geometry_msgs/Twist.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "teleop_pr2.cpp",
    "line": 44,
    "function": null,
    "comment": "teleop_pr2.cpp:44:  Include 'pr2_controllers_msgs/JointTrajectoryControllerState.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "teleop_pr2.cpp",
    "line": 46,
    "function": null,
    "comment": "teleop_pr2.cpp:46:  Include 'std_msgs/String.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "teleop_pr2.cpp",
    "line": 54,
    "function": null,
    "comment": "teleop_pr2.cpp:54:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 57,
    "function": null,
    "comment": "teleop_pr2.cpp:57:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "teleop_pr2.cpp",
    "line": 58,
    "function": null,
    "comment": "teleop_pr2.cpp:58:  public: should be indented +1 space inside class TeleopPR2  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "teleop_pr2.cpp",
    "line": 62,
    "function": null,
    "comment": "teleop_pr2.cpp:62:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "teleop_pr2.cpp:86:  Constructors callable with one argument should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "teleop_pr2.cpp",
    "line": 91,
    "function": null,
    "comment": "teleop_pr2.cpp:91:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "teleop_pr2.cpp",
    "line": 93,
    "function": null,
    "comment": "teleop_pr2.cpp:93:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 99,
    "function": null,
    "comment": "teleop_pr2.cpp:99:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "teleop_pr2.cpp",
    "line": 105,
    "function": null,
    "comment": "teleop_pr2.cpp:105:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "teleop_pr2.cpp",
    "line": 142,
    "function": null,
    "comment": "teleop_pr2.cpp:142:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 143,
    "function": null,
    "comment": "teleop_pr2.cpp:143:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "teleop_pr2.cpp",
    "line": 143,
    "function": null,
    "comment": "teleop_pr2.cpp:143:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "teleop_pr2.cpp",
    "line": 143,
    "function": null,
    "comment": "teleop_pr2.cpp:143:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "teleop_pr2.cpp",
    "line": 144,
    "function": null,
    "comment": "teleop_pr2.cpp:144:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "teleop_pr2.cpp",
    "line": 145,
    "function": null,
    "comment": "teleop_pr2.cpp:145:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 145,
    "function": null,
    "comment": "teleop_pr2.cpp:145:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "teleop_pr2.cpp",
    "line": 146,
    "function": null,
    "comment": "teleop_pr2.cpp:146:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "teleop_pr2.cpp",
    "line": 146,
    "function": null,
    "comment": "teleop_pr2.cpp:146:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "teleop_pr2.cpp",
    "line": 146,
    "function": null,
    "comment": "teleop_pr2.cpp:146:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "teleop_pr2.cpp",
    "line": 147,
    "function": null,
    "comment": "teleop_pr2.cpp:147:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "teleop_pr2.cpp",
    "line": 148,
    "function": null,
    "comment": "teleop_pr2.cpp:148:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "teleop_pr2.cpp",
    "line": 149,
    "function": null,
    "comment": "teleop_pr2.cpp:149:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "teleop_pr2.cpp",
    "line": 149,
    "function": null,
    "comment": "teleop_pr2.cpp:149:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "teleop_pr2.cpp",
    "line": 150,
    "function": null,
    "comment": "teleop_pr2.cpp:150:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 150,
    "function": null,
    "comment": "teleop_pr2.cpp:150:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "teleop_pr2.cpp",
    "line": 151,
    "function": null,
    "comment": "teleop_pr2.cpp:151:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "teleop_pr2.cpp",
    "line": 152,
    "function": null,
    "comment": "teleop_pr2.cpp:152:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "teleop_pr2.cpp",
    "line": 153,
    "function": null,
    "comment": "teleop_pr2.cpp:153:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 180,
    "function": null,
    "comment": "teleop_pr2.cpp:180:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 182,
    "function": null,
    "comment": "teleop_pr2.cpp:182:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 186,
    "function": null,
    "comment": "teleop_pr2.cpp:186:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 187,
    "function": null,
    "comment": "teleop_pr2.cpp:187:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 194,
    "function": null,
    "comment": "teleop_pr2.cpp:194:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 196,
    "function": null,
    "comment": "teleop_pr2.cpp:196:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "teleop_pr2.cpp",
    "line": 196,
    "function": null,
    "comment": "teleop_pr2.cpp:196:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 197,
    "function": null,
    "comment": "teleop_pr2.cpp:197:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "teleop_pr2.cpp",
    "line": 197,
    "function": null,
    "comment": "teleop_pr2.cpp:197:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "teleop_pr2.cpp",
    "line": 197,
    "function": null,
    "comment": "teleop_pr2.cpp:197:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 207,
    "function": null,
    "comment": "teleop_pr2.cpp:207:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "teleop_pr2.cpp",
    "line": 208,
    "function": null,
    "comment": "teleop_pr2.cpp:208:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 211,
    "function": null,
    "comment": "teleop_pr2.cpp:211:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 216,
    "function": null,
    "comment": "teleop_pr2.cpp:216:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 219,
    "function": null,
    "comment": "teleop_pr2.cpp:219:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 224,
    "function": null,
    "comment": "teleop_pr2.cpp:224:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "teleop_pr2.cpp",
    "line": 224,
    "function": null,
    "comment": "teleop_pr2.cpp:224:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 228,
    "function": null,
    "comment": "teleop_pr2.cpp:228:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "teleop_pr2.cpp",
    "line": 228,
    "function": null,
    "comment": "teleop_pr2.cpp:228:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 232,
    "function": null,
    "comment": "teleop_pr2.cpp:232:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "teleop_pr2.cpp",
    "line": 232,
    "function": null,
    "comment": "teleop_pr2.cpp:232:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 247,
    "function": null,
    "comment": "teleop_pr2.cpp:247:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "teleop_pr2.cpp",
    "line": 248,
    "function": null,
    "comment": "teleop_pr2.cpp:248:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 249,
    "function": null,
    "comment": "teleop_pr2.cpp:249:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "teleop_pr2.cpp",
    "line": 253,
    "function": null,
    "comment": "teleop_pr2.cpp:253:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 254,
    "function": null,
    "comment": "teleop_pr2.cpp:254:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 260,
    "function": null,
    "comment": "teleop_pr2.cpp:260:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 261,
    "function": null,
    "comment": "teleop_pr2.cpp:261:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 274,
    "function": null,
    "comment": "teleop_pr2.cpp:274:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "teleop_pr2.cpp",
    "line": 275,
    "function": null,
    "comment": "teleop_pr2.cpp:275:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 277,
    "function": null,
    "comment": "teleop_pr2.cpp:277:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "teleop_pr2.cpp",
    "line": 278,
    "function": null,
    "comment": "teleop_pr2.cpp:278:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 279,
    "function": null,
    "comment": "teleop_pr2.cpp:279:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "teleop_pr2.cpp",
    "line": 279,
    "function": null,
    "comment": "teleop_pr2.cpp:279:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "teleop_pr2.cpp",
    "line": 279,
    "function": null,
    "comment": "teleop_pr2.cpp:279:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 282,
    "function": null,
    "comment": "teleop_pr2.cpp:282:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "teleop_pr2.cpp",
    "line": 282,
    "function": null,
    "comment": "teleop_pr2.cpp:282:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "teleop_pr2.cpp",
    "line": 282,
    "function": null,
    "comment": "teleop_pr2.cpp:282:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 284,
    "function": null,
    "comment": "teleop_pr2.cpp:284:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "teleop_pr2.cpp",
    "line": 286,
    "function": null,
    "comment": "teleop_pr2.cpp:286:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "teleop_pr2.cpp",
    "line": 286,
    "function": null,
    "comment": "teleop_pr2.cpp:286:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 286,
    "function": null,
    "comment": "teleop_pr2.cpp:286:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "teleop_pr2.cpp",
    "line": 286,
    "function": null,
    "comment": "teleop_pr2.cpp:286:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 287,
    "function": null,
    "comment": "teleop_pr2.cpp:287:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 299,
    "function": null,
    "comment": "teleop_pr2.cpp:299:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "teleop_pr2.cpp",
    "line": 300,
    "function": null,
    "comment": "teleop_pr2.cpp:300:  Using deprecated casting style.  Use static_cast<double>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 319,
    "function": null,
    "comment": "teleop_pr2.cpp:319:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "teleop_pr2.cpp",
    "line": 320,
    "function": null,
    "comment": "teleop_pr2.cpp:320:  Using deprecated casting style.  Use static_cast<double>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 343,
    "function": null,
    "comment": "teleop_pr2.cpp:343:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "teleop_pr2.cpp",
    "line": 343,
    "function": null,
    "comment": "teleop_pr2.cpp:343:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 344,
    "function": null,
    "comment": "teleop_pr2.cpp:344:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "teleop_pr2.cpp",
    "line": 346,
    "function": null,
    "comment": "teleop_pr2.cpp:346:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "teleop_pr2.cpp",
    "line": 347,
    "function": null,
    "comment": "teleop_pr2.cpp:347:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "teleop_pr2.cpp",
    "line": 349,
    "function": null,
    "comment": "teleop_pr2.cpp:349:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 350,
    "function": null,
    "comment": "teleop_pr2.cpp:350:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 351,
    "function": null,
    "comment": "teleop_pr2.cpp:351:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "teleop_pr2.cpp",
    "line": 351,
    "function": null,
    "comment": "teleop_pr2.cpp:351:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 352,
    "function": null,
    "comment": "teleop_pr2.cpp:352:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "teleop_pr2.cpp",
    "line": 352,
    "function": null,
    "comment": "teleop_pr2.cpp:352:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "teleop_pr2.cpp",
    "line": 352,
    "function": null,
    "comment": "teleop_pr2.cpp:352:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 355,
    "function": null,
    "comment": "teleop_pr2.cpp:355:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "teleop_pr2.cpp",
    "line": 355,
    "function": null,
    "comment": "teleop_pr2.cpp:355:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "teleop_pr2.cpp",
    "line": 355,
    "function": null,
    "comment": "teleop_pr2.cpp:355:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "teleop_pr2.cpp",
    "line": 358,
    "function": null,
    "comment": "teleop_pr2.cpp:358:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "If an else has a brace on one side, it should have it on both.",
    "file": "teleop_pr2.cpp",
    "line": 358,
    "function": null,
    "comment": "teleop_pr2.cpp:358:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 358,
    "function": null,
    "comment": "teleop_pr2.cpp:358:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "teleop_pr2.cpp",
    "line": 358,
    "function": null,
    "comment": "teleop_pr2.cpp:358:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 359,
    "function": null,
    "comment": "teleop_pr2.cpp:359:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 366,
    "function": null,
    "comment": "teleop_pr2.cpp:366:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "teleop_pr2.cpp",
    "line": 372,
    "function": null,
    "comment": "teleop_pr2.cpp:372:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 376,
    "function": null,
    "comment": "teleop_pr2.cpp:376:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 377,
    "function": null,
    "comment": "teleop_pr2.cpp:377:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 381,
    "function": null,
    "comment": "teleop_pr2.cpp:381:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "teleop_pr2.cpp",
    "line": 382,
    "function": null,
    "comment": "teleop_pr2.cpp:382:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 388,
    "function": null,
    "comment": "teleop_pr2.cpp:388:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "teleop_pr2.cpp",
    "line": 393,
    "function": null,
    "comment": "teleop_pr2.cpp:393:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "teleop_pr2.cpp",
    "line": 393,
    "function": null,
    "comment": "teleop_pr2.cpp:393:  Missing spaces around <  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "teleop_pr2.cpp",
    "line": 393,
    "function": null,
    "comment": "teleop_pr2.cpp:393:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a semicolon, if it does not end the line.",
    "file": "teleop_pr2.cpp",
    "line": 393,
    "function": null,
    "comment": "teleop_pr2.cpp:393:  Missing space after ;  [whitespace/semicolon] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","semicolon"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 394,
    "function": null,
    "comment": "teleop_pr2.cpp:394:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "teleop_pr2.cpp",
    "line": 395,
    "function": null,
    "comment": "teleop_pr2.cpp:395:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2.cpp",
    "line": 405,
    "function": null,
    "comment": "teleop_pr2.cpp:405:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "teleop_pr2.cpp",
    "line": 73,
    "function": null,
    "comment": "teleop_pr2.cpp:73:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "teleop_pr2.cpp",
    "line": 382,
    "function": null,
    "comment": "teleop_pr2.cpp:382:  Add #include <algorithm> for min  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 34,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:34:  Include 'signal.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not include the C standard headers. Use the C++ headers instead.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 34,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:34:  Include 'csignal' instead of 'signal.h'.  [build/include] [5]",
    "tags": ["hicpp","code-standards","headers","include","preprocessor","deprecation","c"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 35,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:35:  Include 'math.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not include the C standard headers. Use the C++ headers instead.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 35,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:35:  Include 'cmath' instead of 'math.h'.  [build/include] [5]",
    "tags": ["hicpp","code-standards","headers","include","preprocessor","deprecation","c"]
  },
  {
    "rule": "Do not include the C standard headers. Use the C++ headers instead.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 36,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:36:  Include 'cstdio' instead of 'stdio.h'.  [build/include] [5]",
    "tags": ["hicpp","code-standards","headers","include","preprocessor","deprecation","c"]
  },
  {
    "rule": "Do not include the C standard headers. Use the C++ headers instead.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 37,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:37:  Include 'cstdlib' instead of 'stdlib.h'.  [build/include] [5]",
    "tags": ["hicpp","code-standards","headers","include","preprocessor","deprecation","c"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 40,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:40:  Include 'geometry_msgs/Twist.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 45,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:45:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 57,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:57:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 58,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:58:  private: should be indented +1 space inside class TeleopPR2Keyboard  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 65,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:65:  public: should be indented +1 space inside class TeleopPR2Keyboard  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 67,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:67:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 67,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:67:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 77,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:77:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 79,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:79:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 82,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:82:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 89,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:89:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 95,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:95:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 101,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:101:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 109,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:109:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 111,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:111:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Unary operators should have no whitespace around them.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 116,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:116:  Extra space for operator ~   [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","unary-operator"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 129,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:129:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 130,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:130:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 132,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:132:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 133,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:133:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 140,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:140:  Missing space before ( in switch(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 141,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:141:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 168,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:168:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 195,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:195:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 197,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:197:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 201,
    "function": null,
    "comment": "teleop_pr2_keyboard.cpp:201:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "teleop_gripper.cpp",
    "line": 88,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "teleop_gripper.cpp",
    "line": 89,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "teleop_gripper.cpp",
    "line": 96,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::min_torso' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::max_torso' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::req_torso_vel' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::torso_step' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::req_vx' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::req_vy' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::req_vw' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::req_torso' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::req_pan' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::req_tilt' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::req_tilt_vel' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::req_pan_vel' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::axis_vx' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::axis_vy' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::axis_vw' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::axis_pan' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::axis_tilt' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::deadman_button' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::run_button' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::torso_dn_button' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::torso_up_button' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "All member variables of a class should be initialized after calling the constructor.",
    "file": "teleop_pr2.cpp",
    "line": 86,
    "function": null,
    "comment": "Member variable 'TeleopPR2::head_button' is not initialized in the constructor.",
    "tags": ["hicpp","code-standards","google-cpp","misra-cpp","classes","member-variables","uninitialized-variables","constructors","jsf-av-cpp"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "teleop_pr2.cpp",
    "line": 67,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "teleop_pr2.cpp",
    "line": 68,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "teleop_pr2.cpp",
    "line": 387,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "teleop_pr2.cpp",
    "line": 393,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not rely on the sequence of evaluation within an expression.",
    "file": "teleop_pr2.cpp",
    "line": 100,
    "function": null,
    "comment": "Found assignment as a subexpression.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","evaluation-order","expressions"]
  },
  {
    "rule": "Do not rely on the sequence of evaluation within an expression.",
    "file": "teleop_pr2.cpp",
    "line": 364,
    "function": null,
    "comment": "Found assignment as a subexpression.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","evaluation-order","expressions"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 85,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 88,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 94,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not rely on the sequence of evaluation within an expression.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 68,
    "function": null,
    "comment": "Found assignment as a subexpression.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","evaluation-order","expressions"]
  },
  {
    "rule": "Do not rely on the sequence of evaluation within an expression.",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 138,
    "function": null,
    "comment": "Found assignment as a subexpression.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","evaluation-order","expressions"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "teleop_gripper.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "teleop_gripper.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  },
  {
    "rule": "Maximum coupling between objects: 5",
    "file": "teleop_pr2.cpp",
    "line": null,
    "function": null,
    "comment": "CBO is greater than 5, TeleopPR2, 10",
    "tags": ["metrics","nasa-satc","ros","coupling"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "teleop_pr2.cpp",
    "line": 206,
    "function": "joy_cb",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 15",
    "file": "teleop_pr2.cpp",
    "line": 206,
    "function": "joy_cb",
    "comment": "CC is greater than 15",
    "tags": ["metrics","ros","cyclomatic-complexity","kth"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "teleop_pr2.cpp",
    "line": 273,
    "function": "send_cmd_vel",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 81,
    "function": "keyboardLoop",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 15",
    "file": "teleop_pr2_keyboard.cpp",
    "line": 81,
    "function": "keyboardLoop",
    "comment": "CC is greater than 15",
    "tags": ["metrics","ros","cyclomatic-complexity","kth"]
  }
]