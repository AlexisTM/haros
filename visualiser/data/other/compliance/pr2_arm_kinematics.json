[
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "pr2_arm_ik_solver.h",
    "line": 37,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:37:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_PR2_ARM_IK_SOLVER_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "pr2_arm_ik_solver.h",
    "line": 37,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:37:  #ifndef header guard has wrong style, please use: PR2_ARM_IK_SOLVER_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "pr2_arm_ik_solver.h",
    "line": 265,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:265:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_PR2_ARM_IK_SOLVER_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_ik_solver.h",
    "line": 41,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:41:  Include 'Eigen/Core' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_ik_solver.h",
    "line": 44,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:44:  Include 'moveit/kinematics_base/kinematics_base.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_ik_solver.h",
    "line": 46,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:46:  Include 'moveit_msgs/GetKinematicSolverInfo.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_ik_solver.h",
    "line": 48,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:48:  Include 'geometry_msgs/PoseStamped.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.h",
    "line": 52,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:52:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not indent within a namespace.",
    "file": "pr2_arm_ik_solver.h",
    "line": 57,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:57:  Do not indent within a namespace  [runtime/indentation_namespace] [4]",
    "tags": ["code-standards","formatting","google-cpp","indentation","namespace"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.h",
    "line": 58,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:58:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pr2_arm_ik_solver.h",
    "line": 59,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:59:  public: should be indented +1 space inside class PR2ArmIKSolver  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_arm_ik_solver.h",
    "line": 60,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:60:  Do not leave a blank line after 'public:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "pr2_arm_ik_solver.h",
    "line": 72,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:72:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "Do not use meaningless empty statements.",
    "file": "pr2_arm_ik_solver.h",
    "line": 72,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:72:  You don't need a ; after a }  [readability/braces] [4]",
    "tags": ["code-standards","google-cpp","empty-statement","ambiguous-code"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik_solver.h",
    "line": 98,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:98:  Is this a non-const reference? If so, make const or use a pointer: KDL::JntArray& q_out  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik_solver.h",
    "line": 114,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:114:  Is this a non-const reference? If so, make const or use a pointer: std::vector<KDL::JntArray> &q_out  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik_solver.h",
    "line": 129,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:129:  Is this a non-const reference? If so, make const or use a pointer: std::vector<KDL::JntArray> &q_out  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_arm_ik_solver.h",
    "line": 143,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:143:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_arm_ik_solver.h",
    "line": 144,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:144:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.h",
    "line": 145,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:145:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use 2 spaces for indentation.",
    "file": "pr2_arm_ik_solver.h",
    "line": 146,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:146:  Weird number of spaces at line-start.  Are you using a 2-space indent?  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","indentation"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_arm_ik_solver.h",
    "line": 146,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:146:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use 2 spaces for indentation.",
    "file": "pr2_arm_ik_solver.h",
    "line": 147,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:147:  Weird number of spaces at line-start.  Are you using a 2-space indent?  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","indentation"]
  },
  {
    "rule": "Use 2 spaces for indentation.",
    "file": "pr2_arm_ik_solver.h",
    "line": 148,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:148:  Weird number of spaces at line-start.  Are you using a 2-space indent?  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","indentation"]
  },
  {
    "rule": "Use 2 spaces for indentation.",
    "file": "pr2_arm_ik_solver.h",
    "line": 149,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:149:  Weird number of spaces at line-start.  Are you using a 2-space indent?  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","indentation"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik_solver.h",
    "line": 167,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:167:  Is this a non-const reference? If so, make const or use a pointer: KDL::JntArray &q_out  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik_solver.h",
    "line": 186,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:186:  Is this a non-const reference? If so, make const or use a pointer: KDL::JntArray &q_out  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik_solver.h",
    "line": 188,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:188:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::MoveItErrorCodes &error_code  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.h",
    "line": 189,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:189:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik_solver.h",
    "line": 207,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:207:  Is this a non-const reference? If so, make const or use a pointer: KDL::JntArray &q_out  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik_solver.h",
    "line": 210,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:210:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::MoveItErrorCodes &error_code  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.h",
    "line": 211,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:211:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik_solver.h",
    "line": 218,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:218:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::KinematicSolverInfo &response  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "pr2_arm_ik_solver.h",
    "line": 222,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:222:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "pr2_arm_ik_solver.h",
    "line": 226,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:226:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pr2_arm_ik_solver.h",
    "line": 230,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:230:  private: should be indented +1 space inside class PR2ArmIKSolver  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_arm_ik_solver.h",
    "line": 231,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:231:  Do not leave a blank line after 'private:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik_solver.h",
    "line": 249,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:249:  Is this a non-const reference? If so, make const or use a pointer: KDL::JntArray &q_out  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik_solver.h",
    "line": 253,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:253:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::MoveItErrorCodes &error_code  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.h",
    "line": 254,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:254:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik_solver.h",
    "line": 256,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:256:  Is this a non-const reference? If so, make const or use a pointer: int &count  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "pr2_arm_ik_solver.h",
    "line": 264,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:264:  Namespace should be terminated with '// namespace pr2_arm_kinematics'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_arm_ik_solver.h",
    "line": 265,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:265:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_ik_solver.h",
    "line": 262,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:262:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_ik_solver.h",
    "line": 129,
    "function": null,
    "comment": "pr2_arm_ik_solver.h:129:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "pr2_arm_kinematics.h",
    "line": 37,
    "function": null,
    "comment": "pr2_arm_kinematics.h:37:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_PR2_ARM_KINEMATICS_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "pr2_arm_kinematics.h",
    "line": 37,
    "function": null,
    "comment": "pr2_arm_kinematics.h:37:  #ifndef header guard has wrong style, please use: PR2_ARM_KINEMATICS_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "pr2_arm_kinematics.h",
    "line": 141,
    "function": null,
    "comment": "pr2_arm_kinematics.h:141:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_PR2_ARM_KINEMATICS_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics.h",
    "line": 50,
    "function": null,
    "comment": "pr2_arm_kinematics.h:50:  Include 'moveit_msgs/GetKinematicSolverInfo.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.h",
    "line": 58,
    "function": null,
    "comment": "pr2_arm_kinematics.h:58:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not indent within a namespace.",
    "file": "pr2_arm_kinematics.h",
    "line": 59,
    "function": null,
    "comment": "pr2_arm_kinematics.h:59:  Do not indent within a namespace  [runtime/indentation_namespace] [4]",
    "tags": ["code-standards","formatting","google-cpp","indentation","namespace"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.h",
    "line": 60,
    "function": null,
    "comment": "pr2_arm_kinematics.h:60:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pr2_arm_kinematics.h",
    "line": 61,
    "function": null,
    "comment": "pr2_arm_kinematics.h:61:  public: should be indented +1 space inside class PR2ArmKinematics  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_arm_kinematics.h",
    "line": 62,
    "function": null,
    "comment": "pr2_arm_kinematics.h:62:  Do not leave a blank line after 'public:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "pr2_arm_kinematics.h",
    "line": 73,
    "function": null,
    "comment": "pr2_arm_kinematics.h:73:  Constructors callable with one argument should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics.h",
    "line": 88,
    "function": null,
    "comment": "pr2_arm_kinematics.h:88:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetPositionIK::Request &request  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics.h",
    "line": 89,
    "function": null,
    "comment": "pr2_arm_kinematics.h:89:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetPositionIK::Response &response  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics.h",
    "line": 96,
    "function": null,
    "comment": "pr2_arm_kinematics.h:96:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetKinematicSolverInfo::Request &request  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.h",
    "line": 97,
    "function": null,
    "comment": "pr2_arm_kinematics.h:97:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics.h",
    "line": 97,
    "function": null,
    "comment": "pr2_arm_kinematics.h:97:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetKinematicSolverInfo::Response &response  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics.h",
    "line": 104,
    "function": null,
    "comment": "pr2_arm_kinematics.h:104:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetKinematicSolverInfo::Request &request  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.h",
    "line": 105,
    "function": null,
    "comment": "pr2_arm_kinematics.h:105:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics.h",
    "line": 105,
    "function": null,
    "comment": "pr2_arm_kinematics.h:105:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetKinematicSolverInfo::Response &response  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics.h",
    "line": 112,
    "function": null,
    "comment": "pr2_arm_kinematics.h:112:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetPositionFK::Request &request  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics.h",
    "line": 113,
    "function": null,
    "comment": "pr2_arm_kinematics.h:113:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetPositionFK::Response &response  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pr2_arm_kinematics.h",
    "line": 115,
    "function": null,
    "comment": "pr2_arm_kinematics.h:115:  protected: should be indented +1 space inside class PR2ArmKinematics  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_arm_kinematics.h",
    "line": 116,
    "function": null,
    "comment": "pr2_arm_kinematics.h:116:  Do not leave a blank line after 'protected:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics.h",
    "line": 118,
    "function": null,
    "comment": "pr2_arm_kinematics.h:118:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetPositionIK::Request &request  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics.h",
    "line": 119,
    "function": null,
    "comment": "pr2_arm_kinematics.h:119:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetPositionIK::Response &response  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics.h",
    "line": 123,
    "function": null,
    "comment": "pr2_arm_kinematics.h:123:  Is this a non-const reference? If so, make const or use a pointer: geometry_msgs::PoseStamped& pose_out  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.h",
    "line": 131,
    "function": null,
    "comment": "pr2_arm_kinematics.h:131:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.h",
    "line": 131,
    "function": null,
    "comment": "pr2_arm_kinematics.h:131:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "pr2_arm_kinematics.h",
    "line": 139,
    "function": null,
    "comment": "pr2_arm_kinematics.h:139:  Namespace should be terminated with '// namespace pr2_arm_kinematics'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_kinematics.h",
    "line": 133,
    "function": null,
    "comment": "pr2_arm_kinematics.h:133:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "pr2_arm_kinematics_constants.h",
    "line": 37,
    "function": null,
    "comment": "pr2_arm_kinematics_constants.h:37:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_PR2_ARM_KINEMATICS_CONSTANTS_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "pr2_arm_kinematics_constants.h",
    "line": 37,
    "function": null,
    "comment": "pr2_arm_kinematics_constants.h:37:  #ifndef header guard has wrong style, please use: PR2_ARM_KINEMATICS_CONSTANTS_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "pr2_arm_kinematics_constants.h",
    "line": 46,
    "function": null,
    "comment": "pr2_arm_kinematics_constants.h:46:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_PR2_ARM_KINEMATICS_CONSTANTS_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_constants.h",
    "line": 41,
    "function": null,
    "comment": "pr2_arm_kinematics_constants.h:41:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 37,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:37:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_PR2_ARM_KINEMATICS_UTILS_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 37,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:37:  #ifndef header guard has wrong style, please use: PR2_ARM_KINEMATICS_UTILS_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 137,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:137:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_PR2_ARM_KINEMATICS_UTILS_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 42,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:42:  Found C system header after C++ system header. Should be: pr2_arm_kinematics_utils.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 43,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:43:  Found C system header after C++ system header. Should be: pr2_arm_kinematics_utils.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 44,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:44:  Found C system header after C++ system header. Should be: pr2_arm_kinematics_utils.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 45,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:45:  Found C system header after C++ system header. Should be: pr2_arm_kinematics_utils.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 46,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:46:  Found C system header after C++ system header. Should be: pr2_arm_kinematics_utils.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 47,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:47:  Found C system header after C++ system header. Should be: pr2_arm_kinematics_utils.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 48,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:48:  Found C system header after C++ system header. Should be: pr2_arm_kinematics_utils.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 49,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:49:  Found C system header after C++ system header. Should be: pr2_arm_kinematics_utils.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 50,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:50:  Found C system header after C++ system header. Should be: pr2_arm_kinematics_utils.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 51,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:51:  Found C system header after C++ system header. Should be: pr2_arm_kinematics_utils.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 53,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:53:  Found C system header after C++ system header. Should be: pr2_arm_kinematics_utils.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 54,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:54:  Found C system header after C++ system header. Should be: pr2_arm_kinematics_utils.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 55,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:55:  Found C system header after C++ system header. Should be: pr2_arm_kinematics_utils.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 58,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:58:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 61,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:61:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 80,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:80:  Is this a non-const reference? If so, make const or use a pointer: double &soln1  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 81,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:81:  Is this a non-const reference? If so, make const or use a pointer: double &soln2  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 84,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:84:  Is this a non-const reference? If so, make const or use a pointer: urdf::Model &robot_model  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 85,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:85:  Is this a non-const reference? If so, make const or use a pointer: std::string &xml_string  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 90,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:90:  Is this a non-const reference? If so, make const or use a pointer: KDL::Chain &kdl_chain  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 95,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:95:  Is this a non-const reference? If so, make const or use a pointer: KDL::Tree &kdl_chain  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 106,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:106:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::RobotState &robot_state  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 109,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:109:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetPositionFK::Request &request  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 110,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:110:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetPositionFK::Response &response  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 113,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:113:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetPositionIK::Request &request  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 114,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:114:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetPositionIK::Response &response  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 121,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:121:  Is this a non-const reference? If so, make const or use a pointer: KDL::Frame &pose_kdl  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 123,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:123:  Is this a non-const reference? If so, make const or use a pointer: tf::TransformListener& tf  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 126,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:126:  Is this a non-const reference? If so, make const or use a pointer: geometry_msgs::PoseStamped &pose_msg_out  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 128,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:128:  Is this a non-const reference? If so, make const or use a pointer: tf::TransformListener& tf  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 134,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:134:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::KinematicSolverInfo &chain_info  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 135,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:135:  Namespace should be terminated with '// namespace pr2_arm_kinematics'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 137,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:137:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_kinematics_utils.h",
    "line": 131,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.h:131:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "pr2_arm_ik.h",
    "line": 37,
    "function": null,
    "comment": "pr2_arm_ik.h:37:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_PR2_ARM_IK_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "pr2_arm_ik.h",
    "line": 37,
    "function": null,
    "comment": "pr2_arm_ik.h:37:  #ifndef header guard has wrong style, please use: PR2_ARM_IK_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "pr2_arm_ik.h",
    "line": 125,
    "function": null,
    "comment": "pr2_arm_ik.h:125:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_PR2_ARM_IK_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_ik.h",
    "line": 41,
    "function": null,
    "comment": "pr2_arm_ik.h:41:  Include 'Eigen/Core' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_arm_ik.h",
    "line": 42,
    "function": null,
    "comment": "pr2_arm_ik.h:42:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_ik.h",
    "line": 45,
    "function": null,
    "comment": "pr2_arm_ik.h:45:  Include 'pr2_arm_kinematics/pr2_arm_kinematics_constants.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.h",
    "line": 49,
    "function": null,
    "comment": "pr2_arm_ik.h:49:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.h",
    "line": 51,
    "function": null,
    "comment": "pr2_arm_ik.h:51:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pr2_arm_ik.h",
    "line": 52,
    "function": null,
    "comment": "pr2_arm_ik.h:52:  public: should be indented +1 space inside class PR2ArmIK  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_arm_ik.h",
    "line": 53,
    "function": null,
    "comment": "pr2_arm_ik.h:53:  Do not leave a blank line after 'public:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Do not use meaningless empty statements.",
    "file": "pr2_arm_ik.h",
    "line": 60,
    "function": null,
    "comment": "pr2_arm_ik.h:60:  You don't need a ; after a }  [readability/braces] [4]",
    "tags": ["code-standards","google-cpp","empty-statement","ambiguous-code"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.h",
    "line": 69,
    "function": null,
    "comment": "pr2_arm_ik.h:69:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.h",
    "line": 76,
    "function": null,
    "comment": "pr2_arm_ik.h:76:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.h",
    "line": 76,
    "function": null,
    "comment": "pr2_arm_ik.h:76:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik.h",
    "line": 76,
    "function": null,
    "comment": "pr2_arm_ik.h:76:  Is this a non-const reference? If so, make const or use a pointer: std::vector<std::vector<double> > &solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.h",
    "line": 83,
    "function": null,
    "comment": "pr2_arm_ik.h:83:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.h",
    "line": 83,
    "function": null,
    "comment": "pr2_arm_ik.h:83:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik.h",
    "line": 83,
    "function": null,
    "comment": "pr2_arm_ik.h:83:  Is this a non-const reference? If so, make const or use a pointer: std::vector<std::vector<double> > &solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.h",
    "line": 86,
    "function": null,
    "comment": "pr2_arm_ik.h:86:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik.h",
    "line": 92,
    "function": null,
    "comment": "pr2_arm_ik.h:92:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::KinematicSolverInfo &info  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pr2_arm_ik.h",
    "line": 101,
    "function": null,
    "comment": "pr2_arm_ik.h:101:  private: should be indented +1 space inside class PR2ArmIK  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_arm_ik.h",
    "line": 102,
    "function": null,
    "comment": "pr2_arm_ik.h:102:  Do not leave a blank line after 'private:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.h",
    "line": 103,
    "function": null,
    "comment": "pr2_arm_ik.h:103:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.h",
    "line": 103,
    "function": null,
    "comment": "pr2_arm_ik.h:103:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_ik.h",
    "line": 103,
    "function": null,
    "comment": "pr2_arm_ik.h:103:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::KinematicSolverInfo &info  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.h",
    "line": 115,
    "function": null,
    "comment": "pr2_arm_ik.h:115:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_arm_ik.h",
    "line": 122,
    "function": null,
    "comment": "pr2_arm_ik.h:122:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "pr2_arm_ik.h",
    "line": 124,
    "function": null,
    "comment": "pr2_arm_ik.h:124:  Namespace should be terminated with '// namespace pr2_arm_kinematics'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_arm_ik.h",
    "line": 125,
    "function": null,
    "comment": "pr2_arm_ik.h:125:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_ik.h",
    "line": 69,
    "function": null,
    "comment": "pr2_arm_ik.h:69:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_ik.h",
    "line": 121,
    "function": null,
    "comment": "pr2_arm_ik.h:121:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 37,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:37:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_PR2_ARM_KINEMATICS_PLUGIN_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 37,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:37:  #ifndef header guard has wrong style, please use: PR2_ARM_KINEMATICS_PLUGIN_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 157,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:157:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_PR2_ARM_KINEMATICS_PLUGIN_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 50,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:50:  Include 'moveit_msgs/GetKinematicSolverInfo.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 61,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:61:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 63,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:63:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 64,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:64:  public: should be indented +1 space inside class PR2ArmKinematicsPlugin  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 65,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:65:  Do not leave a blank line after 'public:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 79,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:79:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 80,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:80:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::MoveItErrorCodes &error_code  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 81,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:81:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 86,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:86:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 87,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:87:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::MoveItErrorCodes &error_code  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 88,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:88:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 94,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:94:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 95,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:95:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::MoveItErrorCodes &error_code  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 96,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:96:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 101,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:101:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 103,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:103:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::MoveItErrorCodes &error_code  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 104,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:104:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 110,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:110:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &solution  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 112,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:112:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::MoveItErrorCodes &error_code  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 113,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:113:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 117,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:117:  Is this a non-const reference? If so, make const or use a pointer: std::vector<geometry_msgs::Pose> &poses  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 139,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:139:  protected: should be indented +1 space inside class PR2ArmKinematicsPlugin  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 140,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:140:  Do not leave a blank line after 'protected:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 146,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:146:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 146,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:146:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 147,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:147:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 153,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:153:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 155,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:155:  Namespace should be terminated with '// namespace pr2_arm_kinematics'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 148,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:148:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_kinematics_plugin.h",
    "line": 137,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.h:137:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 38,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:38:  Include 'pr2_arm_kinematics/pr2_arm_kinematics_constants.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 41,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:41:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 43,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:43:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 43,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:43:  Is this a non-const reference? If so, make const or use a pointer: urdf::Model &robot_model  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 43,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:43:  Is this a non-const reference? If so, make const or use a pointer: std::string &xml_string  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 44,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:44:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 45,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:45:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 46,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:46:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 47,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:47:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 54,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:54:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 55,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:55:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 62,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 70,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:70:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 70,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:70:  Is this a non-const reference? If so, make const or use a pointer: KDL::Chain &kdl_chain  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 71,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:71:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 75,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:75:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 80,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:80:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 81,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:81:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 87,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:87:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 87,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:87:  Is this a non-const reference? If so, make const or use a pointer: KDL::Tree &kdl_tree  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 88,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:88:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 91,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:91:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 100,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:100:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 102,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:102:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 102,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:102:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 103,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:103:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 104,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:104:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 104,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:104:  Missing spaces around <  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 104,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:104:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 105,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:105:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 106,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:106:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 108,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:108:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 113,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:113:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 114,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:114:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 116,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:116:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 116,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:116:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 116,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:116:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 117,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:117:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 125,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:125:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 126,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:126:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 130,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:130:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 131,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:131:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 133,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:133:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 134,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:134:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 139,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:139:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 141,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:141:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 146,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:146:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 146,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:146:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 147,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:147:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 152,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:152:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 153,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:153:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 161,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:161:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 168,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:168:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 169,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:169:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 170,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:170:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 172,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:172:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 173,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:173:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 175,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:175:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 176,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:176:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 178,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:178:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 179,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:179:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 181,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:181:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 182,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:182:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 183,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:183:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 187,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:187:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 188,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:188:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 189,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:189:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 191,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:191:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 192,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:192:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 194,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:194:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 195,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:195:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 197,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:197:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 198,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:198:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 200,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:200:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 201,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:201:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 202,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:202:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 208,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:208:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 208,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:208:  Is this a non-const reference? If so, make const or use a pointer: double &soln1  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 208,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:208:  Is this a non-const reference? If so, make const or use a pointer: double &soln2  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 209,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:209:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 210,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:210:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 213,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:213:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 213,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:213:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 213,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:213:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 214,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:214:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 221,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:221:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 222,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:222:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 238,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:238:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 239,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:239:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 239,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:239:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 240,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:240:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 242,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:242:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 242,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:242:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 243,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:243:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 244,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:244:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 245,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:245:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 250,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:250:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 251,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:251:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 252,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:252:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 252,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:252:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 261,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:261:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 262,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:262:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 264,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:264:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 264,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:264:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 265,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:265:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 266,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:266:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 266,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:266:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 274,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:274:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 275,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:275:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 275,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:275:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 276,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:276:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 277,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:277:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 283,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:283:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::RobotState &robot_state  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 285,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:285:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 286,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:286:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 286,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:286:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 286,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:286:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 287,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:287:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 288,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:288:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 291,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:291:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 291,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:291:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 292,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:292:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 293,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:293:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 299,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:299:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetPositionFK::Request &request  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 300,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:300:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetPositionFK::Response &response  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 302,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:302:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 303,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:303:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 303,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:303:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 304,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:304:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 305,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:305:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 309,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:309:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 309,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:309:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 310,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:310:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 317,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:317:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetPositionIK::Request &request  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 318,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:318:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::GetPositionIK::Response &response  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 320,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:320:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 321,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:321:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 321,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:321:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 322,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:322:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 323,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:323:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 327,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:327:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 327,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:327:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 328,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:328:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 332,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:332:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 333,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:333:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 341,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:341:  Is this a non-const reference? If so, make const or use a pointer: KDL::Frame &pose_kdl  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 343,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:343:  Is this a non-const reference? If so, make const or use a pointer: tf::TransformListener& tf  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 344,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:344:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 346,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:346:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 346,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:346:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 354,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:354:  Is this a non-const reference? If so, make const or use a pointer: geometry_msgs::PoseStamped &pose_msg_out  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 356,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:356:  Is this a non-const reference? If so, make const or use a pointer: tf::TransformListener& tf  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 357,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:357:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 359,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:359:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 373,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:373:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 375,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:375:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 376,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:376:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 377,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:377:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 377,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:377:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 382,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:382:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 386,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:386:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 387,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:387:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 387,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:387:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 390,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:390:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 398,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:398:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 399,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:399:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 399,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:399:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 400,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:400:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 401,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:401:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 402,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:402:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 410,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:410:  Is this a non-const reference? If so, make const or use a pointer: moveit_msgs::KinematicSolverInfo &chain_info  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 411,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:411:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 412,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:412:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 412,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:412:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 413,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:413:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 413,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:413:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 414,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:414:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 422,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:422:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 423,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:423:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 423,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:423:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 424,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:424:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 424,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:424:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 425,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:425:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 426,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:426:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 427,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:427:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 436,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:436:  Namespace should be terminated with '// namespace pr2_arm_kinematics'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 421,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:421:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 259,
    "function": null,
    "comment": "pr2_arm_kinematics_utils.cpp:259:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "main.cpp",
    "line": 40,
    "function": null,
    "comment": "main.cpp:40:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "main.cpp",
    "line": 44,
    "function": null,
    "comment": "main.cpp:44:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "main.cpp",
    "line": 45,
    "function": null,
    "comment": "main.cpp:45:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "main.cpp",
    "line": 48,
    "function": null,
    "comment": "main.cpp:48:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "main.cpp",
    "line": 49,
    "function": null,
    "comment": "main.cpp:49:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 38,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:38:  Include 'geometry_msgs/PoseStamped.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 41,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:41:  Include 'ros/ros.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 45,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:45:  Found C system header after C++ system header. Should be: pr2_arm_kinematics_plugin.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 47,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:47:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 48,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:48:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 49,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:49:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 50,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:50:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 52,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:52:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 53,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:53:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 55,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:55:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 57,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:57:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 60,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:60:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 61,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:61:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 71,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:71:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 72,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:72:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 77,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:77:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 77,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:77:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 77,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:77:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 78,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:78:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 79,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:79:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 84,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:84:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 84,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:84:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 85,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:85:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 91,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:91:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 93,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:93:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 93,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:93:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 94,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:94:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 95,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:95:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 99,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:99:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 100,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:100:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 101,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:101:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 103,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:103:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 106,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:106:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 106,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:106:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 107,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:107:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 108,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:108:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 108,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:108:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 110,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:110:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 110,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:110:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 111,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:111:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 112,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:112:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 112,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:112:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 114,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:114:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 114,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:114:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 115,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:115:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 116,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:116:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 116,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:116:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 118,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:118:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 126,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:126:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 128,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:128:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 129,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:129:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 130,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:130:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 131,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:131:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 132,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:132:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 141,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:141:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 145,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:145:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 145,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:145:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 146,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:146:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 153,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:153:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 154,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:154:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 159,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:159:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 160,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:160:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 162,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:162:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 162,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:162:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 163,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:163:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 169,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:169:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 170,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:170:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 177,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:177:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 178,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:178:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 181,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:181:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 182,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:182:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 183,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:183:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 186,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:186:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 189,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:189:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 190,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:190:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 192,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:192:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 194,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:194:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 195,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:195:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 196,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:196:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 198,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:198:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 201,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:201:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 202,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:202:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 205,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:205:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 206,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:206:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 207,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:207:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 208,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:208:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 210,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:210:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 213,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:213:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 214,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:214:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 216,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:216:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 218,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:218:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 219,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:219:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 220,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:220:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 221,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:221:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 222,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:222:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 223,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:223:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 228,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:228:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 229,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:229:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 230,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:230:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 238,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:238:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 242,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:242:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 242,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:242:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 243,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:243:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 248,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:248:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 249,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:249:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 256,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:256:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 259,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:259:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 260,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:260:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 265,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:265:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 268,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:268:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 272,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:272:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 275,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:275:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 276,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:276:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 278,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:278:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 278,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:278:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 279,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:279:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 284,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:284:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 285,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:285:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 291,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:291:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 292,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:292:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 293,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:293:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 294,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:294:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 295,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:295:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 296,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:296:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 307,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:307:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 307,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:307:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 308,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:308:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 316,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:316:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 316,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:316:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 317,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:317:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 318,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:318:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 319,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:319:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 319,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:319:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 319,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:319:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 320,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:320:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 321,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:321:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 323,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:323:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 324,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:324:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 325,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:325:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 333,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:333:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 334,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:334:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 335,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:335:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 342,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:342:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 343,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:343:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 344,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:344:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 350,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:350:  Namespace should be terminated with '// namespace pr2_arm_kinematics'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 350,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:350:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 341,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:341:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 341,
    "function": null,
    "comment": "pr2_arm_kinematics_plugin.cpp:341:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_arm_ik.cpp",
    "line": 49,
    "function": null,
    "comment": "pr2_arm_ik.cpp:49:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_arm_ik.cpp",
    "line": 50,
    "function": null,
    "comment": "pr2_arm_ik.cpp:50:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 53,
    "function": null,
    "comment": "pr2_arm_ik.cpp:53:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 56,
    "function": null,
    "comment": "pr2_arm_ik.cpp:56:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 57,
    "function": null,
    "comment": "pr2_arm_ik.cpp:57:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 61,
    "function": null,
    "comment": "pr2_arm_ik.cpp:61:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 62,
    "function": null,
    "comment": "pr2_arm_ik.cpp:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 66,
    "function": null,
    "comment": "pr2_arm_ik.cpp:66:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 67,
    "function": null,
    "comment": "pr2_arm_ik.cpp:67:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 69,
    "function": null,
    "comment": "pr2_arm_ik.cpp:69:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 71,
    "function": null,
    "comment": "pr2_arm_ik.cpp:71:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 74,
    "function": null,
    "comment": "pr2_arm_ik.cpp:74:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 75,
    "function": null,
    "comment": "pr2_arm_ik.cpp:75:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 76,
    "function": null,
    "comment": "pr2_arm_ik.cpp:76:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 77,
    "function": null,
    "comment": "pr2_arm_ik.cpp:77:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 78,
    "function": null,
    "comment": "pr2_arm_ik.cpp:78:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 78,
    "function": null,
    "comment": "pr2_arm_ik.cpp:78:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 79,
    "function": null,
    "comment": "pr2_arm_ik.cpp:79:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 80,
    "function": null,
    "comment": "pr2_arm_ik.cpp:80:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 82,
    "function": null,
    "comment": "pr2_arm_ik.cpp:82:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik.cpp",
    "line": 86,
    "function": null,
    "comment": "pr2_arm_ik.cpp:86:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 87,
    "function": null,
    "comment": "pr2_arm_ik.cpp:87:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 89,
    "function": null,
    "comment": "pr2_arm_ik.cpp:89:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik.cpp",
    "line": 93,
    "function": null,
    "comment": "pr2_arm_ik.cpp:93:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 94,
    "function": null,
    "comment": "pr2_arm_ik.cpp:94:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 97,
    "function": null,
    "comment": "pr2_arm_ik.cpp:97:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik.cpp",
    "line": 102,
    "function": null,
    "comment": "pr2_arm_ik.cpp:102:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 103,
    "function": null,
    "comment": "pr2_arm_ik.cpp:103:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 108,
    "function": null,
    "comment": "pr2_arm_ik.cpp:108:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 118,
    "function": null,
    "comment": "pr2_arm_ik.cpp:118:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 119,
    "function": null,
    "comment": "pr2_arm_ik.cpp:119:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 120,
    "function": null,
    "comment": "pr2_arm_ik.cpp:120:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 121,
    "function": null,
    "comment": "pr2_arm_ik.cpp:121:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 122,
    "function": null,
    "comment": "pr2_arm_ik.cpp:122:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 123,
    "function": null,
    "comment": "pr2_arm_ik.cpp:123:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 124,
    "function": null,
    "comment": "pr2_arm_ik.cpp:124:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 125,
    "function": null,
    "comment": "pr2_arm_ik.cpp:125:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 127,
    "function": null,
    "comment": "pr2_arm_ik.cpp:127:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 128,
    "function": null,
    "comment": "pr2_arm_ik.cpp:128:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 129,
    "function": null,
    "comment": "pr2_arm_ik.cpp:129:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 129,
    "function": null,
    "comment": "pr2_arm_ik.cpp:129:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 140,
    "function": null,
    "comment": "pr2_arm_ik.cpp:140:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 143,
    "function": null,
    "comment": "pr2_arm_ik.cpp:143:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 143,
    "function": null,
    "comment": "pr2_arm_ik.cpp:143:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "pr2_arm_ik.cpp",
    "line": 147,
    "function": null,
    "comment": "pr2_arm_ik.cpp:147:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 151,
    "function": null,
    "comment": "pr2_arm_ik.cpp:151:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 152,
    "function": null,
    "comment": "pr2_arm_ik.cpp:152:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_arm_ik.cpp",
    "line": 154,
    "function": null,
    "comment": "pr2_arm_ik.cpp:154:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_arm_ik.cpp",
    "line": 154,
    "function": null,
    "comment": "pr2_arm_ik.cpp:154:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 156,
    "function": null,
    "comment": "pr2_arm_ik.cpp:156:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 157,
    "function": null,
    "comment": "pr2_arm_ik.cpp:157:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 159,
    "function": null,
    "comment": "pr2_arm_ik.cpp:159:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik.cpp",
    "line": 164,
    "function": null,
    "comment": "pr2_arm_ik.cpp:164:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "Statements that are not part of an if body should have an indentation level equal to or less than the if statement.",
    "file": "pr2_arm_ik.cpp",
    "line": 164,
    "function": null,
    "comment": "pr2_arm_ik.cpp:164:  If/else bodies with multiple statements require braces  [readability/braces] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","indentation","if-else","ambiguous-indentation"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 166,
    "function": null,
    "comment": "pr2_arm_ik.cpp:166:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik.cpp",
    "line": 171,
    "function": null,
    "comment": "pr2_arm_ik.cpp:171:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik.cpp",
    "line": 174,
    "function": null,
    "comment": "pr2_arm_ik.cpp:174:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 175,
    "function": null,
    "comment": "pr2_arm_ik.cpp:175:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 181,
    "function": null,
    "comment": "pr2_arm_ik.cpp:181:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik.cpp",
    "line": 185,
    "function": null,
    "comment": "pr2_arm_ik.cpp:185:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 191,
    "function": null,
    "comment": "pr2_arm_ik.cpp:191:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 196,
    "function": null,
    "comment": "pr2_arm_ik.cpp:196:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 197,
    "function": null,
    "comment": "pr2_arm_ik.cpp:197:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_arm_ik.cpp",
    "line": 198,
    "function": null,
    "comment": "pr2_arm_ik.cpp:198:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 200,
    "function": null,
    "comment": "pr2_arm_ik.cpp:200:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_arm_ik.cpp",
    "line": 204,
    "function": null,
    "comment": "pr2_arm_ik.cpp:204:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 205,
    "function": null,
    "comment": "pr2_arm_ik.cpp:205:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 206,
    "function": null,
    "comment": "pr2_arm_ik.cpp:206:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 207,
    "function": null,
    "comment": "pr2_arm_ik.cpp:207:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 210,
    "function": null,
    "comment": "pr2_arm_ik.cpp:210:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 210,
    "function": null,
    "comment": "pr2_arm_ik.cpp:210:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 226,
    "function": null,
    "comment": "pr2_arm_ik.cpp:226:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 232,
    "function": null,
    "comment": "pr2_arm_ik.cpp:232:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 233,
    "function": null,
    "comment": "pr2_arm_ik.cpp:233:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 234,
    "function": null,
    "comment": "pr2_arm_ik.cpp:234:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 242,
    "function": null,
    "comment": "pr2_arm_ik.cpp:242:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 243,
    "function": null,
    "comment": "pr2_arm_ik.cpp:243:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 256,
    "function": null,
    "comment": "pr2_arm_ik.cpp:256:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik.cpp",
    "line": 259,
    "function": null,
    "comment": "pr2_arm_ik.cpp:259:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 259,
    "function": null,
    "comment": "pr2_arm_ik.cpp:259:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 260,
    "function": null,
    "comment": "pr2_arm_ik.cpp:260:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 268,
    "function": null,
    "comment": "pr2_arm_ik.cpp:268:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 271,
    "function": null,
    "comment": "pr2_arm_ik.cpp:271:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 271,
    "function": null,
    "comment": "pr2_arm_ik.cpp:271:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 276,
    "function": null,
    "comment": "pr2_arm_ik.cpp:276:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 278,
    "function": null,
    "comment": "pr2_arm_ik.cpp:278:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 278,
    "function": null,
    "comment": "pr2_arm_ik.cpp:278:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik.cpp",
    "line": 281,
    "function": null,
    "comment": "pr2_arm_ik.cpp:281:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 281,
    "function": null,
    "comment": "pr2_arm_ik.cpp:281:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 282,
    "function": null,
    "comment": "pr2_arm_ik.cpp:282:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 284,
    "function": null,
    "comment": "pr2_arm_ik.cpp:284:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 284,
    "function": null,
    "comment": "pr2_arm_ik.cpp:284:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 296,
    "function": null,
    "comment": "pr2_arm_ik.cpp:296:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 297,
    "function": null,
    "comment": "pr2_arm_ik.cpp:297:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 297,
    "function": null,
    "comment": "pr2_arm_ik.cpp:297:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik.cpp",
    "line": 300,
    "function": null,
    "comment": "pr2_arm_ik.cpp:300:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 300,
    "function": null,
    "comment": "pr2_arm_ik.cpp:300:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 301,
    "function": null,
    "comment": "pr2_arm_ik.cpp:301:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 304,
    "function": null,
    "comment": "pr2_arm_ik.cpp:304:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 304,
    "function": null,
    "comment": "pr2_arm_ik.cpp:304:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 312,
    "function": null,
    "comment": "pr2_arm_ik.cpp:312:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 312,
    "function": null,
    "comment": "pr2_arm_ik.cpp:312:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 315,
    "function": null,
    "comment": "pr2_arm_ik.cpp:315:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 315,
    "function": null,
    "comment": "pr2_arm_ik.cpp:315:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 318,
    "function": null,
    "comment": "pr2_arm_ik.cpp:318:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 318,
    "function": null,
    "comment": "pr2_arm_ik.cpp:318:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 320,
    "function": null,
    "comment": "pr2_arm_ik.cpp:320:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 320,
    "function": null,
    "comment": "pr2_arm_ik.cpp:320:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 322,
    "function": null,
    "comment": "pr2_arm_ik.cpp:322:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 322,
    "function": null,
    "comment": "pr2_arm_ik.cpp:322:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 324,
    "function": null,
    "comment": "pr2_arm_ik.cpp:324:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 324,
    "function": null,
    "comment": "pr2_arm_ik.cpp:324:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 326,
    "function": null,
    "comment": "pr2_arm_ik.cpp:326:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 326,
    "function": null,
    "comment": "pr2_arm_ik.cpp:326:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 328,
    "function": null,
    "comment": "pr2_arm_ik.cpp:328:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 328,
    "function": null,
    "comment": "pr2_arm_ik.cpp:328:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 330,
    "function": null,
    "comment": "pr2_arm_ik.cpp:330:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 330,
    "function": null,
    "comment": "pr2_arm_ik.cpp:330:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 332,
    "function": null,
    "comment": "pr2_arm_ik.cpp:332:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 332,
    "function": null,
    "comment": "pr2_arm_ik.cpp:332:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 334,
    "function": null,
    "comment": "pr2_arm_ik.cpp:334:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 334,
    "function": null,
    "comment": "pr2_arm_ik.cpp:334:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 337,
    "function": null,
    "comment": "pr2_arm_ik.cpp:337:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 337,
    "function": null,
    "comment": "pr2_arm_ik.cpp:337:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 338,
    "function": null,
    "comment": "pr2_arm_ik.cpp:338:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 340,
    "function": null,
    "comment": "pr2_arm_ik.cpp:340:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 341,
    "function": null,
    "comment": "pr2_arm_ik.cpp:341:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 346,
    "function": null,
    "comment": "pr2_arm_ik.cpp:346:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 347,
    "function": null,
    "comment": "pr2_arm_ik.cpp:347:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 349,
    "function": null,
    "comment": "pr2_arm_ik.cpp:349:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 349,
    "function": null,
    "comment": "pr2_arm_ik.cpp:349:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 355,
    "function": null,
    "comment": "pr2_arm_ik.cpp:355:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 355,
    "function": null,
    "comment": "pr2_arm_ik.cpp:355:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 358,
    "function": null,
    "comment": "pr2_arm_ik.cpp:358:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 359,
    "function": null,
    "comment": "pr2_arm_ik.cpp:359:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 361,
    "function": null,
    "comment": "pr2_arm_ik.cpp:361:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik.cpp",
    "line": 366,
    "function": null,
    "comment": "pr2_arm_ik.cpp:366:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 367,
    "function": null,
    "comment": "pr2_arm_ik.cpp:367:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 368,
    "function": null,
    "comment": "pr2_arm_ik.cpp:368:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 369,
    "function": null,
    "comment": "pr2_arm_ik.cpp:369:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik.cpp",
    "line": 382,
    "function": null,
    "comment": "pr2_arm_ik.cpp:382:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 382,
    "function": null,
    "comment": "pr2_arm_ik.cpp:382:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 383,
    "function": null,
    "comment": "pr2_arm_ik.cpp:383:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 386,
    "function": null,
    "comment": "pr2_arm_ik.cpp:386:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 386,
    "function": null,
    "comment": "pr2_arm_ik.cpp:386:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 388,
    "function": null,
    "comment": "pr2_arm_ik.cpp:388:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 388,
    "function": null,
    "comment": "pr2_arm_ik.cpp:388:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 395,
    "function": null,
    "comment": "pr2_arm_ik.cpp:395:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 395,
    "function": null,
    "comment": "pr2_arm_ik.cpp:395:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 395,
    "function": null,
    "comment": "pr2_arm_ik.cpp:395:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 408,
    "function": null,
    "comment": "pr2_arm_ik.cpp:408:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 418,
    "function": null,
    "comment": "pr2_arm_ik.cpp:418:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 419,
    "function": null,
    "comment": "pr2_arm_ik.cpp:419:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 420,
    "function": null,
    "comment": "pr2_arm_ik.cpp:420:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_arm_ik.cpp",
    "line": 430,
    "function": null,
    "comment": "pr2_arm_ik.cpp:430:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_arm_ik.cpp",
    "line": 434,
    "function": null,
    "comment": "pr2_arm_ik.cpp:434:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 435,
    "function": null,
    "comment": "pr2_arm_ik.cpp:435:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 436,
    "function": null,
    "comment": "pr2_arm_ik.cpp:436:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 437,
    "function": null,
    "comment": "pr2_arm_ik.cpp:437:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 439,
    "function": null,
    "comment": "pr2_arm_ik.cpp:439:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 439,
    "function": null,
    "comment": "pr2_arm_ik.cpp:439:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 440,
    "function": null,
    "comment": "pr2_arm_ik.cpp:440:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 443,
    "function": null,
    "comment": "pr2_arm_ik.cpp:443:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 444,
    "function": null,
    "comment": "pr2_arm_ik.cpp:444:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 445,
    "function": null,
    "comment": "pr2_arm_ik.cpp:445:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 458,
    "function": null,
    "comment": "pr2_arm_ik.cpp:458:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 463,
    "function": null,
    "comment": "pr2_arm_ik.cpp:463:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 464,
    "function": null,
    "comment": "pr2_arm_ik.cpp:464:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 465,
    "function": null,
    "comment": "pr2_arm_ik.cpp:465:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 467,
    "function": null,
    "comment": "pr2_arm_ik.cpp:467:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 470,
    "function": null,
    "comment": "pr2_arm_ik.cpp:470:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 470,
    "function": null,
    "comment": "pr2_arm_ik.cpp:470:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 471,
    "function": null,
    "comment": "pr2_arm_ik.cpp:471:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 482,
    "function": null,
    "comment": "pr2_arm_ik.cpp:482:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 483,
    "function": null,
    "comment": "pr2_arm_ik.cpp:483:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 486,
    "function": null,
    "comment": "pr2_arm_ik.cpp:486:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 486,
    "function": null,
    "comment": "pr2_arm_ik.cpp:486:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 487,
    "function": null,
    "comment": "pr2_arm_ik.cpp:487:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 495,
    "function": null,
    "comment": "pr2_arm_ik.cpp:495:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 498,
    "function": null,
    "comment": "pr2_arm_ik.cpp:498:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 501,
    "function": null,
    "comment": "pr2_arm_ik.cpp:501:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 501,
    "function": null,
    "comment": "pr2_arm_ik.cpp:501:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik.cpp",
    "line": 504,
    "function": null,
    "comment": "pr2_arm_ik.cpp:504:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 504,
    "function": null,
    "comment": "pr2_arm_ik.cpp:504:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 505,
    "function": null,
    "comment": "pr2_arm_ik.cpp:505:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 510,
    "function": null,
    "comment": "pr2_arm_ik.cpp:510:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 510,
    "function": null,
    "comment": "pr2_arm_ik.cpp:510:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 511,
    "function": null,
    "comment": "pr2_arm_ik.cpp:511:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 522,
    "function": null,
    "comment": "pr2_arm_ik.cpp:522:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 522,
    "function": null,
    "comment": "pr2_arm_ik.cpp:522:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 523,
    "function": null,
    "comment": "pr2_arm_ik.cpp:523:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik.cpp",
    "line": 530,
    "function": null,
    "comment": "pr2_arm_ik.cpp:530:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 530,
    "function": null,
    "comment": "pr2_arm_ik.cpp:530:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 531,
    "function": null,
    "comment": "pr2_arm_ik.cpp:531:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 536,
    "function": null,
    "comment": "pr2_arm_ik.cpp:536:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 536,
    "function": null,
    "comment": "pr2_arm_ik.cpp:536:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 537,
    "function": null,
    "comment": "pr2_arm_ik.cpp:537:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 542,
    "function": null,
    "comment": "pr2_arm_ik.cpp:542:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 542,
    "function": null,
    "comment": "pr2_arm_ik.cpp:542:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 543,
    "function": null,
    "comment": "pr2_arm_ik.cpp:543:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 545,
    "function": null,
    "comment": "pr2_arm_ik.cpp:545:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 545,
    "function": null,
    "comment": "pr2_arm_ik.cpp:545:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 549,
    "function": null,
    "comment": "pr2_arm_ik.cpp:549:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 549,
    "function": null,
    "comment": "pr2_arm_ik.cpp:549:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 550,
    "function": null,
    "comment": "pr2_arm_ik.cpp:550:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 552,
    "function": null,
    "comment": "pr2_arm_ik.cpp:552:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 552,
    "function": null,
    "comment": "pr2_arm_ik.cpp:552:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 556,
    "function": null,
    "comment": "pr2_arm_ik.cpp:556:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 556,
    "function": null,
    "comment": "pr2_arm_ik.cpp:556:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 557,
    "function": null,
    "comment": "pr2_arm_ik.cpp:557:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 563,
    "function": null,
    "comment": "pr2_arm_ik.cpp:563:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 563,
    "function": null,
    "comment": "pr2_arm_ik.cpp:563:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 565,
    "function": null,
    "comment": "pr2_arm_ik.cpp:565:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 565,
    "function": null,
    "comment": "pr2_arm_ik.cpp:565:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 567,
    "function": null,
    "comment": "pr2_arm_ik.cpp:567:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 567,
    "function": null,
    "comment": "pr2_arm_ik.cpp:567:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 569,
    "function": null,
    "comment": "pr2_arm_ik.cpp:569:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 569,
    "function": null,
    "comment": "pr2_arm_ik.cpp:569:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 571,
    "function": null,
    "comment": "pr2_arm_ik.cpp:571:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 571,
    "function": null,
    "comment": "pr2_arm_ik.cpp:571:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 573,
    "function": null,
    "comment": "pr2_arm_ik.cpp:573:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 573,
    "function": null,
    "comment": "pr2_arm_ik.cpp:573:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 575,
    "function": null,
    "comment": "pr2_arm_ik.cpp:575:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 575,
    "function": null,
    "comment": "pr2_arm_ik.cpp:575:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 577,
    "function": null,
    "comment": "pr2_arm_ik.cpp:577:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 577,
    "function": null,
    "comment": "pr2_arm_ik.cpp:577:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 579,
    "function": null,
    "comment": "pr2_arm_ik.cpp:579:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 579,
    "function": null,
    "comment": "pr2_arm_ik.cpp:579:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 589,
    "function": null,
    "comment": "pr2_arm_ik.cpp:589:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 589,
    "function": null,
    "comment": "pr2_arm_ik.cpp:589:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 590,
    "function": null,
    "comment": "pr2_arm_ik.cpp:590:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 592,
    "function": null,
    "comment": "pr2_arm_ik.cpp:592:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 593,
    "function": null,
    "comment": "pr2_arm_ik.cpp:593:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 595,
    "function": null,
    "comment": "pr2_arm_ik.cpp:595:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 596,
    "function": null,
    "comment": "pr2_arm_ik.cpp:596:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 601,
    "function": null,
    "comment": "pr2_arm_ik.cpp:601:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 601,
    "function": null,
    "comment": "pr2_arm_ik.cpp:601:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 602,
    "function": null,
    "comment": "pr2_arm_ik.cpp:602:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 607,
    "function": null,
    "comment": "pr2_arm_ik.cpp:607:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 607,
    "function": null,
    "comment": "pr2_arm_ik.cpp:607:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 610,
    "function": null,
    "comment": "pr2_arm_ik.cpp:610:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 611,
    "function": null,
    "comment": "pr2_arm_ik.cpp:611:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 613,
    "function": null,
    "comment": "pr2_arm_ik.cpp:613:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik.cpp",
    "line": 618,
    "function": null,
    "comment": "pr2_arm_ik.cpp:618:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 619,
    "function": null,
    "comment": "pr2_arm_ik.cpp:619:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 620,
    "function": null,
    "comment": "pr2_arm_ik.cpp:620:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 621,
    "function": null,
    "comment": "pr2_arm_ik.cpp:621:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik.cpp",
    "line": 625,
    "function": null,
    "comment": "pr2_arm_ik.cpp:625:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 625,
    "function": null,
    "comment": "pr2_arm_ik.cpp:625:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 626,
    "function": null,
    "comment": "pr2_arm_ik.cpp:626:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 630,
    "function": null,
    "comment": "pr2_arm_ik.cpp:630:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 630,
    "function": null,
    "comment": "pr2_arm_ik.cpp:630:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 631,
    "function": null,
    "comment": "pr2_arm_ik.cpp:631:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 634,
    "function": null,
    "comment": "pr2_arm_ik.cpp:634:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 634,
    "function": null,
    "comment": "pr2_arm_ik.cpp:634:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 635,
    "function": null,
    "comment": "pr2_arm_ik.cpp:635:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 644,
    "function": null,
    "comment": "pr2_arm_ik.cpp:644:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 654,
    "function": null,
    "comment": "pr2_arm_ik.cpp:654:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 667,
    "function": null,
    "comment": "pr2_arm_ik.cpp:667:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 678,
    "function": null,
    "comment": "pr2_arm_ik.cpp:678:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik.cpp",
    "line": 679,
    "function": null,
    "comment": "pr2_arm_ik.cpp:679:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik.cpp",
    "line": 679,
    "function": null,
    "comment": "pr2_arm_ik.cpp:679:  Missing spaces around <  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 679,
    "function": null,
    "comment": "pr2_arm_ik.cpp:679:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 680,
    "function": null,
    "comment": "pr2_arm_ik.cpp:680:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 681,
    "function": null,
    "comment": "pr2_arm_ik.cpp:681:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 681,
    "function": null,
    "comment": "pr2_arm_ik.cpp:681:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik.cpp",
    "line": 681,
    "function": null,
    "comment": "pr2_arm_ik.cpp:681:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 682,
    "function": null,
    "comment": "pr2_arm_ik.cpp:682:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 689,
    "function": null,
    "comment": "pr2_arm_ik.cpp:689:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 690,
    "function": null,
    "comment": "pr2_arm_ik.cpp:690:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 692,
    "function": null,
    "comment": "pr2_arm_ik.cpp:692:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik.cpp",
    "line": 693,
    "function": null,
    "comment": "pr2_arm_ik.cpp:693:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik.cpp",
    "line": 697,
    "function": null,
    "comment": "pr2_arm_ik.cpp:697:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik.cpp",
    "line": 699,
    "function": null,
    "comment": "pr2_arm_ik.cpp:699:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik.cpp",
    "line": 700,
    "function": null,
    "comment": "pr2_arm_ik.cpp:700:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik.cpp",
    "line": 701,
    "function": null,
    "comment": "pr2_arm_ik.cpp:701:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_ik.cpp",
    "line": 56,
    "function": null,
    "comment": "pr2_arm_ik.cpp:56:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_ik.cpp",
    "line": 677,
    "function": null,
    "comment": "pr2_arm_ik.cpp:677:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 39,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:39:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 40,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:40:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 47,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:47:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 52,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:52:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 59,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:59:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 66,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:66:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 69,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:69:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 70,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:70:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 74,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:74:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 75,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:75:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 79,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:79:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 85,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:85:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 85,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:85:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 85,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:85:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 86,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:86:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 88,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:88:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 88,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:88:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 88,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:88:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 89,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:89:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 94,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:94:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 95,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:95:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 101,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:101:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 102,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:102:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 103,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:103:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 104,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:104:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 104,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:104:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 104,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:104:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 105,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:105:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 110,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:110:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 117,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:117:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 122,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:122:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 123,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:123:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 126,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:126:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 127,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:127:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 131,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:131:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 136,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:136:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 136,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:136:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 136,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:136:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 137,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:137:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 138,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:138:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 138,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:138:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 139,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:139:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 150,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:150:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 151,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:151:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 152,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:152:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 153,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:153:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 154,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:154:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 158,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:158:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 158,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:158:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 159,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:159:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 163,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:163:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 164,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:164:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 168,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:168:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 169,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:169:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 170,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:170:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 171,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:171:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 175,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:175:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 175,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:175:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 176,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:176:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 180,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:180:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 189,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:189:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 197,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:197:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 197,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:197:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 198,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:198:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 198,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:198:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 199,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:199:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 200,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:200:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 201,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:201:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 202,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:202:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 204,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:204:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 207,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:207:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 210,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:210:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 211,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:211:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 215,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:215:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 216,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:216:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 228,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:228:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 231,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:231:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 239,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:239:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 240,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:240:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 241,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:241:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 251,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:251:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 252,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:252:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 253,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:253:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 263,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:263:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 264,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:264:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 273,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:273:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 274,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:274:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 275,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:275:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 276,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:276:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 278,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:278:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 279,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:279:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 284,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:284:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 284,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:284:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 285,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:285:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 285,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:285:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 287,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:287:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 288,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:288:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 289,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:289:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 290,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:290:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 291,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:291:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 293,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:293:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 294,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:294:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 295,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:295:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 300,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:300:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 308,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:308:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 309,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:309:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 311,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:311:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 312,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:312:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 313,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:313:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 314,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:314:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 315,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:315:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 316,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:316:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 316,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:316:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 320,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:320:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 321,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:321:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 322,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:322:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 323,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:323:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 327,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:327:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 328,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:328:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 333,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:333:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 334,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:334:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 335,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:335:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 340,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:340:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 343,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:343:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 344,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:344:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 345,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:345:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 348,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:348:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 349,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:349:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 357,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:357:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 356,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:356:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 315,
    "function": null,
    "comment": "pr2_arm_ik_solver.cpp:315:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics.cpp",
    "line": 38,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:38:  Include 'geometry_msgs/PoseStamped.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics.cpp",
    "line": 42,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:42:  Found C++ system header after other header. Should be: pr2_arm_kinematics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_arm_kinematics.cpp",
    "line": 43,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:43:  Found C++ system header after other header. Should be: pr2_arm_kinematics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 46,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:46:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 47,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:47:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 48,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:48:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 49,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:49:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 51,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:51:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 58,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:58:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 58,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:58:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 59,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:59:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 63,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:63:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 63,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:63:  Missing space before ( in while(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 63,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:63:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 64,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:64:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 65,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:65:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 69,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:69:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 69,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:69:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 73,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:73:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 73,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:73:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 79,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:79:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 79,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:79:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 80,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:80:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 84,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:84:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 84,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:84:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 86,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:86:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 86,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:86:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 92,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:92:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 94,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:94:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 94,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:94:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 95,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:95:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 95,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:95:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 96,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:96:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 97,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:97:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 101,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:101:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 102,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:102:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 103,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:103:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 105,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:105:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 108,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:108:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 108,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:108:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 109,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:109:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 110,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:110:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 110,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:110:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 112,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:112:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 112,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:112:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 113,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:113:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 114,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:114:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 114,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:114:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 116,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:116:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 116,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:116:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 117,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:117:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 118,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:118:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 118,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:118:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 122,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:122:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 122,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:122:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 123,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:123:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 123,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:123:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 125,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:125:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 125,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:125:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 126,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:126:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 126,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:126:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 127,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:127:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 132,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:132:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 133,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:133:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 139,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:139:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 140,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:140:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 145,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:145:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 146,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:146:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 147,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:147:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 148,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:148:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 149,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:149:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 154,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:154:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 154,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:154:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 159,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:159:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 160,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:160:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 160,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:160:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 161,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:161:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 165,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:165:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 165,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:165:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 174,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:174:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 175,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:175:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 176,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:176:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 177,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:177:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 181,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:181:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 185,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:185:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 185,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:185:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 186,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:186:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 187,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:187:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 187,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:187:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 188,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:188:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 189,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:189:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 190,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:190:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 192,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:192:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 193,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:193:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 194,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:194:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 194,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:194:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 203,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:203:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 204,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:204:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 206,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:206:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 211,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:211:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 212,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:212:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 215,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:215:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 215,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:215:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 216,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:216:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 218,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:218:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 218,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:218:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 223,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:223:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 224,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:224:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 230,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:230:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 231,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:231:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 232,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:232:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 234,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:234:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 242,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:242:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 243,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:243:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 244,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:244:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 245,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:245:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 246,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:246:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 254,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:254:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 255,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:255:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 256,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:256:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 257,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:257:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 258,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:258:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 263,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:263:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 263,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:263:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 272,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:272:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 272,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:272:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 272,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:272:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 273,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:273:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 274,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:274:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 274,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:274:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 275,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:275:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 282,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:282:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 282,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:282:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 283,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:283:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 284,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:284:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 284,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:284:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 285,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:285:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 286,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:286:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 286,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:286:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 286,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:286:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 287,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:287:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 290,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:290:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 291,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:291:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 292,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:292:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 292,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:292:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 292,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:292:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 299,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:299:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 300,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:300:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 301,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:301:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 311,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:311:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 312,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:312:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 313,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:313:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 314,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:314:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 316,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:316:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 317,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:317:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 320,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:320:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 320,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:320:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 320,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:320:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 326,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:326:  Namespace should be terminated with '// namespace pr2_arm_kinematics'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 326,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:326:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 308,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:308:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 198,
    "function": null,
    "comment": "pr2_arm_kinematics.cpp:198:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Do not include the C standard headers. Use the C++ headers instead.",
    "file": "test_ik_with_cost.cpp",
    "line": 37,
    "function": null,
    "comment": "test_ik_with_cost.cpp:37:  Include 'cstdio' instead of 'stdio.h'.  [build/include] [5]",
    "tags": ["hicpp","code-standards","headers","include","preprocessor","deprecation","c"]
  },
  {
    "rule": "Do not include the C standard headers. Use the C++ headers instead.",
    "file": "test_ik_with_cost.cpp",
    "line": 38,
    "function": null,
    "comment": "test_ik_with_cost.cpp:38:  Include 'cstdlib' instead of 'stdlib.h'.  [build/include] [5]",
    "tags": ["hicpp","code-standards","headers","include","preprocessor","deprecation","c"]
  },
  {
    "rule": "Do not include the C standard headers. Use the C++ headers instead.",
    "file": "test_ik_with_cost.cpp",
    "line": 39,
    "function": null,
    "comment": "test_ik_with_cost.cpp:39:  Include 'ctime' instead of 'time.h'.  [build/include] [5]",
    "tags": ["hicpp","code-standards","headers","include","preprocessor","deprecation","c"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "test_ik_with_cost.cpp",
    "line": 40,
    "function": null,
    "comment": "test_ik_with_cost.cpp:40:  Include 'ros/ros.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "test_ik_with_cost.cpp",
    "line": 46,
    "function": null,
    "comment": "test_ik_with_cost.cpp:46:  Include 'kinematics_msgs/FKService.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "test_ik_with_cost.cpp",
    "line": 60,
    "function": null,
    "comment": "test_ik_with_cost.cpp:60:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Avoid using thread-unsafe functions, when thread-safe variants are available.",
    "file": "test_ik_with_cost.cpp",
    "line": 61,
    "function": null,
    "comment": "test_ik_with_cost.cpp:61:  Consider using rand_r(...) instead of rand(...) for improved thread safety.  [runtime/threadsafe_fn] [2]",
    "tags": ["code-standards","google-cpp","multi-threading","thread-safety"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "test_ik_with_cost.cpp",
    "line": 62,
    "function": null,
    "comment": "test_ik_with_cost.cpp:62:  Using C-style cast.  Use static_cast<double>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "test_ik_with_cost.cpp",
    "line": 67,
    "function": null,
    "comment": "test_ik_with_cost.cpp:67:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use 2 spaces for indentation.",
    "file": "test_ik_with_cost.cpp",
    "line": 68,
    "function": null,
    "comment": "test_ik_with_cost.cpp:68:  Weird number of spaces at line-start.  Are you using a 2-space indent?  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","indentation"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "test_ik_with_cost.cpp",
    "line": 68,
    "function": null,
    "comment": "test_ik_with_cost.cpp:68:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Use 2 spaces for indentation.",
    "file": "test_ik_with_cost.cpp",
    "line": 70,
    "function": null,
    "comment": "test_ik_with_cost.cpp:70:  Weird number of spaces at line-start.  Are you using a 2-space indent?  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","indentation"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "test_ik_with_cost.cpp",
    "line": 74,
    "function": null,
    "comment": "test_ik_with_cost.cpp:74:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "test_ik_with_cost.cpp",
    "line": 75,
    "function": null,
    "comment": "test_ik_with_cost.cpp:75:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "test_ik_with_cost.cpp",
    "line": 75,
    "function": null,
    "comment": "test_ik_with_cost.cpp:75:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "test_ik_with_cost.cpp",
    "line": 75,
    "function": null,
    "comment": "test_ik_with_cost.cpp:75:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "test_ik_with_cost.cpp",
    "line": 79,
    "function": null,
    "comment": "test_ik_with_cost.cpp:79:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "test_ik_with_cost.cpp",
    "line": 80,
    "function": null,
    "comment": "test_ik_with_cost.cpp:80:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "test_ik_with_cost.cpp",
    "line": 81,
    "function": null,
    "comment": "test_ik_with_cost.cpp:81:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "test_ik_with_cost.cpp",
    "line": 112,
    "function": null,
    "comment": "test_ik_with_cost.cpp:112:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "test_ik_with_cost.cpp",
    "line": 113,
    "function": null,
    "comment": "test_ik_with_cost.cpp:113:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "test_ik_with_cost.cpp",
    "line": 114,
    "function": null,
    "comment": "test_ik_with_cost.cpp:114:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "test_ik_with_cost.cpp",
    "line": 115,
    "function": null,
    "comment": "test_ik_with_cost.cpp:115:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "test_ik_with_cost.cpp",
    "line": 115,
    "function": null,
    "comment": "test_ik_with_cost.cpp:115:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "test_ik_with_cost.cpp",
    "line": 116,
    "function": null,
    "comment": "test_ik_with_cost.cpp:116:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "test_ik_with_cost.cpp",
    "line": 116,
    "function": null,
    "comment": "test_ik_with_cost.cpp:116:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "test_ik_with_cost.cpp",
    "line": 118,
    "function": null,
    "comment": "test_ik_with_cost.cpp:118:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "test_ik_with_cost.cpp",
    "line": 119,
    "function": null,
    "comment": "test_ik_with_cost.cpp:119:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "test_ik_with_cost.cpp",
    "line": 125,
    "function": null,
    "comment": "test_ik_with_cost.cpp:125:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "test_ik_with_cost.cpp",
    "line": 125,
    "function": null,
    "comment": "test_ik_with_cost.cpp:125:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "test_ik_with_cost.cpp",
    "line": 126,
    "function": null,
    "comment": "test_ik_with_cost.cpp:126:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "test_ik_with_cost.cpp",
    "line": 55,
    "function": null,
    "comment": "test_ik_with_cost.cpp:55:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "main.cpp",
    "line": 39,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Declarations should be at the smallest feasible scope.",
    "file": "pr2_arm_ik.cpp",
    "line": 214,
    "function": null,
    "comment": "The scope of the variable 'cost4' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:void f(int x){    int i = 0;",
    "tags": ["code-standards","jsf-av-cpp","scope"]
  },
  {
    "rule": "Declarations should be at the smallest feasible scope.",
    "file": "pr2_arm_ik.cpp",
    "line": 215,
    "function": null,
    "comment": "The scope of the variable 'sint4' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:void f(int x){    int i = 0;",
    "tags": ["code-standards","jsf-av-cpp","scope"]
  },
  {
    "rule": "Declarations should be at the smallest feasible scope.",
    "file": "pr2_arm_ik.cpp",
    "line": 222,
    "function": null,
    "comment": "The scope of the variable 't4' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:void f(int x){    int i = 0;   ",
    "tags": ["code-standards","jsf-av-cpp","scope"]
  },
  {
    "rule": "Declarations should be at the smallest feasible scope.",
    "file": "pr2_arm_ik.cpp",
    "line": 454,
    "function": null,
    "comment": "The scope of the variable 't4' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:void f(int x){    int i = 0;   ",
    "tags": ["code-standards","jsf-av-cpp","scope"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik.cpp",
    "line": 59,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik.cpp",
    "line": 259,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik.cpp",
    "line": 281,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik.cpp",
    "line": 300,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik.cpp",
    "line": 346,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik.cpp",
    "line": 382,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik.cpp",
    "line": 482,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik.cpp",
    "line": 504,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik.cpp",
    "line": 530,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik.cpp",
    "line": 595,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik.cpp",
    "line": 625,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik.cpp",
    "line": 679,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik.cpp",
    "line": 689,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 231,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 241,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 253,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 46,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 63,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 83,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 85,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 88,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 104,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 114,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 136,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 138,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 147,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 148,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 149,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 185,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 195,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 197,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 198,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 223,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 234,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 245,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 256,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 270,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 284,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 285,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 302,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 316,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 108,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 112,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 116,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 185,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 187,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 200,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 215,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 272,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 274,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics.cpp",
    "line": 282,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 186,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 198,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Maximum number of function parameters: 6",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 210,
    "function": null,
    "comment": "Found function with 7 or more parameters.",
    "tags": ["hicpp","code-standards","functions","parameters"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 106,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 110,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 114,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 145,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 150,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 162,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 242,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 247,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 278,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 307,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 316,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Ensure that no expression is redundant.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 185,
    "function": null,
    "comment": "Variable 'pinv' is reassigned a value before the old one has been used.",
    "tags": ["hicpp","code-standards","redundancy"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 102,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 104,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 116,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 239,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 241,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 242,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 264,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 275,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 396,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 399,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 412,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 420,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 423,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "test_ik_with_cost.cpp",
    "line": 61,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "test_ik_with_cost.cpp",
    "line": 115,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "test_ik_with_cost.cpp",
    "line": 125,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "test_ik_with_cost.cpp",
    "line": 66,
    "function": null,
    "comment": "The function 'NOT_NEAR' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "test_ik_with_cost.cpp",
    "line": 59,
    "function": null,
    "comment": "The function 'gen_rand' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": 87,
    "function": null,
    "comment": "The function 'getKDLTree' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 66,
    "function": null,
    "comment": "The function 'initialize' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "Minimum lines of comments: 20%",
    "file": "__init__.py",
    "line": null,
    "function": null,
    "comment": "Comment ratio is below 20%",
    "tags": ["metrics","nasa-satc","his","uai","ros","comments","comment-ratio"]
  },
  {
    "rule": "Minimum lines of comments: 20%",
    "file": "pr2_arm_kinematics_utils.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is below 20%",
    "tags": ["metrics","nasa-satc","his","uai","ros","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "main.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "main.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  },
  {
    "rule": "Minimum lines of comments: 20%",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is below 20%",
    "tags": ["metrics","nasa-satc","his","uai","ros","comments","comment-ratio"]
  },
  {
    "rule": "Maximum coupling between objects: 5",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": null,
    "function": null,
    "comment": "CBO is greater than 5, PR2ArmKinematicsPlugin, 6",
    "tags": ["metrics","nasa-satc","ros","coupling"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "pr2_arm_kinematics_plugin.cpp",
    "line": 213,
    "function": "searchPositionIK",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Minimum lines of comments: 20%",
    "file": "pr2_arm_ik.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is below 20%",
    "tags": ["metrics","nasa-satc","his","uai","ros","comments","comment-ratio"]
  },
  {
    "rule": "Maximum coupling between objects: 5",
    "file": "pr2_arm_ik.cpp",
    "line": null,
    "function": null,
    "comment": "CBO is greater than 5, PR2ArmIK, 6",
    "tags": ["metrics","nasa-satc","ros","coupling"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "pr2_arm_ik.cpp",
    "line": 196,
    "function": "computeIKShoulderPan",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 15",
    "file": "pr2_arm_ik.cpp",
    "line": 196,
    "function": "computeIKShoulderPan",
    "comment": "CC is greater than 15",
    "tags": ["metrics","ros","cyclomatic-complexity","kth"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "pr2_arm_ik.cpp",
    "line": 418,
    "function": "computeIKShoulderRoll",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 15",
    "file": "pr2_arm_ik.cpp",
    "line": 418,
    "function": "computeIKShoulderRoll",
    "comment": "CC is greater than 15",
    "tags": ["metrics","ros","cyclomatic-complexity","kth"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "pr2_arm_ik.cpp",
    "line": 56,
    "function": "init",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Minimum lines of comments: 20%",
    "file": "pr2_arm_ik_solver.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is below 20%",
    "tags": ["metrics","nasa-satc","his","uai","ros","comments","comment-ratio"]
  },
  {
    "rule": "Maximum coupling between objects: 5",
    "file": "pr2_arm_ik_solver.cpp",
    "line": null,
    "function": null,
    "comment": "CBO is greater than 5, PR2ArmIKSolver, 9",
    "tags": ["metrics","nasa-satc","ros","coupling"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 256,
    "function": "CartToJntSearch",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "pr2_arm_ik_solver.cpp",
    "line": 147,
    "function": "getCount",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Minimum lines of comments: 20%",
    "file": "pr2_arm_kinematics.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is below 20%",
    "tags": ["metrics","nasa-satc","his","uai","ros","comments","comment-ratio"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "pr2_arm_kinematics.cpp",
    "line": 254,
    "function": "getPositionFK",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "test_ik_with_cost.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "test_ik_with_cost.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  }
]