[
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "joint_diagnostics.h",
    "line": 38,
    "function": null,
    "comment": "joint_diagnostics.h:38:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_JOINT_DIAGNOSTICS_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "joint_diagnostics.h",
    "line": 38,
    "function": null,
    "comment": "joint_diagnostics.h:38:  #ifndef header guard has wrong style, please use: JOINT_DIAGNOSTICS_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "joint_diagnostics.h",
    "line": 109,
    "function": null,
    "comment": "joint_diagnostics.h:109:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_JOINT_DIAGNOSTICS_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "joint_diagnostics.h",
    "line": 35,
    "function": null,
    "comment": "joint_diagnostics.h:35:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "joint_diagnostics.h",
    "line": 36,
    "function": null,
    "comment": "joint_diagnostics.h:36:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "joint_diagnostics.h",
    "line": 36,
    "function": null,
    "comment": "joint_diagnostics.h:36:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "joint_diagnostics.h",
    "line": 42,
    "function": null,
    "comment": "joint_diagnostics.h:42:  Found C system header after C++ system header. Should be: joint_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not include the C standard headers. Use the C++ headers instead.",
    "file": "joint_diagnostics.h",
    "line": 42,
    "function": null,
    "comment": "joint_diagnostics.h:42:  Include 'cfloat' instead of 'float.h'.  [build/include] [5]",
    "tags": ["hicpp","code-standards","headers","include","preprocessor","deprecation","c"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "joint_diagnostics.h",
    "line": 44,
    "function": null,
    "comment": "joint_diagnostics.h:44:  Found C system header after C++ system header. Should be: joint_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "joint_diagnostics.h",
    "line": 45,
    "function": null,
    "comment": "joint_diagnostics.h:45:  Found C system header after C++ system header. Should be: joint_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "joint_diagnostics.h",
    "line": 46,
    "function": null,
    "comment": "joint_diagnostics.h:46:  Found C system header after C++ system header. Should be: joint_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "joint_diagnostics.h",
    "line": 47,
    "function": null,
    "comment": "joint_diagnostics.h:47:  Found C system header after C++ system header. Should be: joint_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "joint_diagnostics.h",
    "line": 48,
    "function": null,
    "comment": "joint_diagnostics.h:48:  Found C system header after C++ system header. Should be: joint_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "joint_diagnostics.h",
    "line": 50,
    "function": null,
    "comment": "joint_diagnostics.h:50:  Found C system header after C++ system header. Should be: joint_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "joint_diagnostics.h",
    "line": 51,
    "function": null,
    "comment": "joint_diagnostics.h:51:  Found C system header after C++ system header. Should be: joint_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "joint_diagnostics.h",
    "line": 52,
    "function": null,
    "comment": "joint_diagnostics.h:52:  Found C system header after C++ system header. Should be: joint_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "joint_diagnostics.h",
    "line": 53,
    "function": null,
    "comment": "joint_diagnostics.h:53:  Found C system header after C++ system header. Should be: joint_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "joint_diagnostics.h",
    "line": 54,
    "function": null,
    "comment": "joint_diagnostics.h:54:  Found C system header after C++ system header. Should be: joint_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "joint_diagnostics.h",
    "line": 57,
    "function": null,
    "comment": "joint_diagnostics.h:57:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "joint_diagnostics.h",
    "line": 62,
    "function": null,
    "comment": "joint_diagnostics.h:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.h",
    "line": 76,
    "function": null,
    "comment": "joint_diagnostics.h:76:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "joint_diagnostics.h",
    "line": 77,
    "function": null,
    "comment": "joint_diagnostics.h:77:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "joint_diagnostics.h",
    "line": 78,
    "function": null,
    "comment": "joint_diagnostics.h:78:  private: should be indented +1 space inside class JointStats  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.h",
    "line": 96,
    "function": null,
    "comment": "joint_diagnostics.h:96:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "joint_diagnostics.h",
    "line": 97,
    "function": null,
    "comment": "joint_diagnostics.h:97:  public: should be indented +1 space inside class JointStats  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "joint_diagnostics.h",
    "line": 98,
    "function": null,
    "comment": "joint_diagnostics.h:98:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "joint_diagnostics.h",
    "line": 104,
    "function": null,
    "comment": "joint_diagnostics.h:104:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "joint_diagnostics.h",
    "line": 107,
    "function": null,
    "comment": "joint_diagnostics.h:107:  Namespace should be terminated with '// namespace pr2_mechanism_diagnostics'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "joint_diagnostics.h",
    "line": 109,
    "function": null,
    "comment": "joint_diagnostics.h:109:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "joint_diagnostics.h",
    "line": 98,
    "function": null,
    "comment": "joint_diagnostics.h:98:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "controller_diagnostics.h",
    "line": 38,
    "function": null,
    "comment": "controller_diagnostics.h:38:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_CONTROLLER_DIAGNOSTICS_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "controller_diagnostics.h",
    "line": 38,
    "function": null,
    "comment": "controller_diagnostics.h:38:  #ifndef header guard has wrong style, please use: CONTROLLER_DIAGNOSTICS_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "controller_diagnostics.h",
    "line": 91,
    "function": null,
    "comment": "controller_diagnostics.h:91:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_CONTROLLER_DIAGNOSTICS_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "controller_diagnostics.h",
    "line": 35,
    "function": null,
    "comment": "controller_diagnostics.h:35:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "controller_diagnostics.h",
    "line": 36,
    "function": null,
    "comment": "controller_diagnostics.h:36:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "controller_diagnostics.h",
    "line": 36,
    "function": null,
    "comment": "controller_diagnostics.h:36:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "controller_diagnostics.h",
    "line": 42,
    "function": null,
    "comment": "controller_diagnostics.h:42:  Include 'pr2_mechanism_msgs/MechanismStatistics.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "controller_diagnostics.h",
    "line": 43,
    "function": null,
    "comment": "controller_diagnostics.h:43:  Include 'pr2_mechanism_msgs/ControllerStatistics.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "controller_diagnostics.h",
    "line": 44,
    "function": null,
    "comment": "controller_diagnostics.h:44:  Include 'diagnostic_updater/DiagnosticStatusWrapper.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "controller_diagnostics.h",
    "line": 45,
    "function": null,
    "comment": "controller_diagnostics.h:45:  Include 'boost/shared_ptr.hpp' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "controller_diagnostics.h",
    "line": 48,
    "function": null,
    "comment": "controller_diagnostics.h:48:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "controller_diagnostics.h",
    "line": 59,
    "function": null,
    "comment": "controller_diagnostics.h:59:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "controller_diagnostics.h",
    "line": 60,
    "function": null,
    "comment": "controller_diagnostics.h:60:  private: should be indented +1 space inside class ControllerStats  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "controller_diagnostics.h",
    "line": 62,
    "function": null,
    "comment": "controller_diagnostics.h:62:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "controller_diagnostics.h",
    "line": 74,
    "function": null,
    "comment": "controller_diagnostics.h:74:  public: should be indented +1 space inside class ControllerStats  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "controller_diagnostics.h",
    "line": 75,
    "function": null,
    "comment": "controller_diagnostics.h:75:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "controller_diagnostics.h",
    "line": 76,
    "function": null,
    "comment": "controller_diagnostics.h:76:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "controller_diagnostics.h",
    "line": 82,
    "function": null,
    "comment": "controller_diagnostics.h:82:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "controller_diagnostics.h",
    "line": 84,
    "function": null,
    "comment": "controller_diagnostics.h:84:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "controller_diagnostics.h",
    "line": 85,
    "function": null,
    "comment": "controller_diagnostics.h:85:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "controller_diagnostics.h",
    "line": 89,
    "function": null,
    "comment": "controller_diagnostics.h:89:  Namespace should be terminated with '// namespace pr2_mechanism_diagnostics'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "controller_diagnostics.h",
    "line": 91,
    "function": null,
    "comment": "controller_diagnostics.h:91:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "controller_diagnostics.h",
    "line": 75,
    "function": null,
    "comment": "controller_diagnostics.h:75:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 38,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:38:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_PR2_MECHANISM_DIAGNOSTICS_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 38,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:38:  #ifndef header guard has wrong style, please use: PR2_MECHANISM_DIAGNOSTICS_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 89,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:89:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_PR2_MECHANISM_DIAGNOSTICS_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 35,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:35:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 36,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:36:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 36,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:36:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 42,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:42:  Include 'pr2_mechanism_msgs/MechanismStatistics.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 43,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:43:  Include 'diagnostic_msgs/DiagnosticArray.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 46,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:46:  Found C system header after C++ system header. Should be: pr2_mechanism_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not include the C standard headers. Use the C++ headers instead.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 46,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:46:  Include 'cfloat' instead of 'float.h'.  [build/include] [5]",
    "tags": ["hicpp","code-standards","headers","include","preprocessor","deprecation","c"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 47,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:47:  Found C system header after C++ system header. Should be: pr2_mechanism_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 48,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:48:  Found C system header after C++ system header. Should be: pr2_mechanism_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 50,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:50:  Include 'pr2_mechanism_diagnostics/joint_diagnostics.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 51,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:51:  Include 'pr2_mechanism_diagnostics/controller_diagnostics.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 53,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:53:  Include 'std_msgs/Bool.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 56,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:56:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 63,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:63:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 64,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:64:  private: should be indented +1 space inside class CtrlJntDiagnosticPublisher  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 74,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:74:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 75,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:75:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 77,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:77:  public: should be indented +1 space inside class CtrlJntDiagnosticPublisher  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 78,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:78:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 81,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:81:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 84,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:84:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 87,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:87:  Namespace should be terminated with '// namespace pr2_mechanism_diagnostics'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 89,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:89:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 66,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:66:  Add #include <map> for map<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_mechanism_diagnostics.h",
    "line": 66,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.h:66:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "controller_diagnostics.cpp",
    "line": 39,
    "function": null,
    "comment": "controller_diagnostics.cpp:39:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "controller_diagnostics.cpp",
    "line": 40,
    "function": null,
    "comment": "controller_diagnostics.cpp:40:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "controller_diagnostics.cpp",
    "line": 53,
    "function": null,
    "comment": "controller_diagnostics.cpp:53:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "controller_diagnostics.cpp",
    "line": 55,
    "function": null,
    "comment": "controller_diagnostics.cpp:55:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "controller_diagnostics.cpp",
    "line": 56,
    "function": null,
    "comment": "controller_diagnostics.cpp:56:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "controller_diagnostics.cpp",
    "line": 59,
    "function": null,
    "comment": "controller_diagnostics.cpp:59:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "controller_diagnostics.cpp",
    "line": 67,
    "function": null,
    "comment": "controller_diagnostics.cpp:67:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "controller_diagnostics.cpp",
    "line": 69,
    "function": null,
    "comment": "controller_diagnostics.cpp:69:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "controller_diagnostics.cpp",
    "line": 73,
    "function": null,
    "comment": "controller_diagnostics.cpp:73:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "controller_diagnostics.cpp",
    "line": 74,
    "function": null,
    "comment": "controller_diagnostics.cpp:74:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "controller_diagnostics.cpp",
    "line": 75,
    "function": null,
    "comment": "controller_diagnostics.cpp:75:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "controller_diagnostics.cpp",
    "line": 76,
    "function": null,
    "comment": "controller_diagnostics.cpp:76:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "controller_diagnostics.cpp",
    "line": 78,
    "function": null,
    "comment": "controller_diagnostics.cpp:78:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "controller_diagnostics.cpp",
    "line": 83,
    "function": null,
    "comment": "controller_diagnostics.cpp:83:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "controller_diagnostics.cpp",
    "line": 85,
    "function": null,
    "comment": "controller_diagnostics.cpp:85:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "controller_diagnostics.cpp",
    "line": 87,
    "function": null,
    "comment": "controller_diagnostics.cpp:87:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "controller_diagnostics.cpp",
    "line": 89,
    "function": null,
    "comment": "controller_diagnostics.cpp:89:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "controller_diagnostics.cpp",
    "line": 91,
    "function": null,
    "comment": "controller_diagnostics.cpp:91:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "controller_diagnostics.cpp",
    "line": 92,
    "function": null,
    "comment": "controller_diagnostics.cpp:92:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "controller_diagnostics.cpp",
    "line": 93,
    "function": null,
    "comment": "controller_diagnostics.cpp:93:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "controller_diagnostics.cpp",
    "line": 94,
    "function": null,
    "comment": "controller_diagnostics.cpp:94:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "controller_diagnostics.cpp",
    "line": 95,
    "function": null,
    "comment": "controller_diagnostics.cpp:95:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "controller_diagnostics.cpp",
    "line": 98,
    "function": null,
    "comment": "controller_diagnostics.cpp:98:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "controller_diagnostics.cpp",
    "line": 43,
    "function": null,
    "comment": "controller_diagnostics.cpp:43:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 41,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:41:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 42,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:42:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 49,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:49:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 49,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:49:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 50,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:50:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 52,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:52:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 55,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:55:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 62,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:62:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 63,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:63:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 66,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:66:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 67,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:67:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 69,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:69:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 70,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:70:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 73,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:73:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 76,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:76:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 77,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:77:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 79,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:79:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 80,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:80:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 86,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:86:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 88,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:88:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 93,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:93:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 99,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:99:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 102,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:102:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Binary operators should be preceeded and followed by whitespace.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 106,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:106:  Missing spaces around <  [whitespace/operators] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","binary-operator"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 108,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:108:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 111,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:111:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 123,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:123:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 125,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:125:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 127,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:127:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 129,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:129:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 132,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:132:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 139,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:139:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 140,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:140:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 143,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:143:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 95,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:95:  Add #include <map> for map<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 97,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:97:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 97,
    "function": null,
    "comment": "pr2_mechanism_diagnostics.cpp:97:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "joint_diagnostics.cpp",
    "line": 39,
    "function": null,
    "comment": "joint_diagnostics.cpp:39:  Found C system header after C++ system header. Should be: joint_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "joint_diagnostics.cpp",
    "line": 40,
    "function": null,
    "comment": "joint_diagnostics.cpp:40:  Found C system header after C++ system header. Should be: joint_diagnostics.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "joint_diagnostics.cpp",
    "line": 42,
    "function": null,
    "comment": "joint_diagnostics.cpp:42:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "joint_diagnostics.cpp",
    "line": 43,
    "function": null,
    "comment": "joint_diagnostics.cpp:43:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 58,
    "function": null,
    "comment": "joint_diagnostics.cpp:58:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 71,
    "function": null,
    "comment": "joint_diagnostics.cpp:71:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "joint_diagnostics.cpp",
    "line": 75,
    "function": null,
    "comment": "joint_diagnostics.cpp:75:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 77,
    "function": null,
    "comment": "joint_diagnostics.cpp:77:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "joint_diagnostics.cpp",
    "line": 85,
    "function": null,
    "comment": "joint_diagnostics.cpp:85:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "joint_diagnostics.cpp",
    "line": 86,
    "function": null,
    "comment": "joint_diagnostics.cpp:86:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "joint_diagnostics.cpp",
    "line": 87,
    "function": null,
    "comment": "joint_diagnostics.cpp:87:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 88,
    "function": null,
    "comment": "joint_diagnostics.cpp:88:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 90,
    "function": null,
    "comment": "joint_diagnostics.cpp:90:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 95,
    "function": null,
    "comment": "joint_diagnostics.cpp:95:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 98,
    "function": null,
    "comment": "joint_diagnostics.cpp:98:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 99,
    "function": null,
    "comment": "joint_diagnostics.cpp:99:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "joint_diagnostics.cpp",
    "line": 101,
    "function": null,
    "comment": "joint_diagnostics.cpp:101:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "joint_diagnostics.cpp",
    "line": 102,
    "function": null,
    "comment": "joint_diagnostics.cpp:102:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 104,
    "function": null,
    "comment": "joint_diagnostics.cpp:104:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 109,
    "function": null,
    "comment": "joint_diagnostics.cpp:109:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 111,
    "function": null,
    "comment": "joint_diagnostics.cpp:111:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 113,
    "function": null,
    "comment": "joint_diagnostics.cpp:113:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "joint_diagnostics.cpp",
    "line": 115,
    "function": null,
    "comment": "joint_diagnostics.cpp:115:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "joint_diagnostics.cpp",
    "line": 121,
    "function": null,
    "comment": "joint_diagnostics.cpp:121:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "joint_diagnostics.cpp",
    "line": 122,
    "function": null,
    "comment": "joint_diagnostics.cpp:122:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 128,
    "function": null,
    "comment": "joint_diagnostics.cpp:128:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 130,
    "function": null,
    "comment": "joint_diagnostics.cpp:130:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 132,
    "function": null,
    "comment": "joint_diagnostics.cpp:132:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "joint_diagnostics.cpp",
    "line": 137,
    "function": null,
    "comment": "joint_diagnostics.cpp:137:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "joint_diagnostics.cpp",
    "line": 139,
    "function": null,
    "comment": "joint_diagnostics.cpp:139:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "joint_diagnostics.cpp",
    "line": 140,
    "function": null,
    "comment": "joint_diagnostics.cpp:140:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 143,
    "function": null,
    "comment": "joint_diagnostics.cpp:143:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 146,
    "function": null,
    "comment": "joint_diagnostics.cpp:146:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "joint_diagnostics.cpp",
    "line": 148,
    "function": null,
    "comment": "joint_diagnostics.cpp:148:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 154,
    "function": null,
    "comment": "joint_diagnostics.cpp:154:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 162,
    "function": null,
    "comment": "joint_diagnostics.cpp:162:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "joint_diagnostics.cpp",
    "line": 164,
    "function": null,
    "comment": "joint_diagnostics.cpp:164:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "joint_diagnostics.cpp",
    "line": 58,
    "function": null,
    "comment": "joint_diagnostics.cpp:58:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "joint_diagnostics.cpp",
    "line": 152,
    "function": null,
    "comment": "joint_diagnostics.cpp:152:  Add #include <algorithm> for max  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 96,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 106,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": 122,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "pub_mech_stats.py",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "mech_diag_test.py",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "controller_diagnostics.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "controller_diagnostics.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "pr2_mechanism_diagnostics.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "joint_diagnostics.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "joint_diagnostics.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  }
]