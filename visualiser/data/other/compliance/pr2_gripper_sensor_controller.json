[
  {
    "rule": "All headers must be protected against multiple inclusion by",
    "file": "pr2_gripper_sensor_controller.h",
    "line": null,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:0:  No #ifndef header guard found.  [build/header_guard] [5]",
    "tags": ["ros","code-standards","google-cpp","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 37,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:37:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 38,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:38:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 39,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:39:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 41,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:41:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 45,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:45:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 52,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:52:  Include 'pr2_gripper_sensor_controller/acceleration_observer.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 54,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:54:  Include 'pr2_gripper_sensor_msgs/PR2GripperFindContactData.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 55,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:55:  Include 'pr2_gripper_sensor_msgs/PR2GripperFindContactCommand.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 57,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:57:  Include 'pr2_gripper_sensor_msgs/PR2GripperForceServoCommand.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 59,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:59:  Include 'pr2_gripper_sensor_msgs/PR2GripperSlipServoCommand.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 60,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:60:  Include 'pr2_gripper_sensor_msgs/PR2GripperEventDetectorData.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 61,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:61:  Include 'pr2_gripper_sensor_msgs/PR2GripperEventDetectorCommand.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 63,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:63:  Include 'pr2_gripper_sensor_msgs/PR2GripperSensorRawData.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 65,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:65:  Include 'std_msgs/Empty.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 71,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:71:  Include 'boost/scoped_ptr.hpp' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 78,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:78:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 78,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:78:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 81,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:81:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 82,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:82:  private: should be indented +1 space inside class PR2GripperSensorController  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 84,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:84:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 88,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:88:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 88,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:88:  Is this a non-const reference? If so, make const or use a pointer: ros::NodeHandle &n  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 90,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:90:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 90,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:90:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 90,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:90:  Is this a non-const reference? If so, make const or use a pointer: std_srvs::Empty::Request& req  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 90,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:90:  Is this a non-const reference? If so, make const or use a pointer: std_srvs::Empty::Response& resp  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 91,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:91:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 91,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:91:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 91,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:91:  Is this a non-const reference? If so, make const or use a pointer: std_srvs::Empty::Request& req  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 91,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:91:  Is this a non-const reference? If so, make const or use a pointer: std_srvs::Empty::Response& resp  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 93,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:93:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 93,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:93:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 93,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:93:  Is this a non-const reference? If so, make const or use a pointer: std_srvs::Empty::Request& req  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 93,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:93:  Is this a non-const reference? If so, make const or use a pointer: std_srvs::Empty::Response& resp  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 94,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:94:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 97,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:97:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 98,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:98:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 99,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:99:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 100,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:100:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 101,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:101:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 102,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:102:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 103,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:103:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 106,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:106:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 109,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:109:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 110,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:110:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 114,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:114:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 115,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:115:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 116,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:116:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 117,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:117:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 117,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:117:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 118,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:118:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 118,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:118:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 119,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:119:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 119,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:119:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 120,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:120:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 120,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:120:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 121,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:121:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 121,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:121:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 122,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:122:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 126,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:126:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 127,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:127:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 128,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:128:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 130,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:130:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 131,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:131:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Don't leave spaces before a semicolon at the end of a line.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 144,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:144:  Extra space before last semicolon. If this should be an empty statement, use {} instead.  [whitespace/semicolon] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","semicolon"]
  },
  {
    "rule": "Don't leave spaces before a semicolon at the end of a line.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 149,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:149:  Extra space before last semicolon. If this should be an empty statement, use {} instead.  [whitespace/semicolon] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","semicolon"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 156,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:156:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Don't leave spaces before a semicolon at the end of a line.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 156,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:156:  Extra space before last semicolon. If this should be an empty statement, use {} instead.  [whitespace/semicolon] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","semicolon"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 158,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:158:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Don't leave spaces before a semicolon at the end of a line.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 163,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:163:  Extra space before last semicolon. If this should be an empty statement, use {} instead.  [whitespace/semicolon] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","semicolon"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 165,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:165:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 170,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:170:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Don't leave spaces before a semicolon at the end of a line.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 170,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:170:  Extra space before last semicolon. If this should be an empty statement, use {} instead.  [whitespace/semicolon] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","semicolon"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 172,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:172:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 177,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:177:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Don't leave spaces before a semicolon at the end of a line.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 177,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:177:  Extra space before last semicolon. If this should be an empty statement, use {} instead.  [whitespace/semicolon] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","semicolon"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 179,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:179:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 180,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:180:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 181,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:181:  public: should be indented +1 space inside class PR2GripperSensorController  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 182,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:182:  Is this a non-const reference? If so, make const or use a pointer: ros::NodeHandle &n  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 186,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:186:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 188,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:188:  Namespace should be terminated with '// namespace pr2_gripper_sensor_controller'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.h",
    "line": 188,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.h:188:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "acceleration_observer.h",
    "line": 46,
    "function": null,
    "comment": "acceleration_observer.h:46:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_ACCELERATION_OBSERVER_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "acceleration_observer.h",
    "line": 46,
    "function": null,
    "comment": "acceleration_observer.h:46:  #ifndef header guard has wrong style, please use: ACCELERATION_OBSERVER_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "acceleration_observer.h",
    "line": 71,
    "function": null,
    "comment": "acceleration_observer.h:71:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_ACCELERATION_OBSERVER_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "acceleration_observer.h",
    "line": 37,
    "function": null,
    "comment": "acceleration_observer.h:37:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "acceleration_observer.h",
    "line": 38,
    "function": null,
    "comment": "acceleration_observer.h:38:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "acceleration_observer.h",
    "line": 39,
    "function": null,
    "comment": "acceleration_observer.h:39:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "acceleration_observer.h",
    "line": 39,
    "function": null,
    "comment": "acceleration_observer.h:39:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "acceleration_observer.h",
    "line": 40,
    "function": null,
    "comment": "acceleration_observer.h:40:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "acceleration_observer.h",
    "line": 44,
    "function": null,
    "comment": "acceleration_observer.h:44:  Include 'pr2_gripper_sensor_controller/digitalFilter.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "acceleration_observer.h",
    "line": 50,
    "function": null,
    "comment": "acceleration_observer.h:50:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "acceleration_observer.h",
    "line": 51,
    "function": null,
    "comment": "acceleration_observer.h:51:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "acceleration_observer.h",
    "line": 51,
    "function": null,
    "comment": "acceleration_observer.h:51:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "acceleration_observer.h",
    "line": 52,
    "function": null,
    "comment": "acceleration_observer.h:52:  public: should be indented +1 space inside class accelerationObserver  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "acceleration_observer.h",
    "line": 54,
    "function": null,
    "comment": "acceleration_observer.h:54:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "acceleration_observer.h",
    "line": 54,
    "function": null,
    "comment": "acceleration_observer.h:54:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "acceleration_observer.h",
    "line": 56,
    "function": null,
    "comment": "acceleration_observer.h:56:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "acceleration_observer.h",
    "line": 58,
    "function": null,
    "comment": "acceleration_observer.h:58:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "acceleration_observer.h",
    "line": 58,
    "function": null,
    "comment": "acceleration_observer.h:58:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "acceleration_observer.h",
    "line": 66,
    "function": null,
    "comment": "acceleration_observer.h:66:  private: should be indented +1 space inside class accelerationObserver  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "acceleration_observer.h",
    "line": 68,
    "function": null,
    "comment": "acceleration_observer.h:68:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "acceleration_observer.h",
    "line": 71,
    "function": null,
    "comment": "acceleration_observer.h:71:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "digitalFilter.h",
    "line": null,
    "function": null,
    "comment": "digitalFilter.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "digitalFilter.h",
    "line": 20,
    "function": null,
    "comment": "digitalFilter.h:20:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_DIGITALFILTER_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "digitalFilter.h",
    "line": 20,
    "function": null,
    "comment": "digitalFilter.h:20:  #ifndef header guard has wrong style, please use: DIGITALFILTER_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "digitalFilter.h",
    "line": 45,
    "function": null,
    "comment": "digitalFilter.h:45:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_DIGITALFILTER_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "digitalFilter.h",
    "line": 10,
    "function": null,
    "comment": "digitalFilter.h:10:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "digitalFilter.h",
    "line": 11,
    "function": null,
    "comment": "digitalFilter.h:11:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "digitalFilter.h",
    "line": 12,
    "function": null,
    "comment": "digitalFilter.h:12:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "digitalFilter.h",
    "line": 13,
    "function": null,
    "comment": "digitalFilter.h:13:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.h",
    "line": 15,
    "function": null,
    "comment": "digitalFilter.h:15:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.h",
    "line": 16,
    "function": null,
    "comment": "digitalFilter.h:16:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "digitalFilter.h",
    "line": 24,
    "function": null,
    "comment": "digitalFilter.h:24:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "digitalFilter.h",
    "line": 25,
    "function": null,
    "comment": "digitalFilter.h:25:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "digitalFilter.h",
    "line": 26,
    "function": null,
    "comment": "digitalFilter.h:26:  public: should be indented +1 space inside class digitalFilter  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.h",
    "line": 27,
    "function": null,
    "comment": "digitalFilter.h:27:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.h",
    "line": 28,
    "function": null,
    "comment": "digitalFilter.h:28:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.h",
    "line": 28,
    "function": null,
    "comment": "digitalFilter.h:28:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.h",
    "line": 29,
    "function": null,
    "comment": "digitalFilter.h:29:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "digitalFilter.h",
    "line": 29,
    "function": null,
    "comment": "digitalFilter.h:29:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.h",
    "line": 31,
    "function": null,
    "comment": "digitalFilter.h:31:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "digitalFilter.h",
    "line": 31,
    "function": null,
    "comment": "digitalFilter.h:31:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.h",
    "line": 33,
    "function": null,
    "comment": "digitalFilter.h:33:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "digitalFilter.h",
    "line": 35,
    "function": null,
    "comment": "digitalFilter.h:35:  protected: should be indented +1 space inside class digitalFilter  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.h",
    "line": 36,
    "function": null,
    "comment": "digitalFilter.h:36:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.h",
    "line": 37,
    "function": null,
    "comment": "digitalFilter.h:37:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.h",
    "line": 38,
    "function": null,
    "comment": "digitalFilter.h:38:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.h",
    "line": 38,
    "function": null,
    "comment": "digitalFilter.h:38:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "digitalFilter.h",
    "line": 39,
    "function": null,
    "comment": "digitalFilter.h:39:  private: should be indented +1 space inside class digitalFilter  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.h",
    "line": 40,
    "function": null,
    "comment": "digitalFilter.h:40:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.h",
    "line": 42,
    "function": null,
    "comment": "digitalFilter.h:42:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.h",
    "line": 42,
    "function": null,
    "comment": "digitalFilter.h:42:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "digitalFilter.h",
    "line": 42,
    "function": null,
    "comment": "digitalFilter.h:42:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "gripper_controller.h",
    "line": 50,
    "function": null,
    "comment": "gripper_controller.h:50:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_GRIPPER_CONTROLLER_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "gripper_controller.h",
    "line": 50,
    "function": null,
    "comment": "gripper_controller.h:50:  #ifndef header guard has wrong style, please use: GRIPPER_CONTROLLER_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "gripper_controller.h",
    "line": 427,
    "function": null,
    "comment": "gripper_controller.h:427:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_GRIPPER_CONTROLLER_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "gripper_controller.h",
    "line": 37,
    "function": null,
    "comment": "gripper_controller.h:37:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "gripper_controller.h",
    "line": 38,
    "function": null,
    "comment": "gripper_controller.h:38:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "gripper_controller.h",
    "line": 39,
    "function": null,
    "comment": "gripper_controller.h:39:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "gripper_controller.h",
    "line": 44,
    "function": null,
    "comment": "gripper_controller.h:44:  Include 'pr2_controller_interface/controller.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "gripper_controller.h",
    "line": 46,
    "function": null,
    "comment": "gripper_controller.h:46:  Include 'pr2_gripper_sensor_controller/pressure_observer.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "gripper_controller.h",
    "line": 47,
    "function": null,
    "comment": "gripper_controller.h:47:  Include 'pr2_gripper_sensor_controller/acceleration_observer.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "gripper_controller.h",
    "line": 54,
    "function": null,
    "comment": "gripper_controller.h:54:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 55,
    "function": null,
    "comment": "gripper_controller.h:55:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "gripper_controller.h",
    "line": 55,
    "function": null,
    "comment": "gripper_controller.h:55:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "gripper_controller.h",
    "line": 56,
    "function": null,
    "comment": "gripper_controller.h:56:  public: should be indented +1 space inside class gripperController  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 58,
    "function": null,
    "comment": "gripper_controller.h:58:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 59,
    "function": null,
    "comment": "gripper_controller.h:59:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 61,
    "function": null,
    "comment": "gripper_controller.h:61:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 62,
    "function": null,
    "comment": "gripper_controller.h:62:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 63,
    "function": null,
    "comment": "gripper_controller.h:63:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 64,
    "function": null,
    "comment": "gripper_controller.h:64:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 65,
    "function": null,
    "comment": "gripper_controller.h:65:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 66,
    "function": null,
    "comment": "gripper_controller.h:66:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 67,
    "function": null,
    "comment": "gripper_controller.h:67:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 68,
    "function": null,
    "comment": "gripper_controller.h:68:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "gripper_controller.h",
    "line": 68,
    "function": null,
    "comment": "gripper_controller.h:68:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 76,
    "function": null,
    "comment": "gripper_controller.h:76:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 82,
    "function": null,
    "comment": "gripper_controller.h:82:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "gripper_controller.h",
    "line": 83,
    "function": null,
    "comment": "gripper_controller.h:83:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "gripper_controller.h",
    "line": 84,
    "function": null,
    "comment": "gripper_controller.h:84:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 85,
    "function": null,
    "comment": "gripper_controller.h:85:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 87,
    "function": null,
    "comment": "gripper_controller.h:87:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 90,
    "function": null,
    "comment": "gripper_controller.h:90:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 91,
    "function": null,
    "comment": "gripper_controller.h:91:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 92,
    "function": null,
    "comment": "gripper_controller.h:92:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 93,
    "function": null,
    "comment": "gripper_controller.h:93:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 94,
    "function": null,
    "comment": "gripper_controller.h:94:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 95,
    "function": null,
    "comment": "gripper_controller.h:95:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 95,
    "function": null,
    "comment": "gripper_controller.h:95:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 96,
    "function": null,
    "comment": "gripper_controller.h:96:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 97,
    "function": null,
    "comment": "gripper_controller.h:97:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 98,
    "function": null,
    "comment": "gripper_controller.h:98:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 102,
    "function": null,
    "comment": "gripper_controller.h:102:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 103,
    "function": null,
    "comment": "gripper_controller.h:103:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 105,
    "function": null,
    "comment": "gripper_controller.h:105:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 106,
    "function": null,
    "comment": "gripper_controller.h:106:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 107,
    "function": null,
    "comment": "gripper_controller.h:107:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 108,
    "function": null,
    "comment": "gripper_controller.h:108:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 109,
    "function": null,
    "comment": "gripper_controller.h:109:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 110,
    "function": null,
    "comment": "gripper_controller.h:110:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 111,
    "function": null,
    "comment": "gripper_controller.h:111:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 112,
    "function": null,
    "comment": "gripper_controller.h:112:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 114,
    "function": null,
    "comment": "gripper_controller.h:114:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 115,
    "function": null,
    "comment": "gripper_controller.h:115:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 116,
    "function": null,
    "comment": "gripper_controller.h:116:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "gripper_controller.h",
    "line": 118,
    "function": null,
    "comment": "gripper_controller.h:118:  private: should be indented +1 space inside class gripperController  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 119,
    "function": null,
    "comment": "gripper_controller.h:119:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 120,
    "function": null,
    "comment": "gripper_controller.h:120:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 126,
    "function": null,
    "comment": "gripper_controller.h:126:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "gripper_controller.h",
    "line": 129,
    "function": null,
    "comment": "gripper_controller.h:129:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "gripper_controller.h",
    "line": 130,
    "function": null,
    "comment": "gripper_controller.h:130:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "gripper_controller.h",
    "line": 130,
    "function": null,
    "comment": "gripper_controller.h:130:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 139,
    "function": null,
    "comment": "gripper_controller.h:139:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 139,
    "function": null,
    "comment": "gripper_controller.h:139:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 140,
    "function": null,
    "comment": "gripper_controller.h:140:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 141,
    "function": null,
    "comment": "gripper_controller.h:141:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 155,
    "function": null,
    "comment": "gripper_controller.h:155:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 157,
    "function": null,
    "comment": "gripper_controller.h:157:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 158,
    "function": null,
    "comment": "gripper_controller.h:158:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "gripper_controller.h",
    "line": 163,
    "function": null,
    "comment": "gripper_controller.h:163:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 164,
    "function": null,
    "comment": "gripper_controller.h:164:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 167,
    "function": null,
    "comment": "gripper_controller.h:167:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 169,
    "function": null,
    "comment": "gripper_controller.h:169:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 171,
    "function": null,
    "comment": "gripper_controller.h:171:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 179,
    "function": null,
    "comment": "gripper_controller.h:179:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 180,
    "function": null,
    "comment": "gripper_controller.h:180:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 182,
    "function": null,
    "comment": "gripper_controller.h:182:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 185,
    "function": null,
    "comment": "gripper_controller.h:185:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 186,
    "function": null,
    "comment": "gripper_controller.h:186:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 188,
    "function": null,
    "comment": "gripper_controller.h:188:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 190,
    "function": null,
    "comment": "gripper_controller.h:190:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 192,
    "function": null,
    "comment": "gripper_controller.h:192:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 194,
    "function": null,
    "comment": "gripper_controller.h:194:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 204,
    "function": null,
    "comment": "gripper_controller.h:204:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 206,
    "function": null,
    "comment": "gripper_controller.h:206:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 206,
    "function": null,
    "comment": "gripper_controller.h:206:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "gripper_controller.h",
    "line": 206,
    "function": null,
    "comment": "gripper_controller.h:206:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 208,
    "function": null,
    "comment": "gripper_controller.h:208:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 209,
    "function": null,
    "comment": "gripper_controller.h:209:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "gripper_controller.h",
    "line": 213,
    "function": null,
    "comment": "gripper_controller.h:213:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 217,
    "function": null,
    "comment": "gripper_controller.h:217:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 218,
    "function": null,
    "comment": "gripper_controller.h:218:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "gripper_controller.h",
    "line": 222,
    "function": null,
    "comment": "gripper_controller.h:222:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 226,
    "function": null,
    "comment": "gripper_controller.h:226:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 227,
    "function": null,
    "comment": "gripper_controller.h:227:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 229,
    "function": null,
    "comment": "gripper_controller.h:229:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 229,
    "function": null,
    "comment": "gripper_controller.h:229:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 230,
    "function": null,
    "comment": "gripper_controller.h:230:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 230,
    "function": null,
    "comment": "gripper_controller.h:230:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 232,
    "function": null,
    "comment": "gripper_controller.h:232:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "gripper_controller.h",
    "line": 235,
    "function": null,
    "comment": "gripper_controller.h:235:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 238,
    "function": null,
    "comment": "gripper_controller.h:238:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 248,
    "function": null,
    "comment": "gripper_controller.h:248:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 249,
    "function": null,
    "comment": "gripper_controller.h:249:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 250,
    "function": null,
    "comment": "gripper_controller.h:250:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 257,
    "function": null,
    "comment": "gripper_controller.h:257:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "gripper_controller.h",
    "line": 257,
    "function": null,
    "comment": "gripper_controller.h:257:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "gripper_controller.h",
    "line": 260,
    "function": null,
    "comment": "gripper_controller.h:260:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "gripper_controller.h",
    "line": 260,
    "function": null,
    "comment": "gripper_controller.h:260:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 262,
    "function": null,
    "comment": "gripper_controller.h:262:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "gripper_controller.h",
    "line": 263,
    "function": null,
    "comment": "gripper_controller.h:263:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 268,
    "function": null,
    "comment": "gripper_controller.h:268:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 269,
    "function": null,
    "comment": "gripper_controller.h:269:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 270,
    "function": null,
    "comment": "gripper_controller.h:270:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 272,
    "function": null,
    "comment": "gripper_controller.h:272:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 278,
    "function": null,
    "comment": "gripper_controller.h:278:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 282,
    "function": null,
    "comment": "gripper_controller.h:282:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 290,
    "function": null,
    "comment": "gripper_controller.h:290:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "gripper_controller.h",
    "line": 291,
    "function": null,
    "comment": "gripper_controller.h:291:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 294,
    "function": null,
    "comment": "gripper_controller.h:294:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 301,
    "function": null,
    "comment": "gripper_controller.h:301:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 303,
    "function": null,
    "comment": "gripper_controller.h:303:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "gripper_controller.h",
    "line": 305,
    "function": null,
    "comment": "gripper_controller.h:305:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 305,
    "function": null,
    "comment": "gripper_controller.h:305:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 305,
    "function": null,
    "comment": "gripper_controller.h:305:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 306,
    "function": null,
    "comment": "gripper_controller.h:306:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 308,
    "function": null,
    "comment": "gripper_controller.h:308:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 309,
    "function": null,
    "comment": "gripper_controller.h:309:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 309,
    "function": null,
    "comment": "gripper_controller.h:309:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "gripper_controller.h",
    "line": 309,
    "function": null,
    "comment": "gripper_controller.h:309:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "gripper_controller.h",
    "line": 315,
    "function": null,
    "comment": "gripper_controller.h:315:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 315,
    "function": null,
    "comment": "gripper_controller.h:315:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 316,
    "function": null,
    "comment": "gripper_controller.h:316:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 317,
    "function": null,
    "comment": "gripper_controller.h:317:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "gripper_controller.h",
    "line": 317,
    "function": null,
    "comment": "gripper_controller.h:317:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "gripper_controller.h",
    "line": 322,
    "function": null,
    "comment": "gripper_controller.h:322:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 327,
    "function": null,
    "comment": "gripper_controller.h:327:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 327,
    "function": null,
    "comment": "gripper_controller.h:327:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 334,
    "function": null,
    "comment": "gripper_controller.h:334:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 335,
    "function": null,
    "comment": "gripper_controller.h:335:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 337,
    "function": null,
    "comment": "gripper_controller.h:337:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 339,
    "function": null,
    "comment": "gripper_controller.h:339:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "gripper_controller.h",
    "line": 340,
    "function": null,
    "comment": "gripper_controller.h:340:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 341,
    "function": null,
    "comment": "gripper_controller.h:341:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 344,
    "function": null,
    "comment": "gripper_controller.h:344:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 344,
    "function": null,
    "comment": "gripper_controller.h:344:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 346,
    "function": null,
    "comment": "gripper_controller.h:346:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "gripper_controller.h",
    "line": 346,
    "function": null,
    "comment": "gripper_controller.h:346:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 350,
    "function": null,
    "comment": "gripper_controller.h:350:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 351,
    "function": null,
    "comment": "gripper_controller.h:351:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 364,
    "function": null,
    "comment": "gripper_controller.h:364:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 365,
    "function": null,
    "comment": "gripper_controller.h:365:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 375,
    "function": null,
    "comment": "gripper_controller.h:375:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 380,
    "function": null,
    "comment": "gripper_controller.h:380:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "gripper_controller.h",
    "line": 381,
    "function": null,
    "comment": "gripper_controller.h:381:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "gripper_controller.h",
    "line": 392,
    "function": null,
    "comment": "gripper_controller.h:392:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "gripper_controller.h",
    "line": 408,
    "function": null,
    "comment": "gripper_controller.h:408:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 409,
    "function": null,
    "comment": "gripper_controller.h:409:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 412,
    "function": null,
    "comment": "gripper_controller.h:412:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "gripper_controller.h",
    "line": 413,
    "function": null,
    "comment": "gripper_controller.h:413:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "gripper_controller.h",
    "line": 413,
    "function": null,
    "comment": "gripper_controller.h:413:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "gripper_controller.h",
    "line": 418,
    "function": null,
    "comment": "gripper_controller.h:418:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "gripper_controller.h",
    "line": 427,
    "function": null,
    "comment": "gripper_controller.h:427:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "gripper_controller.h",
    "line": 364,
    "function": null,
    "comment": "gripper_controller.h:364:  Add #include <algorithm> for min  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "pressure_observer.h",
    "line": 45,
    "function": null,
    "comment": "pressure_observer.h:45:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_PRESSURE_OBSERVER_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "pressure_observer.h",
    "line": 45,
    "function": null,
    "comment": "pressure_observer.h:45:  #ifndef header guard has wrong style, please use: PRESSURE_OBSERVER_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "pressure_observer.h",
    "line": 120,
    "function": null,
    "comment": "pressure_observer.h:120:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_PRESSURE_OBSERVER_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pressure_observer.h",
    "line": 37,
    "function": null,
    "comment": "pressure_observer.h:37:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pressure_observer.h",
    "line": 38,
    "function": null,
    "comment": "pressure_observer.h:38:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pressure_observer.h",
    "line": 39,
    "function": null,
    "comment": "pressure_observer.h:39:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pressure_observer.h",
    "line": 42,
    "function": null,
    "comment": "pressure_observer.h:42:  Include 'pr2_gripper_sensor_msgs/PR2GripperPressureData.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pressure_observer.h",
    "line": 43,
    "function": null,
    "comment": "pressure_observer.h:43:  Include 'pr2_gripper_sensor_controller/digitalFilter.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "pressure_observer.h",
    "line": 50,
    "function": null,
    "comment": "pressure_observer.h:50:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.h",
    "line": 51,
    "function": null,
    "comment": "pressure_observer.h:51:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pressure_observer.h",
    "line": 51,
    "function": null,
    "comment": "pressure_observer.h:51:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pressure_observer.h",
    "line": 52,
    "function": null,
    "comment": "pressure_observer.h:52:  public: should be indented +1 space inside class pressureObserver  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 54,
    "function": null,
    "comment": "pressure_observer.h:54:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pressure_observer.h",
    "line": 54,
    "function": null,
    "comment": "pressure_observer.h:54:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 56,
    "function": null,
    "comment": "pressure_observer.h:56:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 57,
    "function": null,
    "comment": "pressure_observer.h:57:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 58,
    "function": null,
    "comment": "pressure_observer.h:58:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 59,
    "function": null,
    "comment": "pressure_observer.h:59:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 60,
    "function": null,
    "comment": "pressure_observer.h:60:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 61,
    "function": null,
    "comment": "pressure_observer.h:61:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 65,
    "function": null,
    "comment": "pressure_observer.h:65:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 66,
    "function": null,
    "comment": "pressure_observer.h:66:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 67,
    "function": null,
    "comment": "pressure_observer.h:67:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 69,
    "function": null,
    "comment": "pressure_observer.h:69:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 71,
    "function": null,
    "comment": "pressure_observer.h:71:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 72,
    "function": null,
    "comment": "pressure_observer.h:72:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pressure_observer.h",
    "line": 72,
    "function": null,
    "comment": "pressure_observer.h:72:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 73,
    "function": null,
    "comment": "pressure_observer.h:73:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 77,
    "function": null,
    "comment": "pressure_observer.h:77:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 78,
    "function": null,
    "comment": "pressure_observer.h:78:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.h",
    "line": 80,
    "function": null,
    "comment": "pressure_observer.h:80:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 81,
    "function": null,
    "comment": "pressure_observer.h:81:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 83,
    "function": null,
    "comment": "pressure_observer.h:83:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 84,
    "function": null,
    "comment": "pressure_observer.h:84:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 85,
    "function": null,
    "comment": "pressure_observer.h:85:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 86,
    "function": null,
    "comment": "pressure_observer.h:86:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "pressure_observer.h",
    "line": 93,
    "function": null,
    "comment": "pressure_observer.h:93:  private: should be indented +1 space inside class pressureObserver  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 94,
    "function": null,
    "comment": "pressure_observer.h:94:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pressure_observer.h",
    "line": 94,
    "function": null,
    "comment": "pressure_observer.h:94:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.h",
    "line": 96,
    "function": null,
    "comment": "pressure_observer.h:96:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 96,
    "function": null,
    "comment": "pressure_observer.h:96:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 97,
    "function": null,
    "comment": "pressure_observer.h:97:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 98,
    "function": null,
    "comment": "pressure_observer.h:98:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 99,
    "function": null,
    "comment": "pressure_observer.h:99:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 100,
    "function": null,
    "comment": "pressure_observer.h:100:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pressure_observer.h",
    "line": 100,
    "function": null,
    "comment": "pressure_observer.h:100:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 101,
    "function": null,
    "comment": "pressure_observer.h:101:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 104,
    "function": null,
    "comment": "pressure_observer.h:104:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pressure_observer.h",
    "line": 104,
    "function": null,
    "comment": "pressure_observer.h:104:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 105,
    "function": null,
    "comment": "pressure_observer.h:105:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pressure_observer.h",
    "line": 105,
    "function": null,
    "comment": "pressure_observer.h:105:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 107,
    "function": null,
    "comment": "pressure_observer.h:107:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 108,
    "function": null,
    "comment": "pressure_observer.h:108:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 109,
    "function": null,
    "comment": "pressure_observer.h:109:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 110,
    "function": null,
    "comment": "pressure_observer.h:110:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 111,
    "function": null,
    "comment": "pressure_observer.h:111:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pressure_observer.h",
    "line": 111,
    "function": null,
    "comment": "pressure_observer.h:111:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 113,
    "function": null,
    "comment": "pressure_observer.h:113:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.h",
    "line": 114,
    "function": null,
    "comment": "pressure_observer.h:114:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pressure_observer.h",
    "line": 115,
    "function": null,
    "comment": "pressure_observer.h:115:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "pressure_observer.h",
    "line": 120,
    "function": null,
    "comment": "pressure_observer.h:120:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 37,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:37:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 38,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:38:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 39,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:39:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 39,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:39:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 40,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:40:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 41,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:41:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 42,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:42:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 44,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:44:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 49,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:49:  Include 'pluginlib/class_list_macros.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 54,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:54:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 69,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:69:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 70,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:70:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 71,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:71:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 72,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:72:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 73,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:73:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 74,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:74:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 75,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:75:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 76,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:76:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 79,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:79:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 81,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:81:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 82,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:82:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 83,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:83:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 86,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:86:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 87,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:87:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 88,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:88:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 89,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:89:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 90,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:90:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 95,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:95:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 97,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:97:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 98,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:98:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 99,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:99:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 99,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:99:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 102,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:102:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 103,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:103:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 104,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:104:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 105,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:105:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 107,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:107:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 109,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:109:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 110,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:110:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 111,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:111:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 112,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:112:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 113,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:113:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 116,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:116:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 117,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:117:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 118,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:118:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 119,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:119:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 122,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:122:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 124,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:124:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 127,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:127:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 131,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:131:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 133,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:133:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 134,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:134:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 139,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:139:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 140,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:140:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 141,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:141:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 158,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:158:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 158,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:158:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 159,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:159:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 160,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:160:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 161,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:161:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 163,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:163:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 164,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:164:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 165,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:165:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 169,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:169:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 170,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:170:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 173,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:173:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 174,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:174:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 178,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:178:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 179,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:179:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 179,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:179:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 182,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:182:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 183,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:183:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 183,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:183:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 186,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:186:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 187,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:187:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 187,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:187:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 189,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:189:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 189,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:189:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 190,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:190:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 190,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:190:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 192,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:192:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 192,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:192:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 193,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:193:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 193,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:193:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 195,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:195:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 195,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:195:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 196,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:196:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 196,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:196:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 198,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:198:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 198,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:198:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 199,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:199:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 199,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:199:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 203,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:203:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 221,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:221:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 222,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:222:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 237,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:237:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 241,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:241:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 242,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:242:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 243,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:243:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 244,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:244:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 246,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:246:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 247,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:247:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 248,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:248:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 249,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:249:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 252,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:252:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 253,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:253:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 255,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:255:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 256,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:256:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 258,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:258:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 259,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:259:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 260,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:260:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 261,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:261:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 262,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:262:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 264,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:264:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 265,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:265:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 268,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:268:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 271,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:271:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 274,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:274:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 275,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:275:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 277,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:277:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 280,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:280:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 285,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:285:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 288,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:288:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 291,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:291:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 305,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:305:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 306,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:306:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 316,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:316:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 317,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:317:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 318,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:318:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 318,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:318:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 321,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:321:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 322,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:322:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 323,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:323:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 324,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:324:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 325,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:325:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 331,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:331:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 331,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:331:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 332,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:332:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 333,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:333:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 333,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:333:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Statements that are not part of an if body should have an indentation level equal to or less than the if statement.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 335,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:335:  If/else bodies with multiple statements require braces  [readability/braces] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","indentation","if-else","ambiguous-indentation"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 335,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:335:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 336,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:336:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 338,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:338:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 340,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:340:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 343,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:343:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 347,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:347:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 347,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:347:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 348,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:348:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 348,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:348:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 350,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:350:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 351,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:351:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 353,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:353:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 354,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:354:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 356,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:356:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 359,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:359:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 359,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:359:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 360,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:360:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 361,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:361:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 361,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:361:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 361,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:361:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 363,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:363:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 364,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:364:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 368,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:368:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 368,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:368:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 370,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:370:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 371,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:371:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 372,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:372:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 374,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:374:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 375,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:375:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 376,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:376:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 378,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:378:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 387,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:387:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 387,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:387:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 391,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:391:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 393,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:393:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 394,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:394:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 398,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:398:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 407,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:407:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 407,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:407:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 409,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:409:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 411,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:411:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 418,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:418:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 419,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:419:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 420,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:420:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 421,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:421:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 424,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:424:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 425,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:425:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 426,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:426:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 428,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:428:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 433,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:433:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 434,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:434:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 436,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:436:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 437,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:437:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 438,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:438:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 439,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:439:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 440,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:440:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 441,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:441:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 442,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:442:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 449,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:449:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 450,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:450:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 452,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:452:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 453,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:453:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 454,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:454:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 455,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:455:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 456,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:456:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 457,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:457:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 458,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:458:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 459,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:459:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 460,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:460:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 461,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:461:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 465,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:465:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 466,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:466:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 468,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:468:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 469,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:469:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 470,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:470:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 472,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:472:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 473,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:473:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 477,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:477:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 477,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:477:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 478,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:478:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 480,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:480:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 481,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:481:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 482,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:482:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 483,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:483:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 484,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:484:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 485,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:485:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 486,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:486:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 492,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:492:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 493,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:493:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 494,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:494:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 495,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:495:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 497,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:497:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 498,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:498:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 499,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:499:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 500,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:500:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 501,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:501:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 502,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:502:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 503,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:503:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 504,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:504:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 512,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:512:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 521,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:521:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 523,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:523:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 536,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:536:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 538,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:538:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 556,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:556:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 556,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:556:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 557,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:557:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 560,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:560:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 563,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:563:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 580,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:580:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 580,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:580:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 581,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:581:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 584,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:584:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 594,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:594:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 601,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:601:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 610,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:610:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 618,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:618:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 618,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:618:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 630,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:630:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 631,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:631:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 633,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:633:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 638,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:638:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 643,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:643:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 646,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:646:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 647,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:647:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 659,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:659:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 660,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:660:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 660,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:660:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 661,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:661:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 662,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:662:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 662,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:662:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 663,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:663:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 669,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:669:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 679,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:679:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 691,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:691:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 692,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:692:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 692,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:692:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 709,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:709:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 710,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:710:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 711,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:711:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 712,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:712:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 712,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:712:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 713,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:713:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 720,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:720:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 724,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:724:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 741,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:741:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 742,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:742:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 743,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:743:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 744,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:744:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 744,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:744:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 745,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:745:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 751,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:751:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 754,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:754:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 755,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:755:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 764,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:764:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 764,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:764:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 125,
    "function": null,
    "comment": "pr2_gripper_sensor_controller.cpp:125:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pressure_observer.cpp",
    "line": 37,
    "function": null,
    "comment": "pressure_observer.cpp:37:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pressure_observer.cpp",
    "line": 38,
    "function": null,
    "comment": "pressure_observer.cpp:38:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pressure_observer.cpp",
    "line": 39,
    "function": null,
    "comment": "pressure_observer.cpp:39:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 43,
    "function": null,
    "comment": "pressure_observer.cpp:43:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 45,
    "function": null,
    "comment": "pressure_observer.cpp:45:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 47,
    "function": null,
    "comment": "pressure_observer.cpp:47:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 48,
    "function": null,
    "comment": "pressure_observer.cpp:48:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 49,
    "function": null,
    "comment": "pressure_observer.cpp:49:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "pressure_observer.cpp",
    "line": 54,
    "function": null,
    "comment": "pressure_observer.cpp:54:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 58,
    "function": null,
    "comment": "pressure_observer.cpp:58:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 62,
    "function": null,
    "comment": "pressure_observer.cpp:62:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pressure_observer.cpp",
    "line": 62,
    "function": null,
    "comment": "pressure_observer.cpp:62:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 67,
    "function": null,
    "comment": "pressure_observer.cpp:67:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 68,
    "function": null,
    "comment": "pressure_observer.cpp:68:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 68,
    "function": null,
    "comment": "pressure_observer.cpp:68:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pressure_observer.cpp",
    "line": 72,
    "function": null,
    "comment": "pressure_observer.cpp:72:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 76,
    "function": null,
    "comment": "pressure_observer.cpp:76:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 79,
    "function": null,
    "comment": "pressure_observer.cpp:79:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 80,
    "function": null,
    "comment": "pressure_observer.cpp:80:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 81,
    "function": null,
    "comment": "pressure_observer.cpp:81:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 84,
    "function": null,
    "comment": "pressure_observer.cpp:84:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 86,
    "function": null,
    "comment": "pressure_observer.cpp:86:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 86,
    "function": null,
    "comment": "pressure_observer.cpp:86:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 87,
    "function": null,
    "comment": "pressure_observer.cpp:87:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 90,
    "function": null,
    "comment": "pressure_observer.cpp:90:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 91,
    "function": null,
    "comment": "pressure_observer.cpp:91:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 92,
    "function": null,
    "comment": "pressure_observer.cpp:92:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 95,
    "function": null,
    "comment": "pressure_observer.cpp:95:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 96,
    "function": null,
    "comment": "pressure_observer.cpp:96:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 99,
    "function": null,
    "comment": "pressure_observer.cpp:99:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 104,
    "function": null,
    "comment": "pressure_observer.cpp:104:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 105,
    "function": null,
    "comment": "pressure_observer.cpp:105:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pressure_observer.cpp",
    "line": 105,
    "function": null,
    "comment": "pressure_observer.cpp:105:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 114,
    "function": null,
    "comment": "pressure_observer.cpp:114:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 115,
    "function": null,
    "comment": "pressure_observer.cpp:115:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 116,
    "function": null,
    "comment": "pressure_observer.cpp:116:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 118,
    "function": null,
    "comment": "pressure_observer.cpp:118:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 120,
    "function": null,
    "comment": "pressure_observer.cpp:120:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 130,
    "function": null,
    "comment": "pressure_observer.cpp:130:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pressure_observer.cpp",
    "line": 131,
    "function": null,
    "comment": "pressure_observer.cpp:131:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 132,
    "function": null,
    "comment": "pressure_observer.cpp:132:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 133,
    "function": null,
    "comment": "pressure_observer.cpp:133:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 136,
    "function": null,
    "comment": "pressure_observer.cpp:136:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 136,
    "function": null,
    "comment": "pressure_observer.cpp:136:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 139,
    "function": null,
    "comment": "pressure_observer.cpp:139:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 141,
    "function": null,
    "comment": "pressure_observer.cpp:141:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 143,
    "function": null,
    "comment": "pressure_observer.cpp:143:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 148,
    "function": null,
    "comment": "pressure_observer.cpp:148:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 149,
    "function": null,
    "comment": "pressure_observer.cpp:149:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "pressure_observer.cpp",
    "line": 149,
    "function": null,
    "comment": "pressure_observer.cpp:149:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 150,
    "function": null,
    "comment": "pressure_observer.cpp:150:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 151,
    "function": null,
    "comment": "pressure_observer.cpp:151:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 151,
    "function": null,
    "comment": "pressure_observer.cpp:151:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 156,
    "function": null,
    "comment": "pressure_observer.cpp:156:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 156,
    "function": null,
    "comment": "pressure_observer.cpp:156:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 164,
    "function": null,
    "comment": "pressure_observer.cpp:164:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 165,
    "function": null,
    "comment": "pressure_observer.cpp:165:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 173,
    "function": null,
    "comment": "pressure_observer.cpp:173:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 174,
    "function": null,
    "comment": "pressure_observer.cpp:174:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 176,
    "function": null,
    "comment": "pressure_observer.cpp:176:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 178,
    "function": null,
    "comment": "pressure_observer.cpp:178:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 189,
    "function": null,
    "comment": "pressure_observer.cpp:189:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pressure_observer.cpp",
    "line": 190,
    "function": null,
    "comment": "pressure_observer.cpp:190:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 191,
    "function": null,
    "comment": "pressure_observer.cpp:191:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 195,
    "function": null,
    "comment": "pressure_observer.cpp:195:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 196,
    "function": null,
    "comment": "pressure_observer.cpp:196:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pressure_observer.cpp",
    "line": 201,
    "function": null,
    "comment": "pressure_observer.cpp:201:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 205,
    "function": null,
    "comment": "pressure_observer.cpp:205:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 207,
    "function": null,
    "comment": "pressure_observer.cpp:207:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 208,
    "function": null,
    "comment": "pressure_observer.cpp:208:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 210,
    "function": null,
    "comment": "pressure_observer.cpp:210:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 210,
    "function": null,
    "comment": "pressure_observer.cpp:210:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 211,
    "function": null,
    "comment": "pressure_observer.cpp:211:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 212,
    "function": null,
    "comment": "pressure_observer.cpp:212:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 212,
    "function": null,
    "comment": "pressure_observer.cpp:212:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "pressure_observer.cpp",
    "line": 212,
    "function": null,
    "comment": "pressure_observer.cpp:212:  Extra space after (  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 213,
    "function": null,
    "comment": "pressure_observer.cpp:213:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 213,
    "function": null,
    "comment": "pressure_observer.cpp:213:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 220,
    "function": null,
    "comment": "pressure_observer.cpp:220:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 222,
    "function": null,
    "comment": "pressure_observer.cpp:222:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 223,
    "function": null,
    "comment": "pressure_observer.cpp:223:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 224,
    "function": null,
    "comment": "pressure_observer.cpp:224:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 225,
    "function": null,
    "comment": "pressure_observer.cpp:225:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 227,
    "function": null,
    "comment": "pressure_observer.cpp:227:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 228,
    "function": null,
    "comment": "pressure_observer.cpp:228:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 229,
    "function": null,
    "comment": "pressure_observer.cpp:229:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 233,
    "function": null,
    "comment": "pressure_observer.cpp:233:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 234,
    "function": null,
    "comment": "pressure_observer.cpp:234:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 236,
    "function": null,
    "comment": "pressure_observer.cpp:236:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pressure_observer.cpp",
    "line": 237,
    "function": null,
    "comment": "pressure_observer.cpp:237:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Use 2 spaces for indentation.",
    "file": "pressure_observer.cpp",
    "line": 241,
    "function": null,
    "comment": "pressure_observer.cpp:241:  Weird number of spaces at line-start.  Are you using a 2-space indent?  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 242,
    "function": null,
    "comment": "pressure_observer.cpp:242:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 242,
    "function": null,
    "comment": "pressure_observer.cpp:242:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 243,
    "function": null,
    "comment": "pressure_observer.cpp:243:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 243,
    "function": null,
    "comment": "pressure_observer.cpp:243:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 244,
    "function": null,
    "comment": "pressure_observer.cpp:244:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 244,
    "function": null,
    "comment": "pressure_observer.cpp:244:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 245,
    "function": null,
    "comment": "pressure_observer.cpp:245:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 245,
    "function": null,
    "comment": "pressure_observer.cpp:245:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 245,
    "function": null,
    "comment": "pressure_observer.cpp:245:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 246,
    "function": null,
    "comment": "pressure_observer.cpp:246:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pressure_observer.cpp",
    "line": 246,
    "function": null,
    "comment": "pressure_observer.cpp:246:  Using C-style cast.  Use static_cast<double>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 247,
    "function": null,
    "comment": "pressure_observer.cpp:247:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "pressure_observer.cpp",
    "line": 247,
    "function": null,
    "comment": "pressure_observer.cpp:247:  Using C-style cast.  Use static_cast<double>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 250,
    "function": null,
    "comment": "pressure_observer.cpp:250:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 250,
    "function": null,
    "comment": "pressure_observer.cpp:250:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 251,
    "function": null,
    "comment": "pressure_observer.cpp:251:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "pressure_observer.cpp",
    "line": 252,
    "function": null,
    "comment": "pressure_observer.cpp:252:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 256,
    "function": null,
    "comment": "pressure_observer.cpp:256:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 258,
    "function": null,
    "comment": "pressure_observer.cpp:258:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 259,
    "function": null,
    "comment": "pressure_observer.cpp:259:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pressure_observer.cpp",
    "line": 260,
    "function": null,
    "comment": "pressure_observer.cpp:260:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 261,
    "function": null,
    "comment": "pressure_observer.cpp:261:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 261,
    "function": null,
    "comment": "pressure_observer.cpp:261:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 262,
    "function": null,
    "comment": "pressure_observer.cpp:262:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "pressure_observer.cpp",
    "line": 267,
    "function": null,
    "comment": "pressure_observer.cpp:267:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "pressure_observer.cpp",
    "line": 268,
    "function": null,
    "comment": "pressure_observer.cpp:268:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "pressure_observer.cpp",
    "line": 269,
    "function": null,
    "comment": "pressure_observer.cpp:269:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 276,
    "function": null,
    "comment": "pressure_observer.cpp:276:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 284,
    "function": null,
    "comment": "pressure_observer.cpp:284:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pressure_observer.cpp",
    "line": 284,
    "function": null,
    "comment": "pressure_observer.cpp:284:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 285,
    "function": null,
    "comment": "pressure_observer.cpp:285:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 286,
    "function": null,
    "comment": "pressure_observer.cpp:286:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 287,
    "function": null,
    "comment": "pressure_observer.cpp:287:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "pressure_observer.cpp",
    "line": 287,
    "function": null,
    "comment": "pressure_observer.cpp:287:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 288,
    "function": null,
    "comment": "pressure_observer.cpp:288:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 289,
    "function": null,
    "comment": "pressure_observer.cpp:289:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 293,
    "function": null,
    "comment": "pressure_observer.cpp:293:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 294,
    "function": null,
    "comment": "pressure_observer.cpp:294:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 306,
    "function": null,
    "comment": "pressure_observer.cpp:306:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 308,
    "function": null,
    "comment": "pressure_observer.cpp:308:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pressure_observer.cpp",
    "line": 308,
    "function": null,
    "comment": "pressure_observer.cpp:308:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 309,
    "function": null,
    "comment": "pressure_observer.cpp:309:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pressure_observer.cpp",
    "line": 309,
    "function": null,
    "comment": "pressure_observer.cpp:309:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "pressure_observer.cpp",
    "line": 310,
    "function": null,
    "comment": "pressure_observer.cpp:310:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 314,
    "function": null,
    "comment": "pressure_observer.cpp:314:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 315,
    "function": null,
    "comment": "pressure_observer.cpp:315:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 316,
    "function": null,
    "comment": "pressure_observer.cpp:316:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pressure_observer.cpp",
    "line": 316,
    "function": null,
    "comment": "pressure_observer.cpp:316:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 317,
    "function": null,
    "comment": "pressure_observer.cpp:317:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pressure_observer.cpp",
    "line": 317,
    "function": null,
    "comment": "pressure_observer.cpp:317:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 319,
    "function": null,
    "comment": "pressure_observer.cpp:319:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 319,
    "function": null,
    "comment": "pressure_observer.cpp:319:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 321,
    "function": null,
    "comment": "pressure_observer.cpp:321:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 321,
    "function": null,
    "comment": "pressure_observer.cpp:321:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 329,
    "function": null,
    "comment": "pressure_observer.cpp:329:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pressure_observer.cpp",
    "line": 329,
    "function": null,
    "comment": "pressure_observer.cpp:329:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 330,
    "function": null,
    "comment": "pressure_observer.cpp:330:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "pressure_observer.cpp",
    "line": 338,
    "function": null,
    "comment": "pressure_observer.cpp:338:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 363,
    "function": null,
    "comment": "pressure_observer.cpp:363:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 363,
    "function": null,
    "comment": "pressure_observer.cpp:363:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 364,
    "function": null,
    "comment": "pressure_observer.cpp:364:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 365,
    "function": null,
    "comment": "pressure_observer.cpp:365:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "pressure_observer.cpp",
    "line": 366,
    "function": null,
    "comment": "pressure_observer.cpp:366:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "pressure_observer.cpp",
    "line": 374,
    "function": null,
    "comment": "pressure_observer.cpp:374:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "pressure_observer.cpp",
    "line": 374,
    "function": null,
    "comment": "pressure_observer.cpp:374:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 375,
    "function": null,
    "comment": "pressure_observer.cpp:375:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pressure_observer.cpp",
    "line": 376,
    "function": null,
    "comment": "pressure_observer.cpp:376:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "pressure_observer.cpp",
    "line": 377,
    "function": null,
    "comment": "pressure_observer.cpp:377:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "pressure_observer.cpp",
    "line": 384,
    "function": null,
    "comment": "pressure_observer.cpp:384:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pressure_observer.cpp",
    "line": 317,
    "function": null,
    "comment": "pressure_observer.cpp:317:  Add #include <algorithm> for min  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "pressure_observer.cpp",
    "line": 243,
    "function": null,
    "comment": "pressure_observer.cpp:243:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "acceleration_observer.cpp",
    "line": 37,
    "function": null,
    "comment": "acceleration_observer.cpp:37:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "acceleration_observer.cpp",
    "line": 38,
    "function": null,
    "comment": "acceleration_observer.cpp:38:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "acceleration_observer.cpp",
    "line": 39,
    "function": null,
    "comment": "acceleration_observer.cpp:39:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "acceleration_observer.cpp",
    "line": 39,
    "function": null,
    "comment": "acceleration_observer.cpp:39:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "acceleration_observer.cpp",
    "line": 40,
    "function": null,
    "comment": "acceleration_observer.cpp:40:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "acceleration_observer.cpp",
    "line": 47,
    "function": null,
    "comment": "acceleration_observer.cpp:47:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "acceleration_observer.cpp",
    "line": 48,
    "function": null,
    "comment": "acceleration_observer.cpp:48:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "acceleration_observer.cpp",
    "line": 48,
    "function": null,
    "comment": "acceleration_observer.cpp:48:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "acceleration_observer.cpp",
    "line": 49,
    "function": null,
    "comment": "acceleration_observer.cpp:49:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "acceleration_observer.cpp",
    "line": 56,
    "function": null,
    "comment": "acceleration_observer.cpp:56:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "acceleration_observer.cpp",
    "line": 58,
    "function": null,
    "comment": "acceleration_observer.cpp:58:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "acceleration_observer.cpp",
    "line": 61,
    "function": null,
    "comment": "acceleration_observer.cpp:61:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "acceleration_observer.cpp",
    "line": 61,
    "function": null,
    "comment": "acceleration_observer.cpp:61:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "acceleration_observer.cpp",
    "line": 62,
    "function": null,
    "comment": "acceleration_observer.cpp:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "acceleration_observer.cpp",
    "line": 71,
    "function": null,
    "comment": "acceleration_observer.cpp:71:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "acceleration_observer.cpp",
    "line": 72,
    "function": null,
    "comment": "acceleration_observer.cpp:72:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "acceleration_observer.cpp",
    "line": 76,
    "function": null,
    "comment": "acceleration_observer.cpp:76:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "acceleration_observer.cpp",
    "line": 77,
    "function": null,
    "comment": "acceleration_observer.cpp:77:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "acceleration_observer.cpp",
    "line": 91,
    "function": null,
    "comment": "acceleration_observer.cpp:91:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "acceleration_observer.cpp",
    "line": 94,
    "function": null,
    "comment": "acceleration_observer.cpp:94:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "acceleration_observer.cpp",
    "line": 97,
    "function": null,
    "comment": "acceleration_observer.cpp:97:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "acceleration_observer.cpp",
    "line": 101,
    "function": null,
    "comment": "acceleration_observer.cpp:101:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "acceleration_observer.cpp",
    "line": 102,
    "function": null,
    "comment": "acceleration_observer.cpp:102:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "acceleration_observer.cpp",
    "line": 102,
    "function": null,
    "comment": "acceleration_observer.cpp:102:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "acceleration_observer.cpp",
    "line": 103,
    "function": null,
    "comment": "acceleration_observer.cpp:103:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "acceleration_observer.cpp",
    "line": 109,
    "function": null,
    "comment": "acceleration_observer.cpp:109:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "acceleration_observer.cpp",
    "line": 109,
    "function": null,
    "comment": "acceleration_observer.cpp:109:  Missing space before ( in for(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "acceleration_observer.cpp",
    "line": 110,
    "function": null,
    "comment": "acceleration_observer.cpp:110:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "acceleration_observer.cpp",
    "line": 111,
    "function": null,
    "comment": "acceleration_observer.cpp:111:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "acceleration_observer.cpp",
    "line": 111,
    "function": null,
    "comment": "acceleration_observer.cpp:111:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "acceleration_observer.cpp",
    "line": 117,
    "function": null,
    "comment": "acceleration_observer.cpp:117:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "acceleration_observer.cpp",
    "line": 60,
    "function": null,
    "comment": "acceleration_observer.cpp:60:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "digitalFilter.cpp",
    "line": null,
    "function": null,
    "comment": "digitalFilter.cpp:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "digitalFilter.cpp",
    "line": 10,
    "function": null,
    "comment": "digitalFilter.cpp:10:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "digitalFilter.cpp",
    "line": 11,
    "function": null,
    "comment": "digitalFilter.cpp:11:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "digitalFilter.cpp",
    "line": 12,
    "function": null,
    "comment": "digitalFilter.cpp:12:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "digitalFilter.cpp",
    "line": 13,
    "function": null,
    "comment": "digitalFilter.cpp:13:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.cpp",
    "line": 15,
    "function": null,
    "comment": "digitalFilter.cpp:15:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.cpp",
    "line": 16,
    "function": null,
    "comment": "digitalFilter.cpp:16:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "digitalFilter.cpp",
    "line": 23,
    "function": null,
    "comment": "digitalFilter.cpp:23:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 24,
    "function": null,
    "comment": "digitalFilter.cpp:24:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 26,
    "function": null,
    "comment": "digitalFilter.cpp:26:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.cpp",
    "line": 26,
    "function": null,
    "comment": "digitalFilter.cpp:26:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 27,
    "function": null,
    "comment": "digitalFilter.cpp:27:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "You shouldn't have spaces before your brackets, except maybe after 'delete []' or 'return []() {};'",
    "file": "digitalFilter.cpp",
    "line": 27,
    "function": null,
    "comment": "digitalFilter.cpp:27:  Extra space before [  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","brackets"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 28,
    "function": null,
    "comment": "digitalFilter.cpp:28:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "You shouldn't have spaces before your brackets, except maybe after 'delete []' or 'return []() {};'",
    "file": "digitalFilter.cpp",
    "line": 28,
    "function": null,
    "comment": "digitalFilter.cpp:28:  Extra space before [  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","brackets"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 30,
    "function": null,
    "comment": "digitalFilter.cpp:30:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "You shouldn't have spaces before your brackets, except maybe after 'delete []' or 'return []() {};'",
    "file": "digitalFilter.cpp",
    "line": 30,
    "function": null,
    "comment": "digitalFilter.cpp:30:  Extra space before [  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","brackets"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 31,
    "function": null,
    "comment": "digitalFilter.cpp:31:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "You shouldn't have spaces before your brackets, except maybe after 'delete []' or 'return []() {};'",
    "file": "digitalFilter.cpp",
    "line": 31,
    "function": null,
    "comment": "digitalFilter.cpp:31:  Extra space before [  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","brackets"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 33,
    "function": null,
    "comment": "digitalFilter.cpp:33:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 34,
    "function": null,
    "comment": "digitalFilter.cpp:34:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 35,
    "function": null,
    "comment": "digitalFilter.cpp:35:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "digitalFilter.cpp",
    "line": 35,
    "function": null,
    "comment": "digitalFilter.cpp:35:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "digitalFilter.cpp",
    "line": 35,
    "function": null,
    "comment": "digitalFilter.cpp:35:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 36,
    "function": null,
    "comment": "digitalFilter.cpp:36:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 37,
    "function": null,
    "comment": "digitalFilter.cpp:37:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 38,
    "function": null,
    "comment": "digitalFilter.cpp:38:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 39,
    "function": null,
    "comment": "digitalFilter.cpp:39:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 40,
    "function": null,
    "comment": "digitalFilter.cpp:40:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 41,
    "function": null,
    "comment": "digitalFilter.cpp:41:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.cpp",
    "line": 41,
    "function": null,
    "comment": "digitalFilter.cpp:41:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "digitalFilter.cpp",
    "line": 43,
    "function": null,
    "comment": "digitalFilter.cpp:43:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "digitalFilter.cpp",
    "line": 44,
    "function": null,
    "comment": "digitalFilter.cpp:44:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.cpp",
    "line": 45,
    "function": null,
    "comment": "digitalFilter.cpp:45:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "digitalFilter.cpp",
    "line": 45,
    "function": null,
    "comment": "digitalFilter.cpp:45:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 46,
    "function": null,
    "comment": "digitalFilter.cpp:46:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 48,
    "function": null,
    "comment": "digitalFilter.cpp:48:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.cpp",
    "line": 48,
    "function": null,
    "comment": "digitalFilter.cpp:48:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 49,
    "function": null,
    "comment": "digitalFilter.cpp:49:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "You shouldn't have spaces before your brackets, except maybe after 'delete []' or 'return []() {};'",
    "file": "digitalFilter.cpp",
    "line": 49,
    "function": null,
    "comment": "digitalFilter.cpp:49:  Extra space before [  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","brackets"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 50,
    "function": null,
    "comment": "digitalFilter.cpp:50:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "You shouldn't have spaces before your brackets, except maybe after 'delete []' or 'return []() {};'",
    "file": "digitalFilter.cpp",
    "line": 50,
    "function": null,
    "comment": "digitalFilter.cpp:50:  Extra space before [  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","brackets"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 52,
    "function": null,
    "comment": "digitalFilter.cpp:52:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "You shouldn't have spaces before your brackets, except maybe after 'delete []' or 'return []() {};'",
    "file": "digitalFilter.cpp",
    "line": 52,
    "function": null,
    "comment": "digitalFilter.cpp:52:  Extra space before [  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","brackets"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 53,
    "function": null,
    "comment": "digitalFilter.cpp:53:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "You shouldn't have spaces before your brackets, except maybe after 'delete []' or 'return []() {};'",
    "file": "digitalFilter.cpp",
    "line": 53,
    "function": null,
    "comment": "digitalFilter.cpp:53:  Extra space before [  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","brackets"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 55,
    "function": null,
    "comment": "digitalFilter.cpp:55:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 56,
    "function": null,
    "comment": "digitalFilter.cpp:56:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.cpp",
    "line": 56,
    "function": null,
    "comment": "digitalFilter.cpp:56:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 57,
    "function": null,
    "comment": "digitalFilter.cpp:57:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 58,
    "function": null,
    "comment": "digitalFilter.cpp:58:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "digitalFilter.cpp",
    "line": 58,
    "function": null,
    "comment": "digitalFilter.cpp:58:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "digitalFilter.cpp",
    "line": 58,
    "function": null,
    "comment": "digitalFilter.cpp:58:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 59,
    "function": null,
    "comment": "digitalFilter.cpp:59:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 60,
    "function": null,
    "comment": "digitalFilter.cpp:60:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 61,
    "function": null,
    "comment": "digitalFilter.cpp:61:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 62,
    "function": null,
    "comment": "digitalFilter.cpp:62:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 63,
    "function": null,
    "comment": "digitalFilter.cpp:63:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 64,
    "function": null,
    "comment": "digitalFilter.cpp:64:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.cpp",
    "line": 64,
    "function": null,
    "comment": "digitalFilter.cpp:64:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "digitalFilter.cpp",
    "line": 64,
    "function": null,
    "comment": "digitalFilter.cpp:64:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "digitalFilter.cpp",
    "line": 68,
    "function": null,
    "comment": "digitalFilter.cpp:68:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 69,
    "function": null,
    "comment": "digitalFilter.cpp:69:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "digitalFilter.cpp",
    "line": 69,
    "function": null,
    "comment": "digitalFilter.cpp:69:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 70,
    "function": null,
    "comment": "digitalFilter.cpp:70:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 71,
    "function": null,
    "comment": "digitalFilter.cpp:71:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 72,
    "function": null,
    "comment": "digitalFilter.cpp:72:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 73,
    "function": null,
    "comment": "digitalFilter.cpp:73:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 74,
    "function": null,
    "comment": "digitalFilter.cpp:74:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.cpp",
    "line": 74,
    "function": null,
    "comment": "digitalFilter.cpp:74:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 76,
    "function": null,
    "comment": "digitalFilter.cpp:76:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 77,
    "function": null,
    "comment": "digitalFilter.cpp:77:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 78,
    "function": null,
    "comment": "digitalFilter.cpp:78:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.cpp",
    "line": 78,
    "function": null,
    "comment": "digitalFilter.cpp:78:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "digitalFilter.cpp",
    "line": 79,
    "function": null,
    "comment": "digitalFilter.cpp:79:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "digitalFilter.cpp",
    "line": 80,
    "function": null,
    "comment": "digitalFilter.cpp:80:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "digitalFilter.cpp",
    "line": 81,
    "function": null,
    "comment": "digitalFilter.cpp:81:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "digitalFilter.cpp",
    "line": 88,
    "function": null,
    "comment": "digitalFilter.cpp:88:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "digitalFilter.cpp",
    "line": 89,
    "function": null,
    "comment": "digitalFilter.cpp:89:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 95,
    "function": null,
    "comment": "digitalFilter.cpp:95:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 96,
    "function": null,
    "comment": "digitalFilter.cpp:96:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 98,
    "function": null,
    "comment": "digitalFilter.cpp:98:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "digitalFilter.cpp",
    "line": 102,
    "function": null,
    "comment": "digitalFilter.cpp:102:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 103,
    "function": null,
    "comment": "digitalFilter.cpp:103:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 104,
    "function": null,
    "comment": "digitalFilter.cpp:104:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 105,
    "function": null,
    "comment": "digitalFilter.cpp:105:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Indent each block by 2 spaces. Never insert literal tab characters.",
    "file": "digitalFilter.cpp",
    "line": 106,
    "function": null,
    "comment": "digitalFilter.cpp:106:  Tab found; better to use spaces  [whitespace/tab] [1]",
    "tags": ["ros","code-standards","formatting","whitespace","google-cpp","ros-cpp","indentation"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "acceleration_observer.cpp",
    "line": 102,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "acceleration_observer.cpp",
    "line": 109,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "digitalFilter.cpp",
    "line": 22,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "digitalFilter.cpp",
    "line": 34,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "digitalFilter.cpp",
    "line": 43,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "digitalFilter.cpp",
    "line": 57,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "digitalFilter.cpp",
    "line": 70,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "digitalFilter.cpp",
    "line": 82,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "digitalFilter.cpp",
    "line": 90,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pressure_observer.cpp",
    "line": 86,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pressure_observer.cpp",
    "line": 113,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pressure_observer.cpp",
    "line": 115,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pressure_observer.cpp",
    "line": 129,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pressure_observer.cpp",
    "line": 195,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pressure_observer.cpp",
    "line": 210,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pressure_observer.cpp",
    "line": 222,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pressure_observer.cpp",
    "line": 244,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pressure_observer.cpp",
    "line": 261,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pressure_observer.cpp",
    "line": 293,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pressure_observer.cpp",
    "line": 363,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "pressure_observer.cpp",
    "line": 374,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "acceleration_observer.cpp",
    "line": 46,
    "function": null,
    "comment": "The function 'checkPlaceContact' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "pressure_observer.cpp",
    "line": 113,
    "function": null,
    "comment": "The function 'checkSideImpact' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "pressure_observer.cpp",
    "line": 129,
    "function": null,
    "comment": "The function 'graspContact' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 221,
    "function": null,
    "comment": "The function 'init' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "acceleration_observer.cpp",
    "line": 57,
    "function": null,
    "comment": "The function 'spin' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 535,
    "function": null,
    "comment": "The function 'stopping' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 304,
    "function": null,
    "comment": "The function 'update' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  },
  {
    "rule": "Maximum coupling between objects: 5",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": null,
    "function": null,
    "comment": "CBO is greater than 5, PR2GripperSensorController, 9",
    "tags": ["metrics","nasa-satc","ros","coupling"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 69,
    "function": "initializeHandles",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 15",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 69,
    "function": "initializeHandles",
    "comment": "CC is greater than 15",
    "tags": ["metrics","ros","cyclomatic-complexity","kth"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 158,
    "function": "reloadParams",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 304,
    "function": "update",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 15",
    "file": "pr2_gripper_sensor_controller.cpp",
    "line": 304,
    "function": "update",
    "comment": "CC is greater than 15",
    "tags": ["metrics","ros","cyclomatic-complexity","kth"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "pressure_observer.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "pressure_observer.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "pressure_observer.cpp",
    "line": 129,
    "function": "graspContact",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "acceleration_observer.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "acceleration_observer.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "digitalFilter.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  }
]