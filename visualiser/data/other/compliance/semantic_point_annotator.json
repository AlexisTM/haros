[
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "sac_model.h",
    "line": 33,
    "function": null,
    "comment": "sac_model.h:33:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_SAC_MODEL_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "sac_model.h",
    "line": 33,
    "function": null,
    "comment": "sac_model.h:33:  #ifndef header guard has wrong style, please use: SAC_MODEL_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "sac_model.h",
    "line": 206,
    "function": null,
    "comment": "sac_model.h:206:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_SAC_MODEL_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "sac_model.h",
    "line": 37,
    "function": null,
    "comment": "sac_model.h:37:  Include 'pcl/point_types.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model.h",
    "line": 42,
    "function": null,
    "comment": "sac_model.h:42:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not indent within a namespace.",
    "file": "sac_model.h",
    "line": 45,
    "function": null,
    "comment": "sac_model.h:45:  Do not indent within a namespace  [runtime/indentation_namespace] [4]",
    "tags": ["code-standards","formatting","google-cpp","indentation","namespace"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model.h",
    "line": 46,
    "function": null,
    "comment": "sac_model.h:46:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "sac_model.h",
    "line": 47,
    "function": null,
    "comment": "sac_model.h:47:  public: should be indented +1 space inside class SACModel  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 48,
    "function": null,
    "comment": "sac_model.h:48:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 50,
    "function": null,
    "comment": "sac_model.h:50:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 51,
    "function": null,
    "comment": "sac_model.h:51:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "sac_model.h",
    "line": 51,
    "function": null,
    "comment": "sac_model.h:51:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 53,
    "function": null,
    "comment": "sac_model.h:53:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 55,
    "function": null,
    "comment": "sac_model.h:55:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 57,
    "function": null,
    "comment": "sac_model.h:57:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 62,
    "function": null,
    "comment": "sac_model.h:62:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model.h",
    "line": 62,
    "function": null,
    "comment": "sac_model.h:62:  Is this a non-const reference? If so, make const or use a pointer: int &iterations  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model.h",
    "line": 62,
    "function": null,
    "comment": "sac_model.h:62:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &samples  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 64,
    "function": null,
    "comment": "sac_model.h:64:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 68,
    "function": null,
    "comment": "sac_model.h:68:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 68,
    "function": null,
    "comment": "sac_model.h:68:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 70,
    "function": null,
    "comment": "sac_model.h:70:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 75,
    "function": null,
    "comment": "sac_model.h:75:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 75,
    "function": null,
    "comment": "sac_model.h:75:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 77,
    "function": null,
    "comment": "sac_model.h:77:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 83,
    "function": null,
    "comment": "sac_model.h:83:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 83,
    "function": null,
    "comment": "sac_model.h:83:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model.h",
    "line": 83,
    "function": null,
    "comment": "sac_model.h:83:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &refit_coefficients  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 85,
    "function": null,
    "comment": "sac_model.h:85:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 90,
    "function": null,
    "comment": "sac_model.h:90:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 90,
    "function": null,
    "comment": "sac_model.h:90:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model.h",
    "line": 90,
    "function": null,
    "comment": "sac_model.h:90:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &distances  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 92,
    "function": null,
    "comment": "sac_model.h:92:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 100,
    "function": null,
    "comment": "sac_model.h:100:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 100,
    "function": null,
    "comment": "sac_model.h:100:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model.h",
    "line": 100,
    "function": null,
    "comment": "sac_model.h:100:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &inliers  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 102,
    "function": null,
    "comment": "sac_model.h:102:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 108,
    "function": null,
    "comment": "sac_model.h:108:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 108,
    "function": null,
    "comment": "sac_model.h:108:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model.h",
    "line": 108,
    "function": null,
    "comment": "sac_model.h:108:  Is this a non-const reference? If so, make const or use a pointer: PointCloud &projected_points  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 110,
    "function": null,
    "comment": "sac_model.h:110:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 115,
    "function": null,
    "comment": "sac_model.h:115:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 115,
    "function": null,
    "comment": "sac_model.h:115:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 117,
    "function": null,
    "comment": "sac_model.h:117:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 122,
    "function": null,
    "comment": "sac_model.h:122:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 122,
    "function": null,
    "comment": "sac_model.h:122:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 125,
    "function": null,
    "comment": "sac_model.h:125:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 129,
    "function": null,
    "comment": "sac_model.h:129:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model.h",
    "line": 130,
    "function": null,
    "comment": "sac_model.h:130:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 132,
    "function": null,
    "comment": "sac_model.h:132:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 133,
    "function": null,
    "comment": "sac_model.h:133:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 137,
    "function": null,
    "comment": "sac_model.h:137:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 142,
    "function": null,
    "comment": "sac_model.h:142:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model.h",
    "line": 143,
    "function": null,
    "comment": "sac_model.h:143:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 147,
    "function": null,
    "comment": "sac_model.h:147:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 150,
    "function": null,
    "comment": "sac_model.h:150:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 150,
    "function": null,
    "comment": "sac_model.h:150:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 152,
    "function": null,
    "comment": "sac_model.h:152:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 153,
    "function": null,
    "comment": "sac_model.h:153:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 154,
    "function": null,
    "comment": "sac_model.h:154:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 156,
    "function": null,
    "comment": "sac_model.h:156:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 158,
    "function": null,
    "comment": "sac_model.h:158:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 160,
    "function": null,
    "comment": "sac_model.h:160:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 163,
    "function": null,
    "comment": "sac_model.h:163:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 163,
    "function": null,
    "comment": "sac_model.h:163:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 165,
    "function": null,
    "comment": "sac_model.h:165:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 169,
    "function": null,
    "comment": "sac_model.h:169:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 172,
    "function": null,
    "comment": "sac_model.h:172:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.h",
    "line": 172,
    "function": null,
    "comment": "sac_model.h:172:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 174,
    "function": null,
    "comment": "sac_model.h:174:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 178,
    "function": null,
    "comment": "sac_model.h:178:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 179,
    "function": null,
    "comment": "sac_model.h:179:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 180,
    "function": null,
    "comment": "sac_model.h:180:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "sac_model.h",
    "line": 188,
    "function": null,
    "comment": "sac_model.h:188:  protected: should be indented +1 space inside class SACModel  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "sac_model.h",
    "line": 189,
    "function": null,
    "comment": "sac_model.h:189:  Do not leave a blank line after 'protected:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 190,
    "function": null,
    "comment": "sac_model.h:190:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 196,
    "function": null,
    "comment": "sac_model.h:196:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 199,
    "function": null,
    "comment": "sac_model.h:199:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.h",
    "line": 201,
    "function": null,
    "comment": "sac_model.h:201:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "sac_model.h",
    "line": 204,
    "function": null,
    "comment": "sac_model.h:204:  Namespace should be terminated with '// namespace sample_consensus'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "sac_model.h",
    "line": 202,
    "function": null,
    "comment": "sac_model.h:202:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "model_types.h",
    "line": 33,
    "function": null,
    "comment": "model_types.h:33:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_MODEL_TYPES_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "model_types.h",
    "line": 33,
    "function": null,
    "comment": "model_types.h:33:  #ifndef header guard has wrong style, please use: MODEL_TYPES_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "model_types.h",
    "line": 49,
    "function": null,
    "comment": "model_types.h:49:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_MODEL_TYPES_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "ransac.h",
    "line": 33,
    "function": null,
    "comment": "ransac.h:33:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_RANSAC_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "ransac.h",
    "line": 33,
    "function": null,
    "comment": "ransac.h:33:  #ifndef header guard has wrong style, please use: RANSAC_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "ransac.h",
    "line": 54,
    "function": null,
    "comment": "ransac.h:54:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_RANSAC_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ransac.h",
    "line": 40,
    "function": null,
    "comment": "ransac.h:40:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not indent within a namespace.",
    "file": "ransac.h",
    "line": 41,
    "function": null,
    "comment": "ransac.h:41:  Do not indent within a namespace  [runtime/indentation_namespace] [4]",
    "tags": ["code-standards","formatting","google-cpp","indentation","namespace"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ransac.h",
    "line": 42,
    "function": null,
    "comment": "ransac.h:42:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "ransac.h",
    "line": 43,
    "function": null,
    "comment": "ransac.h:43:  public: should be indented +1 space inside class RANSAC  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "ransac.h",
    "line": 44,
    "function": null,
    "comment": "ransac.h:44:  Do not leave a blank line after 'public:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.h",
    "line": 45,
    "function": null,
    "comment": "ransac.h:45:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "ransac.h",
    "line": 45,
    "function": null,
    "comment": "ransac.h:45:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.h",
    "line": 46,
    "function": null,
    "comment": "ransac.h:46:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.h",
    "line": 48,
    "function": null,
    "comment": "ransac.h:48:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.h",
    "line": 50,
    "function": null,
    "comment": "ransac.h:50:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "ransac.h",
    "line": 52,
    "function": null,
    "comment": "ransac.h:52:  Namespace should be terminated with '// namespace sample_consensus'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "sac_model_line.h",
    "line": 33,
    "function": null,
    "comment": "sac_model_line.h:33:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_SAC_MODEL_LINE_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "sac_model_line.h",
    "line": 33,
    "function": null,
    "comment": "sac_model_line.h:33:  #ifndef header guard has wrong style, please use: SAC_MODEL_LINE_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "sac_model_line.h",
    "line": 154,
    "function": null,
    "comment": "sac_model_line.h:154:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_SAC_MODEL_LINE_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "sac_model_line.h",
    "line": 37,
    "function": null,
    "comment": "sac_model_line.h:37:  Include 'model_types.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 39,
    "function": null,
    "comment": "sac_model_line.h:39:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.h",
    "line": 43,
    "function": null,
    "comment": "sac_model_line.h:43:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not indent within a namespace.",
    "file": "sac_model_line.h",
    "line": 46,
    "function": null,
    "comment": "sac_model_line.h:46:  Do not indent within a namespace  [runtime/indentation_namespace] [4]",
    "tags": ["code-standards","formatting","google-cpp","indentation","namespace"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.h",
    "line": 47,
    "function": null,
    "comment": "sac_model_line.h:47:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "sac_model_line.h",
    "line": 48,
    "function": null,
    "comment": "sac_model_line.h:48:  public: should be indented +1 space inside class SACModelLine  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 49,
    "function": null,
    "comment": "sac_model_line.h:49:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 51,
    "function": null,
    "comment": "sac_model_line.h:51:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 53,
    "function": null,
    "comment": "sac_model_line.h:53:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 55,
    "function": null,
    "comment": "sac_model_line.h:55:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 57,
    "function": null,
    "comment": "sac_model_line.h:57:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.h",
    "line": 57,
    "function": null,
    "comment": "sac_model_line.h:57:  Is this a non-const reference? If so, make const or use a pointer: int &iterations  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.h",
    "line": 57,
    "function": null,
    "comment": "sac_model_line.h:57:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &samples  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 59,
    "function": null,
    "comment": "sac_model_line.h:59:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 64,
    "function": null,
    "comment": "sac_model_line.h:64:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 66,
    "function": null,
    "comment": "sac_model_line.h:66:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 68,
    "function": null,
    "comment": "sac_model_line.h:68:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 68,
    "function": null,
    "comment": "sac_model_line.h:68:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.h",
    "line": 68,
    "function": null,
    "comment": "sac_model_line.h:68:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &refit_coefficients  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 69,
    "function": null,
    "comment": "sac_model_line.h:69:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 69,
    "function": null,
    "comment": "sac_model_line.h:69:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.h",
    "line": 69,
    "function": null,
    "comment": "sac_model_line.h:69:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &distances  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 70,
    "function": null,
    "comment": "sac_model_line.h:70:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 70,
    "function": null,
    "comment": "sac_model_line.h:70:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.h",
    "line": 70,
    "function": null,
    "comment": "sac_model_line.h:70:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &inliers  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 72,
    "function": null,
    "comment": "sac_model_line.h:72:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 72,
    "function": null,
    "comment": "sac_model_line.h:72:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.h",
    "line": 72,
    "function": null,
    "comment": "sac_model_line.h:72:  Is this a non-const reference? If so, make const or use a pointer: PointCloud &projected_points  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 74,
    "function": null,
    "comment": "sac_model_line.h:74:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 74,
    "function": null,
    "comment": "sac_model_line.h:74:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 75,
    "function": null,
    "comment": "sac_model_line.h:75:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 75,
    "function": null,
    "comment": "sac_model_line.h:75:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 77,
    "function": null,
    "comment": "sac_model_line.h:77:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 81,
    "function": null,
    "comment": "sac_model_line.h:81:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 87,
    "function": null,
    "comment": "sac_model_line.h:87:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.h",
    "line": 88,
    "function": null,
    "comment": "sac_model_line.h:88:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 96,
    "function": null,
    "comment": "sac_model_line.h:96:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 103,
    "function": null,
    "comment": "sac_model_line.h:103:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 103,
    "function": null,
    "comment": "sac_model_line.h:103:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.h",
    "line": 103,
    "function": null,
    "comment": "sac_model_line.h:103:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointXYZ &centroid  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.h",
    "line": 104,
    "function": null,
    "comment": "sac_model_line.h:104:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.h",
    "line": 108,
    "function": null,
    "comment": "sac_model_line.h:108:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 109,
    "function": null,
    "comment": "sac_model_line.h:109:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 110,
    "function": null,
    "comment": "sac_model_line.h:110:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 111,
    "function": null,
    "comment": "sac_model_line.h:111:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 114,
    "function": null,
    "comment": "sac_model_line.h:114:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 115,
    "function": null,
    "comment": "sac_model_line.h:115:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 116,
    "function": null,
    "comment": "sac_model_line.h:116:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "sac_model_line.h",
    "line": 118,
    "function": null,
    "comment": "sac_model_line.h:118:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 119,
    "function": null,
    "comment": "sac_model_line.h:119:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 129,
    "function": null,
    "comment": "sac_model_line.h:129:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 129,
    "function": null,
    "comment": "sac_model_line.h:129:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.h",
    "line": 129,
    "function": null,
    "comment": "sac_model_line.h:129:  Is this a non-const reference? If so, make const or use a pointer: Eigen::Matrix3d &covariance_matrix  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.h",
    "line": 129,
    "function": null,
    "comment": "sac_model_line.h:129:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointXYZ &centroid  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.h",
    "line": 130,
    "function": null,
    "comment": "sac_model_line.h:130:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 131,
    "function": null,
    "comment": "sac_model_line.h:131:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 134,
    "function": null,
    "comment": "sac_model_line.h:134:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.h",
    "line": 137,
    "function": null,
    "comment": "sac_model_line.h:137:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 138,
    "function": null,
    "comment": "sac_model_line.h:138:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 138,
    "function": null,
    "comment": "sac_model_line.h:138:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 139,
    "function": null,
    "comment": "sac_model_line.h:139:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 139,
    "function": null,
    "comment": "sac_model_line.h:139:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 140,
    "function": null,
    "comment": "sac_model_line.h:140:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 140,
    "function": null,
    "comment": "sac_model_line.h:140:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 142,
    "function": null,
    "comment": "sac_model_line.h:142:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 142,
    "function": null,
    "comment": "sac_model_line.h:142:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 143,
    "function": null,
    "comment": "sac_model_line.h:143:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 143,
    "function": null,
    "comment": "sac_model_line.h:143:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 144,
    "function": null,
    "comment": "sac_model_line.h:144:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 144,
    "function": null,
    "comment": "sac_model_line.h:144:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 146,
    "function": null,
    "comment": "sac_model_line.h:146:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 146,
    "function": null,
    "comment": "sac_model_line.h:146:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 147,
    "function": null,
    "comment": "sac_model_line.h:147:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 147,
    "function": null,
    "comment": "sac_model_line.h:147:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.h",
    "line": 148,
    "function": null,
    "comment": "sac_model_line.h:148:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.h",
    "line": 148,
    "function": null,
    "comment": "sac_model_line.h:148:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Closing brace should be aligned with the beginning of class or structure.",
    "file": "sac_model_line.h",
    "line": 151,
    "function": null,
    "comment": "sac_model_line.h:151:  Closing brace should be aligned with beginning of class SACModelLine  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","curly-braces"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "sac_model_line.h",
    "line": 152,
    "function": null,
    "comment": "sac_model_line.h:152:  Namespace should be terminated with '// namespace sample_consensus'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "sac_model_line.h",
    "line": 129,
    "function": null,
    "comment": "sac_model_line.h:129:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "sac_model_line.h",
    "line": 75,
    "function": null,
    "comment": "sac_model_line.h:75:  Add #include <set> for set<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "sac.h",
    "line": 33,
    "function": null,
    "comment": "sac.h:33:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_SAC_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "sac.h",
    "line": 33,
    "function": null,
    "comment": "sac.h:33:  #ifndef header guard has wrong style, please use: SAC_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "sac.h",
    "line": 204,
    "function": null,
    "comment": "sac.h:204:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_SAC_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "sac.h",
    "line": 37,
    "function": null,
    "comment": "sac.h:37:  Include 'pcl/point_types.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not include the C standard headers. Use the C++ headers instead.",
    "file": "sac.h",
    "line": 39,
    "function": null,
    "comment": "sac.h:39:  Include 'cstdlib' instead of 'stdlib.h'.  [build/include] [5]",
    "tags": ["hicpp","code-standards","headers","include","preprocessor","deprecation","c"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "sac.h",
    "line": 40,
    "function": null,
    "comment": "sac.h:40:  Include 'sac_model.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.h",
    "line": 43,
    "function": null,
    "comment": "sac.h:43:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not indent within a namespace.",
    "file": "sac.h",
    "line": 44,
    "function": null,
    "comment": "sac.h:44:  Do not indent within a namespace  [runtime/indentation_namespace] [4]",
    "tags": ["code-standards","formatting","google-cpp","indentation","namespace"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.h",
    "line": 45,
    "function": null,
    "comment": "sac.h:45:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "sac.h",
    "line": 46,
    "function": null,
    "comment": "sac.h:46:  public: should be indented +1 space inside class SAC  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "sac.h",
    "line": 47,
    "function": null,
    "comment": "sac.h:47:  Do not leave a blank line after 'public:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 48,
    "function": null,
    "comment": "sac.h:48:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 50,
    "function": null,
    "comment": "sac.h:50:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.h",
    "line": 51,
    "function": null,
    "comment": "sac.h:51:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "sac.h",
    "line": 52,
    "function": null,
    "comment": "sac.h:52:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 55,
    "function": null,
    "comment": "sac.h:55:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 59,
    "function": null,
    "comment": "sac.h:59:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "sac.h",
    "line": 59,
    "function": null,
    "comment": "sac.h:59:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.h",
    "line": 60,
    "function": null,
    "comment": "sac.h:60:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "sac.h",
    "line": 61,
    "function": null,
    "comment": "sac.h:61:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 64,
    "function": null,
    "comment": "sac.h:64:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 66,
    "function": null,
    "comment": "sac.h:66:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 68,
    "function": null,
    "comment": "sac.h:68:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 73,
    "function": null,
    "comment": "sac.h:73:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.h",
    "line": 74,
    "function": null,
    "comment": "sac.h:74:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 78,
    "function": null,
    "comment": "sac.h:78:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 83,
    "function": null,
    "comment": "sac.h:83:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.h",
    "line": 84,
    "function": null,
    "comment": "sac.h:84:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 88,
    "function": null,
    "comment": "sac.h:88:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 93,
    "function": null,
    "comment": "sac.h:93:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.h",
    "line": 94,
    "function": null,
    "comment": "sac.h:94:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 98,
    "function": null,
    "comment": "sac.h:98:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 100,
    "function": null,
    "comment": "sac.h:100:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 102,
    "function": null,
    "comment": "sac.h:102:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 105,
    "function": null,
    "comment": "sac.h:105:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac.h",
    "line": 105,
    "function": null,
    "comment": "sac.h:105:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &coefficients  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.h",
    "line": 106,
    "function": null,
    "comment": "sac.h:106:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 107,
    "function": null,
    "comment": "sac.h:107:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 108,
    "function": null,
    "comment": "sac.h:108:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 111,
    "function": null,
    "comment": "sac.h:111:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 116,
    "function": null,
    "comment": "sac.h:116:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac.h",
    "line": 116,
    "function": null,
    "comment": "sac.h:116:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &refined_coefficients  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.h",
    "line": 117,
    "function": null,
    "comment": "sac.h:117:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 118,
    "function": null,
    "comment": "sac.h:118:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 118,
    "function": null,
    "comment": "sac.h:118:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 121,
    "function": null,
    "comment": "sac.h:121:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 122,
    "function": null,
    "comment": "sac.h:122:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 125,
    "function": null,
    "comment": "sac.h:125:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 128,
    "function": null,
    "comment": "sac.h:128:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.h",
    "line": 129,
    "function": null,
    "comment": "sac.h:129:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 133,
    "function": null,
    "comment": "sac.h:133:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 137,
    "function": null,
    "comment": "sac.h:137:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 139,
    "function": null,
    "comment": "sac.h:139:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 146,
    "function": null,
    "comment": "sac.h:146:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 146,
    "function": null,
    "comment": "sac.h:146:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac.h",
    "line": 147,
    "function": null,
    "comment": "sac.h:147:  Is this a non-const reference? If so, make const or use a pointer: PointCloud &projected_points  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.h",
    "line": 148,
    "function": null,
    "comment": "sac.h:148:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 149,
    "function": null,
    "comment": "sac.h:149:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 149,
    "function": null,
    "comment": "sac.h:149:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 153,
    "function": null,
    "comment": "sac.h:153:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 161,
    "function": null,
    "comment": "sac.h:161:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.h",
    "line": 162,
    "function": null,
    "comment": "sac.h:162:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 165,
    "function": null,
    "comment": "sac.h:165:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 165,
    "function": null,
    "comment": "sac.h:165:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "sac.h",
    "line": 165,
    "function": null,
    "comment": "sac.h:165:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 169,
    "function": null,
    "comment": "sac.h:169:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 178,
    "function": null,
    "comment": "sac.h:178:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 178,
    "function": null,
    "comment": "sac.h:178:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.h",
    "line": 179,
    "function": null,
    "comment": "sac.h:179:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 182,
    "function": null,
    "comment": "sac.h:182:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.h",
    "line": 182,
    "function": null,
    "comment": "sac.h:182:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "sac.h",
    "line": 182,
    "function": null,
    "comment": "sac.h:182:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "sac.h",
    "line": 186,
    "function": null,
    "comment": "sac.h:186:  protected: should be indented +1 space inside class SAC  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 187,
    "function": null,
    "comment": "sac.h:187:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 190,
    "function": null,
    "comment": "sac.h:190:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.h",
    "line": 193,
    "function": null,
    "comment": "sac.h:193:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "sac.h",
    "line": 202,
    "function": null,
    "comment": "sac.h:202:  Namespace should be terminated with '// namespace sample_consensus'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "sac.h",
    "line": 178,
    "function": null,
    "comment": "sac.h:178:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "sac.h",
    "line": 180,
    "function": null,
    "comment": "sac.h:180:  Add #include <set> for set<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 46,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:46:  Include 'Eigen/Eigenvalues' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 49,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:49:  Include 'ransac.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 54,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:54:  Include 'message_filters/subscriber.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 56,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:56:  Found C system header after other header. Should be: sac_inc_ground_removal_standalone.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 58,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:58:  Found C system header after other header. Should be: sac_inc_ground_removal_standalone.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 60,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:60:  Found C system header after other header. Should be: sac_inc_ground_removal_standalone.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 62,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:62:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 65,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:65:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 66,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:66:  protected: should be indented +1 space inside class IncGroundRemoval  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Access modifiers should be indented by one space.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 69,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:69:  public: should be indented +1 space inside class IncGroundRemoval  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","google-cpp","indentation","access-modifiers"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 70,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:70:  Do not leave a blank line after 'public:'  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 78,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:78:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 89,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:89:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 90,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:90:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 90,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:90:  Is this a non-const reference? If so, make const or use a pointer: ros::NodeHandle& anode  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 90,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:90:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 91,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:91:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 92,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:92:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 92,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:92:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 93,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:93:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 93,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:93:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 94,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:94:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 94,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:94:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 95,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:95:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 95,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:95:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 97,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:97:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 97,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:97:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 98,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:98:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 98,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:98:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 99,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:99:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 99,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:99:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 100,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:100:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 100,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:100:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 101,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:101:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 101,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:101:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 103,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:103:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 107,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:107:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 108,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:108:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 109,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:109:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 111,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:111:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 117,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:117:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 117,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:117:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 121,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:121:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 121,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:121:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 122,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:122:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 122,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:122:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 123,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:123:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 123,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:123:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 124,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:124:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 124,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:124:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 126,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:126:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 127,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:127:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 129,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:129:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 132,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:132:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 135,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:135:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 137,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:137:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 138,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:138:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 139,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:139:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 140,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:140:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 141,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:141:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 141,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:141:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 142,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:142:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 145,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:145:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 152,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:152:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 152,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:152:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 152,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:152:  Is this a non-const reference? If so, make const or use a pointer: vector<int> &inliers  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 153,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:153:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 154,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:154:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 158,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:158:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 159,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:159:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 160,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:160:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 161,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:161:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 163,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:163:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 168,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:168:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 170,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:170:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 172,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:172:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 174,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:174:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 174,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:174:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 175,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:175:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 175,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:175:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 176,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:176:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 176,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:176:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 179,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:179:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 181,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:181:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 189,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:189:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 196,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:196:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 196,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:196:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 196,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:196:  Is this a non-const reference? If so, make const or use a pointer: Eigen::Vector4d &normal  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 197,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:197:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 205,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:205:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 205,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:205:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 209,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:209:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 211,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:211:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 213,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:213:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 213,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:213:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 216,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:216:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 217,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:217:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 224,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:224:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 224,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:224:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 224,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:224:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointXYZ &centroid  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 225,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:225:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 229,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:229:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 230,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:230:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 231,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:231:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 232,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:232:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 235,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:235:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 236,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:236:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 237,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:237:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 239,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:239:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 240,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:240:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 250,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:250:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 250,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:250:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 250,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:250:  Is this a non-const reference? If so, make const or use a pointer: Eigen::Matrix3d &covariance_matrix  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 250,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:250:  Is this a non-const reference? If so, make const or use a pointer: pcl::PointXYZ &centroid  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 251,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:251:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 252,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:252:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 255,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:255:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 258,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:258:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 259,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:259:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 259,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:259:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 260,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:260:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 260,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:260:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 261,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:261:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 261,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:261:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 263,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:263:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 263,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:263:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 264,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:264:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 264,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:264:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 265,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:265:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 265,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:265:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 267,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:267:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 267,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:267:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 268,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:268:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 268,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:268:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 269,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:269:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 269,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:269:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 273,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:273:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 285,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:285:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 285,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:285:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 285,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:285:  Is this a non-const reference? If so, make const or use a pointer: Eigen::Vector4d &plane_parameters  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 285,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:285:  Is this a non-const reference? If so, make const or use a pointer: double &curvature  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 286,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:286:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 290,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:290:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 293,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:293:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 293,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:293:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 294,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:294:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 295,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:295:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 297,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:297:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 299,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:299:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 299,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:299:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 300,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:300:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 301,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:301:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 302,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:302:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 303,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:303:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 304,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:304:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 307,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:307:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 307,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:307:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 310,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:310:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 310,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:310:  Extra space after ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 310,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:310:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 313,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:313:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 315,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:315:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 316,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:316:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space after a comma.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 317,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:317:  Missing space after ,  [whitespace/comma] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","comma"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 318,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:318:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 319,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:319:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "There should be a space before a ( when it is preceeded by an if, switch, for or while.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 319,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:319:  Missing space before ( in if(  [whitespace/parens] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 319,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:319:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 325,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:325:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 325,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:325:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 326,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:326:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 328,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:328:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 328,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:328:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 333,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:333:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 337,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:337:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 342,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:342:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 345,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:345:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 347,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:347:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 349,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:349:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 349,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:349:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 351,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:351:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 352,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:352:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 353,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:353:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 356,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:356:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 358,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:358:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 358,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:358:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 359,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:359:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 359,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:359:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 359,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:359:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 360,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:360:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 365,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:365:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 367,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:367:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 367,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:367:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 372,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:372:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 373,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:373:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 375,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:375:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 375,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:375:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 376,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:376:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 377,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:377:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 377,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:377:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 381,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:381:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 381,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:381:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 383,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:383:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 385,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:385:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 388,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:388:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 389,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:389:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 390,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:390:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 390,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:390:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 391,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:391:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 391,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:391:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 396,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:396:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 396,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:396:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 398,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:398:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 400,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:400:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 401,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:401:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 401,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:401:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 403,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:403:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 404,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:404:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 405,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:405:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 406,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:406:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 406,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:406:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 407,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:407:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 410,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:410:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 414,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:414:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 414,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:414:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 418,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:418:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 419,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:419:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 420,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:420:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 420,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:420:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 421,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:421:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 424,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:424:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 425,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:425:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 428,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:428:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 429,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:429:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 430,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:430:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 431,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:431:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 434,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:434:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 435,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:435:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 435,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:435:  Using C-style cast.  Use static_cast<double>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 436,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:436:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 436,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:436:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 437,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:437:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 440,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:440:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 444,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:444:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 450,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:450:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 450,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:450:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 451,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:451:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 452,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:452:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 455,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:455:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 462,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:462:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 462,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:462:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 462,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:462:  Is this a non-const reference? If so, make const or use a pointer: geometry_msgs::PointStamped &viewpoint_cloud  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 463,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:463:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 468,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:468:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 471,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:471:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 472,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:472:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 473,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:473:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 473,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:473:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 474,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:474:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 477,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:477:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 478,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:478:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 478,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:478:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 480,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:480:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 480,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:480:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 482,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:482:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 482,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:482:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 484,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:484:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid more than one command per line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 484,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:484:  More than one command on the same line  [whitespace/newline] [0]",
    "tags": ["code-standards","formatting","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 488,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:488:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 496,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:496:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 496,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:496:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 497,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:497:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 497,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:497:  Is this a non-const reference? If so, make const or use a pointer: tf::Stamped< pcl::PointXYZ > &stamped_out  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 498,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:498:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 506,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:506:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 506,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:506:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 507,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:507:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 509,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:509:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Except after an opening parenthesis, or after another opening brace (in case of an initializer list, for instance), you should have spaces before your braces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 509,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:509:  Missing space before {  [whitespace/braces] [5]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 521,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:521:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 530,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:530:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 530,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:530:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 531,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:531:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 535,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:535:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 536,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:536:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 539,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:539:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 544,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:544:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 545,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:545:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 546,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:546:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 548,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:548:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 550,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:550:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 551,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:551:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 552,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:552:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 530,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:530:  Add #include <string> for string  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 417,
    "function": null,
    "comment": "sac_inc_ground_removal_standalone.cpp:417:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "ransac.cpp",
    "line": 34,
    "function": null,
    "comment": "ransac.cpp:34:  Found C system header after C++ system header. Should be: ransac.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ransac.cpp",
    "line": 37,
    "function": null,
    "comment": "ransac.cpp:37:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ransac.cpp",
    "line": 38,
    "function": null,
    "comment": "ransac.cpp:38:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.cpp",
    "line": 43,
    "function": null,
    "comment": "ransac.cpp:43:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ransac.cpp",
    "line": 44,
    "function": null,
    "comment": "ransac.cpp:44:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ransac.cpp",
    "line": 54,
    "function": null,
    "comment": "ransac.cpp:54:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.cpp",
    "line": 58,
    "function": null,
    "comment": "ransac.cpp:58:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ransac.cpp",
    "line": 60,
    "function": null,
    "comment": "ransac.cpp:60:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.cpp",
    "line": 65,
    "function": null,
    "comment": "ransac.cpp:65:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ransac.cpp",
    "line": 66,
    "function": null,
    "comment": "ransac.cpp:66:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ransac.cpp",
    "line": 79,
    "function": null,
    "comment": "ransac.cpp:79:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.cpp",
    "line": 81,
    "function": null,
    "comment": "ransac.cpp:81:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.cpp",
    "line": 86,
    "function": null,
    "comment": "ransac.cpp:86:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ransac.cpp",
    "line": 88,
    "function": null,
    "comment": "ransac.cpp:88:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.cpp",
    "line": 88,
    "function": null,
    "comment": "ransac.cpp:88:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.cpp",
    "line": 89,
    "function": null,
    "comment": "ransac.cpp:89:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ransac.cpp",
    "line": 93,
    "function": null,
    "comment": "ransac.cpp:93:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "ransac.cpp",
    "line": 96,
    "function": null,
    "comment": "ransac.cpp:96:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ransac.cpp",
    "line": 100,
    "function": null,
    "comment": "ransac.cpp:100:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "ransac.cpp",
    "line": 100,
    "function": null,
    "comment": "ransac.cpp:100:  Using C-style cast.  Use static_cast<double>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.cpp",
    "line": 101,
    "function": null,
    "comment": "ransac.cpp:101:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "ransac.cpp",
    "line": 101,
    "function": null,
    "comment": "ransac.cpp:101:  Using C-style cast.  Use static_cast<double>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ransac.cpp",
    "line": 102,
    "function": null,
    "comment": "ransac.cpp:102:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.cpp",
    "line": 102,
    "function": null,
    "comment": "ransac.cpp:102:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ransac.cpp",
    "line": 103,
    "function": null,
    "comment": "ransac.cpp:103:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.cpp",
    "line": 103,
    "function": null,
    "comment": "ransac.cpp:103:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.cpp",
    "line": 104,
    "function": null,
    "comment": "ransac.cpp:104:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ransac.cpp",
    "line": 109,
    "function": null,
    "comment": "ransac.cpp:109:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.cpp",
    "line": 109,
    "function": null,
    "comment": "ransac.cpp:109:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ransac.cpp",
    "line": 111,
    "function": null,
    "comment": "ransac.cpp:111:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ransac.cpp",
    "line": 113,
    "function": null,
    "comment": "ransac.cpp:113:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ransac.cpp",
    "line": 119,
    "function": null,
    "comment": "ransac.cpp:119:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ransac.cpp",
    "line": 121,
    "function": null,
    "comment": "ransac.cpp:121:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.cpp",
    "line": 122,
    "function": null,
    "comment": "ransac.cpp:122:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ransac.cpp",
    "line": 123,
    "function": null,
    "comment": "ransac.cpp:123:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The else statement should be on the same line as the preceeding closing brace.",
    "file": "ransac.cpp",
    "line": 126,
    "function": null,
    "comment": "ransac.cpp:126:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","curly-braces","if-else"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ransac.cpp",
    "line": 128,
    "function": null,
    "comment": "ransac.cpp:128:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "ransac.cpp",
    "line": 131,
    "function": null,
    "comment": "ransac.cpp:131:  Namespace should be terminated with '// namespace sample_consensus'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "ransac.cpp",
    "line": 73,
    "function": null,
    "comment": "ransac.cpp:73:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Do not use namespace using-directives. Use using-declarations instead.",
    "file": "sac.cpp",
    "line": 35,
    "function": null,
    "comment": "sac.cpp:35:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]",
    "tags": ["hicpp","code-standards","google-cpp","namespace","misra-cpp","using-directives","using-declarations"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac.cpp",
    "line": 37,
    "function": null,
    "comment": "sac.cpp:37:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.cpp",
    "line": 41,
    "function": null,
    "comment": "sac.cpp:41:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.cpp",
    "line": 42,
    "function": null,
    "comment": "sac.cpp:42:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.cpp",
    "line": 46,
    "function": null,
    "comment": "sac.cpp:46:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac.cpp",
    "line": 50,
    "function": null,
    "comment": "sac.cpp:50:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.cpp",
    "line": 51,
    "function": null,
    "comment": "sac.cpp:51:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.cpp",
    "line": 52,
    "function": null,
    "comment": "sac.cpp:52:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac.cpp",
    "line": 53,
    "function": null,
    "comment": "sac.cpp:53:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "sac.cpp",
    "line": 41,
    "function": null,
    "comment": "sac.cpp:41:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "sac_model.cpp",
    "line": 34,
    "function": null,
    "comment": "sac_model.cpp:34:  Found C system header after C++ system header. Should be: sac_model.h, c system, c++ system, other.  [build/include_order] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model.cpp",
    "line": 37,
    "function": null,
    "comment": "sac_model.cpp:37:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.cpp",
    "line": 38,
    "function": null,
    "comment": "sac_model.cpp:38:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.cpp",
    "line": 39,
    "function": null,
    "comment": "sac_model.cpp:39:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.cpp",
    "line": 41,
    "function": null,
    "comment": "sac_model.cpp:41:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model.cpp",
    "line": 42,
    "function": null,
    "comment": "sac_model.cpp:42:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.cpp",
    "line": 48,
    "function": null,
    "comment": "sac_model.cpp:48:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.cpp",
    "line": 49,
    "function": null,
    "comment": "sac_model.cpp:49:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model.cpp",
    "line": 51,
    "function": null,
    "comment": "sac_model.cpp:51:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.cpp",
    "line": 51,
    "function": null,
    "comment": "sac_model.cpp:51:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model.cpp",
    "line": 52,
    "function": null,
    "comment": "sac_model.cpp:52:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "sac_model.cpp",
    "line": 59,
    "function": null,
    "comment": "sac_model.cpp:59:  Namespace should be terminated with '// namespace sample_consensus'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "sac_model.cpp",
    "line": 45,
    "function": null,
    "comment": "sac_model.cpp:45:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "sac_model_line.cpp",
    "line": 38,
    "function": null,
    "comment": "sac_model_line.cpp:38:  Include 'Eigen/Eigenvalues' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 44,
    "function": null,
    "comment": "sac_model_line.cpp:44:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 45,
    "function": null,
    "comment": "sac_model_line.cpp:45:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 52,
    "function": null,
    "comment": "sac_model_line.cpp:52:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.cpp",
    "line": 52,
    "function": null,
    "comment": "sac_model_line.cpp:52:  Is this a non-const reference? If so, make const or use a pointer: int &iterations  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.cpp",
    "line": 52,
    "function": null,
    "comment": "sac_model_line.cpp:52:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &samples  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 53,
    "function": null,
    "comment": "sac_model_line.cpp:53:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 54,
    "function": null,
    "comment": "sac_model_line.cpp:54:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 55,
    "function": null,
    "comment": "sac_model_line.cpp:55:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "sac_model_line.cpp",
    "line": 58,
    "function": null,
    "comment": "sac_model_line.cpp:58:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 60,
    "function": null,
    "comment": "sac_model_line.cpp:60:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 65,
    "function": null,
    "comment": "sac_model_line.cpp:65:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Don't use deprecated casting styles.",
    "file": "sac_model_line.cpp",
    "line": 66,
    "function": null,
    "comment": "sac_model_line.cpp:66:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]",
    "tags": ["code-standards","google-cpp","deprecation","casting"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 67,
    "function": null,
    "comment": "sac_model_line.cpp:67:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 71,
    "function": null,
    "comment": "sac_model_line.cpp:71:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 72,
    "function": null,
    "comment": "sac_model_line.cpp:72:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 72,
    "function": null,
    "comment": "sac_model_line.cpp:72:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "sac_model_line.cpp",
    "line": 76,
    "function": null,
    "comment": "sac_model_line.cpp:76:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Use 2 spaces for indentation.",
    "file": "sac_model_line.cpp",
    "line": 81,
    "function": null,
    "comment": "sac_model_line.cpp:81:  Weird number of spaces at line-start.  Are you using a 2-space indent?  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","indentation"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 81,
    "function": null,
    "comment": "sac_model_line.cpp:81:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 90,
    "function": null,
    "comment": "sac_model_line.cpp:90:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 90,
    "function": null,
    "comment": "sac_model_line.cpp:90:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.cpp",
    "line": 90,
    "function": null,
    "comment": "sac_model_line.cpp:90:  Is this a non-const reference? If so, make const or use a pointer: std::vector<int> &inliers  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 91,
    "function": null,
    "comment": "sac_model_line.cpp:91:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 95,
    "function": null,
    "comment": "sac_model_line.cpp:95:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 99,
    "function": null,
    "comment": "sac_model_line.cpp:99:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 100,
    "function": null,
    "comment": "sac_model_line.cpp:100:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 101,
    "function": null,
    "comment": "sac_model_line.cpp:101:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 103,
    "function": null,
    "comment": "sac_model_line.cpp:103:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 105,
    "function": null,
    "comment": "sac_model_line.cpp:105:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 107,
    "function": null,
    "comment": "sac_model_line.cpp:107:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 112,
    "function": null,
    "comment": "sac_model_line.cpp:112:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 113,
    "function": null,
    "comment": "sac_model_line.cpp:113:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 114,
    "function": null,
    "comment": "sac_model_line.cpp:114:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 115,
    "function": null,
    "comment": "sac_model_line.cpp:115:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "sac_model_line.cpp",
    "line": 119,
    "function": null,
    "comment": "sac_model_line.cpp:119:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 120,
    "function": null,
    "comment": "sac_model_line.cpp:120:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 121,
    "function": null,
    "comment": "sac_model_line.cpp:121:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 124,
    "function": null,
    "comment": "sac_model_line.cpp:124:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 125,
    "function": null,
    "comment": "sac_model_line.cpp:125:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 130,
    "function": null,
    "comment": "sac_model_line.cpp:130:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 134,
    "function": null,
    "comment": "sac_model_line.cpp:134:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 140,
    "function": null,
    "comment": "sac_model_line.cpp:140:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 140,
    "function": null,
    "comment": "sac_model_line.cpp:140:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.cpp",
    "line": 140,
    "function": null,
    "comment": "sac_model_line.cpp:140:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &distances  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 141,
    "function": null,
    "comment": "sac_model_line.cpp:141:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 142,
    "function": null,
    "comment": "sac_model_line.cpp:142:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 146,
    "function": null,
    "comment": "sac_model_line.cpp:146:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 147,
    "function": null,
    "comment": "sac_model_line.cpp:147:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 148,
    "function": null,
    "comment": "sac_model_line.cpp:148:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 150,
    "function": null,
    "comment": "sac_model_line.cpp:150:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 152,
    "function": null,
    "comment": "sac_model_line.cpp:152:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 154,
    "function": null,
    "comment": "sac_model_line.cpp:154:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 155,
    "function": null,
    "comment": "sac_model_line.cpp:155:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 156,
    "function": null,
    "comment": "sac_model_line.cpp:156:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 157,
    "function": null,
    "comment": "sac_model_line.cpp:157:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 159,
    "function": null,
    "comment": "sac_model_line.cpp:159:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 160,
    "function": null,
    "comment": "sac_model_line.cpp:160:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 160,
    "function": null,
    "comment": "sac_model_line.cpp:160:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 165,
    "function": null,
    "comment": "sac_model_line.cpp:165:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 172,
    "function": null,
    "comment": "sac_model_line.cpp:172:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 172,
    "function": null,
    "comment": "sac_model_line.cpp:172:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.cpp",
    "line": 173,
    "function": null,
    "comment": "sac_model_line.cpp:173:  Is this a non-const reference? If so, make const or use a pointer: PointCloud &projected_points  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 174,
    "function": null,
    "comment": "sac_model_line.cpp:174:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 176,
    "function": null,
    "comment": "sac_model_line.cpp:176:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 180,
    "function": null,
    "comment": "sac_model_line.cpp:180:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 181,
    "function": null,
    "comment": "sac_model_line.cpp:181:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 182,
    "function": null,
    "comment": "sac_model_line.cpp:182:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 184,
    "function": null,
    "comment": "sac_model_line.cpp:184:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 186,
    "function": null,
    "comment": "sac_model_line.cpp:186:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 188,
    "function": null,
    "comment": "sac_model_line.cpp:188:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "sac_model_line.cpp",
    "line": 188,
    "function": null,
    "comment": "sac_model_line.cpp:188:  Extra space after (  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 188,
    "function": null,
    "comment": "sac_model_line.cpp:188:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 189,
    "function": null,
    "comment": "sac_model_line.cpp:189:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 190,
    "function": null,
    "comment": "sac_model_line.cpp:190:  Closing ) should be moved to the previous line  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 191,
    "function": null,
    "comment": "sac_model_line.cpp:191:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 192,
    "function": null,
    "comment": "sac_model_line.cpp:192:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 193,
    "function": null,
    "comment": "sac_model_line.cpp:193:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 194,
    "function": null,
    "comment": "sac_model_line.cpp:194:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 199,
    "function": null,
    "comment": "sac_model_line.cpp:199:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 205,
    "function": null,
    "comment": "sac_model_line.cpp:205:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 205,
    "function": null,
    "comment": "sac_model_line.cpp:205:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 206,
    "function": null,
    "comment": "sac_model_line.cpp:206:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 209,
    "function": null,
    "comment": "sac_model_line.cpp:209:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 210,
    "function": null,
    "comment": "sac_model_line.cpp:210:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 211,
    "function": null,
    "comment": "sac_model_line.cpp:211:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 213,
    "function": null,
    "comment": "sac_model_line.cpp:213:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 215,
    "function": null,
    "comment": "sac_model_line.cpp:215:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 217,
    "function": null,
    "comment": "sac_model_line.cpp:217:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Except in if/for/while/switch, there should never be space immediately inside parens (eg 'f( 3, 4 )'). We make an exception for nested parens ( (a+b) + c ).",
    "file": "sac_model_line.cpp",
    "line": 217,
    "function": null,
    "comment": "sac_model_line.cpp:217:  Extra space after (  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 217,
    "function": null,
    "comment": "sac_model_line.cpp:217:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 218,
    "function": null,
    "comment": "sac_model_line.cpp:218:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 219,
    "function": null,
    "comment": "sac_model_line.cpp:219:  Closing ) should be moved to the previous line  [whitespace/parens] [2]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 220,
    "function": null,
    "comment": "sac_model_line.cpp:220:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 221,
    "function": null,
    "comment": "sac_model_line.cpp:221:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 221,
    "function": null,
    "comment": "sac_model_line.cpp:221:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 222,
    "function": null,
    "comment": "sac_model_line.cpp:222:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 222,
    "function": null,
    "comment": "sac_model_line.cpp:222:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 223,
    "function": null,
    "comment": "sac_model_line.cpp:223:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 223,
    "function": null,
    "comment": "sac_model_line.cpp:223:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 227,
    "function": null,
    "comment": "sac_model_line.cpp:227:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 234,
    "function": null,
    "comment": "sac_model_line.cpp:234:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 235,
    "function": null,
    "comment": "sac_model_line.cpp:235:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 236,
    "function": null,
    "comment": "sac_model_line.cpp:236:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 237,
    "function": null,
    "comment": "sac_model_line.cpp:237:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 238,
    "function": null,
    "comment": "sac_model_line.cpp:238:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 239,
    "function": null,
    "comment": "sac_model_line.cpp:239:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 240,
    "function": null,
    "comment": "sac_model_line.cpp:240:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 241,
    "function": null,
    "comment": "sac_model_line.cpp:241:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 242,
    "function": null,
    "comment": "sac_model_line.cpp:242:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 247,
    "function": null,
    "comment": "sac_model_line.cpp:247:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 254,
    "function": null,
    "comment": "sac_model_line.cpp:254:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 254,
    "function": null,
    "comment": "sac_model_line.cpp:254:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "sac_model_line.cpp",
    "line": 254,
    "function": null,
    "comment": "sac_model_line.cpp:254:  Is this a non-const reference? If so, make const or use a pointer: std::vector<double> &refit_coefficients  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 255,
    "function": null,
    "comment": "sac_model_line.cpp:255:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 257,
    "function": null,
    "comment": "sac_model_line.cpp:257:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 258,
    "function": null,
    "comment": "sac_model_line.cpp:258:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 263,
    "function": null,
    "comment": "sac_model_line.cpp:263:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 269,
    "function": null,
    "comment": "sac_model_line.cpp:269:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 276,
    "function": null,
    "comment": "sac_model_line.cpp:276:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use one space before comment text.",
    "file": "sac_model_line.cpp",
    "line": 276,
    "function": null,
    "comment": "sac_model_line.cpp:276:  Should have a space between // and comment  [whitespace/comments] [4]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 277,
    "function": null,
    "comment": "sac_model_line.cpp:277:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 277,
    "function": null,
    "comment": "sac_model_line.cpp:277:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 278,
    "function": null,
    "comment": "sac_model_line.cpp:278:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 279,
    "function": null,
    "comment": "sac_model_line.cpp:279:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 281,
    "function": null,
    "comment": "sac_model_line.cpp:281:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 282,
    "function": null,
    "comment": "sac_model_line.cpp:282:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 283,
    "function": null,
    "comment": "sac_model_line.cpp:283:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 286,
    "function": null,
    "comment": "sac_model_line.cpp:286:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 292,
    "function": null,
    "comment": "sac_model_line.cpp:292:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 292,
    "function": null,
    "comment": "sac_model_line.cpp:292:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 293,
    "function": null,
    "comment": "sac_model_line.cpp:293:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 295,
    "function": null,
    "comment": "sac_model_line.cpp:295:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "sac_model_line.cpp",
    "line": 296,
    "function": null,
    "comment": "sac_model_line.cpp:296:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 298,
    "function": null,
    "comment": "sac_model_line.cpp:298:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 299,
    "function": null,
    "comment": "sac_model_line.cpp:299:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 300,
    "function": null,
    "comment": "sac_model_line.cpp:300:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 302,
    "function": null,
    "comment": "sac_model_line.cpp:302:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 303,
    "function": null,
    "comment": "sac_model_line.cpp:303:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 304,
    "function": null,
    "comment": "sac_model_line.cpp:304:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "sac_model_line.cpp",
    "line": 306,
    "function": null,
    "comment": "sac_model_line.cpp:306:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "sac_model_line.cpp",
    "line": 307,
    "function": null,
    "comment": "sac_model_line.cpp:307:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Namespaces should have a comment at the end.",
    "file": "sac_model_line.cpp",
    "line": 314,
    "function": null,
    "comment": "sac_model_line.cpp:314:  Namespace should be terminated with '// namespace sample_consensus'  [readability/namespace] [5]",
    "tags": ["ros","comments","code-standards","formatting","google-cpp","ros-cpp","namespace"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "sac_model_line.cpp",
    "line": 254,
    "function": null,
    "comment": "sac_model_line.cpp:254:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "sac_model_line.cpp",
    "line": 295,
    "function": null,
    "comment": "sac_model_line.cpp:295:  Add #include <set> for set<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Declarations should be at the smallest feasible scope.",
    "file": "ransac.cpp",
    "line": 75,
    "function": null,
    "comment": "The scope of the variable 'n_inliers_count' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:void f(int x){    i",
    "tags": ["code-standards","jsf-av-cpp","scope"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "ransac.cpp",
    "line": 65,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "ransac.cpp",
    "line": 68,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "ransac.cpp",
    "line": 75,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac.cpp",
    "line": 49,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_model.cpp",
    "line": 40,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_model_line.cpp",
    "line": 52,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_model_line.cpp",
    "line": 58,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_model_line.cpp",
    "line": 63,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_model_line.cpp",
    "line": 94,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_model_line.cpp",
    "line": 104,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_model_line.cpp",
    "line": 151,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_model_line.cpp",
    "line": 185,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_model_line.cpp",
    "line": 214,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 81,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 84,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 210,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 228,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 257,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 354,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 355,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 404,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 424,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 427,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 543,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not use integer types directly. Use size-specific typedefs, for instance from <cstdint>.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 544,
    "function": null,
    "comment": "Found implementation defined integer type.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","type-safety","integer-types","portability"]
  },
  {
    "rule": "Do not rely on the sequence of evaluation within an expression.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 226,
    "function": null,
    "comment": "Found assignment as a subexpression.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","evaluation-order","expressions"]
  },
  {
    "rule": "Do not rely on the sequence of evaluation within an expression.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 468,
    "function": null,
    "comment": "Found assignment as a subexpression.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","evaluation-order","expressions"]
  },
  {
    "rule": "Do not rely on the sequence of evaluation within an expression.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 533,
    "function": null,
    "comment": "Found assignment as a subexpression.",
    "tags": ["hicpp","code-standards","misra-cpp","jsf-av-cpp","evaluation-order","expressions"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "sac_model_line.cpp",
    "line": 292,
    "function": null,
    "comment": "The function 'doSamplesVerifyModel' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "sac_model_line.cpp",
    "line": 140,
    "function": null,
    "comment": "The function 'getDistancesToModel' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "sac.cpp",
    "line": 41,
    "function": null,
    "comment": "The function 'getPointCloud' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "sac_model_line.cpp",
    "line": 172,
    "function": null,
    "comment": "The function 'projectPoints' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "sac_model_line.cpp",
    "line": 205,
    "function": null,
    "comment": "The function 'projectPointsInPlace' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "sac_model_line.cpp",
    "line": 254,
    "function": null,
    "comment": "The function 'refitModel' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "sac_model.cpp",
    "line": 41,
    "function": null,
    "comment": "The function 'removeInliers' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "There shall be no unused variables.",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 137,
    "function": null,
    "comment": "The function 'updateParametersFromServer' is never used.",
    "tags": ["code-standards","misra-cpp","variables","unused-variables"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  },
  {
    "rule": "Maximum coupling between objects: 5",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": null,
    "function": null,
    "comment": "CBO is greater than 5, IncGroundRemoval, 15",
    "tags": ["metrics","nasa-satc","ros","coupling"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "sac_inc_ground_removal_standalone.cpp",
    "line": 315,
    "function": "cloud_cb",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "ransac.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "ransac.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  },
  {
    "rule": "Maximum cyclomatic complexity: 10",
    "file": "ransac.cpp",
    "line": 65,
    "function": "computeModel",
    "comment": "CC is greater than 10",
    "tags": ["metrics","nasa-satc","his","hicpp","cyclomatic-complexity"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "sac.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "sac.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "sac_model.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "sac_model.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "sac_model_line.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "sac_model_line.cpp",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  }
]