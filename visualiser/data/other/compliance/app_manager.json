[
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "GetInstallationState.h",
    "line": null,
    "function": null,
    "comment": "GetInstallationState.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "GetInstallationState.h",
    "line": 2,
    "function": null,
    "comment": "GetInstallationState.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_GETINSTALLATIONSTATE_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "GetInstallationState.h",
    "line": 2,
    "function": null,
    "comment": "GetInstallationState.h:2:  #ifndef header guard has wrong style, please use: GETINSTALLATIONSTATE_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "GetInstallationState.h",
    "line": 317,
    "function": null,
    "comment": "GetInstallationState.h:317:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_GETINSTALLATIONSTATE_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 1,
    "function": null,
    "comment": "GetInstallationState.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "GetInstallationState.h",
    "line": 6,
    "function": null,
    "comment": "GetInstallationState.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "GetInstallationState.h",
    "line": 9,
    "function": null,
    "comment": "GetInstallationState.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not include the same file twice.",
    "file": "GetInstallationState.h",
    "line": 22,
    "function": null,
    "comment": "GetInstallationState.h:22:  'app_manager/ExchangeApp.h' already included at GetInstallationState.h:21  [build/include] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 25,
    "function": null,
    "comment": "GetInstallationState.h:25:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetInstallationState.h",
    "line": 27,
    "function": null,
    "comment": "GetInstallationState.h:27:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 32,
    "function": null,
    "comment": "GetInstallationState.h:32:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "GetInstallationState.h",
    "line": 35,
    "function": null,
    "comment": "GetInstallationState.h:35:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 37,
    "function": null,
    "comment": "GetInstallationState.h:37:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 44,
    "function": null,
    "comment": "GetInstallationState.h:44:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 45,
    "function": null,
    "comment": "GetInstallationState.h:45:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 47,
    "function": null,
    "comment": "GetInstallationState.h:47:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 48,
    "function": null,
    "comment": "GetInstallationState.h:48:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 50,
    "function": null,
    "comment": "GetInstallationState.h:50:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 51,
    "function": null,
    "comment": "GetInstallationState.h:51:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetInstallationState.h",
    "line": 56,
    "function": null,
    "comment": "GetInstallationState.h:56:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 62,
    "function": null,
    "comment": "GetInstallationState.h:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "GetInstallationState.h",
    "line": 65,
    "function": null,
    "comment": "GetInstallationState.h:65:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 68,
    "function": null,
    "comment": "GetInstallationState.h:68:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 71,
    "function": null,
    "comment": "GetInstallationState.h:71:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 72,
    "function": null,
    "comment": "GetInstallationState.h:72:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 74,
    "function": null,
    "comment": "GetInstallationState.h:74:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 75,
    "function": null,
    "comment": "GetInstallationState.h:75:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 78,
    "function": null,
    "comment": "GetInstallationState.h:78:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 79,
    "function": null,
    "comment": "GetInstallationState.h:79:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 81,
    "function": null,
    "comment": "GetInstallationState.h:81:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 82,
    "function": null,
    "comment": "GetInstallationState.h:82:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 84,
    "function": null,
    "comment": "GetInstallationState.h:84:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 85,
    "function": null,
    "comment": "GetInstallationState.h:85:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 89,
    "function": null,
    "comment": "GetInstallationState.h:89:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "GetInstallationState.h",
    "line": 90,
    "function": null,
    "comment": "GetInstallationState.h:90:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 98,
    "function": null,
    "comment": "GetInstallationState.h:98:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 99,
    "function": null,
    "comment": "GetInstallationState.h:99:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 102,
    "function": null,
    "comment": "GetInstallationState.h:102:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 104,
    "function": null,
    "comment": "GetInstallationState.h:104:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 105,
    "function": null,
    "comment": "GetInstallationState.h:105:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 106,
    "function": null,
    "comment": "GetInstallationState.h:106:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 108,
    "function": null,
    "comment": "GetInstallationState.h:108:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetInstallationState.h",
    "line": 108,
    "function": null,
    "comment": "GetInstallationState.h:108:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 109,
    "function": null,
    "comment": "GetInstallationState.h:109:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 110,
    "function": null,
    "comment": "GetInstallationState.h:110:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 114,
    "function": null,
    "comment": "GetInstallationState.h:114:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 114,
    "function": null,
    "comment": "GetInstallationState.h:114:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 120,
    "function": null,
    "comment": "GetInstallationState.h:120:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetInstallationState.h",
    "line": 120,
    "function": null,
    "comment": "GetInstallationState.h:120:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 121,
    "function": null,
    "comment": "GetInstallationState.h:121:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 122,
    "function": null,
    "comment": "GetInstallationState.h:122:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 126,
    "function": null,
    "comment": "GetInstallationState.h:126:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 126,
    "function": null,
    "comment": "GetInstallationState.h:126:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 130,
    "function": null,
    "comment": "GetInstallationState.h:130:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetInstallationState.h",
    "line": 130,
    "function": null,
    "comment": "GetInstallationState.h:130:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 131,
    "function": null,
    "comment": "GetInstallationState.h:131:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 132,
    "function": null,
    "comment": "GetInstallationState.h:132:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "GetInstallationState.h",
    "line": 133,
    "function": null,
    "comment": "GetInstallationState.h:133:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "GetInstallationState.h",
    "line": 135,
    "function": null,
    "comment": "GetInstallationState.h:135:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 138,
    "function": null,
    "comment": "GetInstallationState.h:138:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 138,
    "function": null,
    "comment": "GetInstallationState.h:138:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 141,
    "function": null,
    "comment": "GetInstallationState.h:141:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 142,
    "function": null,
    "comment": "GetInstallationState.h:142:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 143,
    "function": null,
    "comment": "GetInstallationState.h:143:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 147,
    "function": null,
    "comment": "GetInstallationState.h:147:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 149,
    "function": null,
    "comment": "GetInstallationState.h:149:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 150,
    "function": null,
    "comment": "GetInstallationState.h:150:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 151,
    "function": null,
    "comment": "GetInstallationState.h:151:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 153,
    "function": null,
    "comment": "GetInstallationState.h:153:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetInstallationState.h",
    "line": 153,
    "function": null,
    "comment": "GetInstallationState.h:153:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 154,
    "function": null,
    "comment": "GetInstallationState.h:154:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 155,
    "function": null,
    "comment": "GetInstallationState.h:155:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 159,
    "function": null,
    "comment": "GetInstallationState.h:159:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 159,
    "function": null,
    "comment": "GetInstallationState.h:159:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 165,
    "function": null,
    "comment": "GetInstallationState.h:165:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetInstallationState.h",
    "line": 165,
    "function": null,
    "comment": "GetInstallationState.h:165:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 166,
    "function": null,
    "comment": "GetInstallationState.h:166:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 167,
    "function": null,
    "comment": "GetInstallationState.h:167:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 171,
    "function": null,
    "comment": "GetInstallationState.h:171:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 171,
    "function": null,
    "comment": "GetInstallationState.h:171:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 175,
    "function": null,
    "comment": "GetInstallationState.h:175:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetInstallationState.h",
    "line": 175,
    "function": null,
    "comment": "GetInstallationState.h:175:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 176,
    "function": null,
    "comment": "GetInstallationState.h:176:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 177,
    "function": null,
    "comment": "GetInstallationState.h:177:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "GetInstallationState.h",
    "line": 178,
    "function": null,
    "comment": "GetInstallationState.h:178:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 181,
    "function": null,
    "comment": "GetInstallationState.h:181:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "GetInstallationState.h",
    "line": 184,
    "function": null,
    "comment": "GetInstallationState.h:184:  For a static/global string constant, use a C style string instead: 'char name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "GetInstallationState.h",
    "line": 186,
    "function": null,
    "comment": "GetInstallationState.h:186:  For a static/global string constant, use a C style string instead: 'char display_name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "GetInstallationState.h",
    "line": 188,
    "function": null,
    "comment": "GetInstallationState.h:188:  For a static/global string constant, use a C style string instead: 'char version[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "GetInstallationState.h",
    "line": 190,
    "function": null,
    "comment": "GetInstallationState.h:190:  For a static/global string constant, use a C style string instead: 'char latest_version[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "GetInstallationState.h",
    "line": 192,
    "function": null,
    "comment": "GetInstallationState.h:192:  For a static/global string constant, use a C style string instead: 'char description[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 197,
    "function": null,
    "comment": "GetInstallationState.h:197:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "GetInstallationState.h",
    "line": 200,
    "function": null,
    "comment": "GetInstallationState.h:200:  For a static/global string constant, use a C style string instead: 'char format[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "GetInstallationState.h",
    "line": 205,
    "function": null,
    "comment": "GetInstallationState.h:205:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 208,
    "function": null,
    "comment": "GetInstallationState.h:208:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 208,
    "function": null,
    "comment": "GetInstallationState.h:208:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 211,
    "function": null,
    "comment": "GetInstallationState.h:211:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 212,
    "function": null,
    "comment": "GetInstallationState.h:212:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 215,
    "function": null,
    "comment": "GetInstallationState.h:215:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 217,
    "function": null,
    "comment": "GetInstallationState.h:217:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 219,
    "function": null,
    "comment": "GetInstallationState.h:219:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 220,
    "function": null,
    "comment": "GetInstallationState.h:220:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 221,
    "function": null,
    "comment": "GetInstallationState.h:221:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "GetInstallationState.h",
    "line": 221,
    "function": null,
    "comment": "GetInstallationState.h:221:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 222,
    "function": null,
    "comment": "GetInstallationState.h:222:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 227,
    "function": null,
    "comment": "GetInstallationState.h:227:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 228,
    "function": null,
    "comment": "GetInstallationState.h:228:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 229,
    "function": null,
    "comment": "GetInstallationState.h:229:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 233,
    "function": null,
    "comment": "GetInstallationState.h:233:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 235,
    "function": null,
    "comment": "GetInstallationState.h:235:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 237,
    "function": null,
    "comment": "GetInstallationState.h:237:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 238,
    "function": null,
    "comment": "GetInstallationState.h:238:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 239,
    "function": null,
    "comment": "GetInstallationState.h:239:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "GetInstallationState.h",
    "line": 239,
    "function": null,
    "comment": "GetInstallationState.h:239:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 240,
    "function": null,
    "comment": "GetInstallationState.h:240:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 246,
    "function": null,
    "comment": "GetInstallationState.h:246:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 247,
    "function": null,
    "comment": "GetInstallationState.h:247:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 248,
    "function": null,
    "comment": "GetInstallationState.h:248:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 251,
    "function": null,
    "comment": "GetInstallationState.h:251:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 253,
    "function": null,
    "comment": "GetInstallationState.h:253:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetInstallationState.h",
    "line": 255,
    "function": null,
    "comment": "GetInstallationState.h:255:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 256,
    "function": null,
    "comment": "GetInstallationState.h:256:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 257,
    "function": null,
    "comment": "GetInstallationState.h:257:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 261,
    "function": null,
    "comment": "GetInstallationState.h:261:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 261,
    "function": null,
    "comment": "GetInstallationState.h:261:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetInstallationState.h",
    "line": 265,
    "function": null,
    "comment": "GetInstallationState.h:265:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 266,
    "function": null,
    "comment": "GetInstallationState.h:266:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 267,
    "function": null,
    "comment": "GetInstallationState.h:267:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 271,
    "function": null,
    "comment": "GetInstallationState.h:271:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 271,
    "function": null,
    "comment": "GetInstallationState.h:271:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetInstallationState.h",
    "line": 275,
    "function": null,
    "comment": "GetInstallationState.h:275:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 276,
    "function": null,
    "comment": "GetInstallationState.h:276:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 277,
    "function": null,
    "comment": "GetInstallationState.h:277:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 281,
    "function": null,
    "comment": "GetInstallationState.h:281:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 281,
    "function": null,
    "comment": "GetInstallationState.h:281:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 285,
    "function": null,
    "comment": "GetInstallationState.h:285:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetInstallationState.h",
    "line": 285,
    "function": null,
    "comment": "GetInstallationState.h:285:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 286,
    "function": null,
    "comment": "GetInstallationState.h:286:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 287,
    "function": null,
    "comment": "GetInstallationState.h:287:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 291,
    "function": null,
    "comment": "GetInstallationState.h:291:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 291,
    "function": null,
    "comment": "GetInstallationState.h:291:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetInstallationState.h",
    "line": 295,
    "function": null,
    "comment": "GetInstallationState.h:295:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 296,
    "function": null,
    "comment": "GetInstallationState.h:296:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 297,
    "function": null,
    "comment": "GetInstallationState.h:297:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 301,
    "function": null,
    "comment": "GetInstallationState.h:301:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 301,
    "function": null,
    "comment": "GetInstallationState.h:301:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 305,
    "function": null,
    "comment": "GetInstallationState.h:305:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetInstallationState.h",
    "line": 305,
    "function": null,
    "comment": "GetInstallationState.h:305:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 306,
    "function": null,
    "comment": "GetInstallationState.h:306:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetInstallationState.h",
    "line": 307,
    "function": null,
    "comment": "GetInstallationState.h:307:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetInstallationState.h",
    "line": 311,
    "function": null,
    "comment": "GetInstallationState.h:311:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetInstallationState.h",
    "line": 311,
    "function": null,
    "comment": "GetInstallationState.h:311:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 314,
    "function": null,
    "comment": "GetInstallationState.h:314:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 315,
    "function": null,
    "comment": "GetInstallationState.h:315:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetInstallationState.h",
    "line": 317,
    "function": null,
    "comment": "GetInstallationState.h:317:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "GetInstallationState.h",
    "line": 82,
    "function": null,
    "comment": "GetInstallationState.h:82:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "GetAppDetails.h",
    "line": null,
    "function": null,
    "comment": "GetAppDetails.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "GetAppDetails.h",
    "line": 2,
    "function": null,
    "comment": "GetAppDetails.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_GETAPPDETAILS_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "GetAppDetails.h",
    "line": 2,
    "function": null,
    "comment": "GetAppDetails.h:2:  #ifndef header guard has wrong style, please use: GETAPPDETAILS_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "GetAppDetails.h",
    "line": 311,
    "function": null,
    "comment": "GetAppDetails.h:311:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_GETAPPDETAILS_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 1,
    "function": null,
    "comment": "GetAppDetails.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "GetAppDetails.h",
    "line": 6,
    "function": null,
    "comment": "GetAppDetails.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "GetAppDetails.h",
    "line": 9,
    "function": null,
    "comment": "GetAppDetails.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 24,
    "function": null,
    "comment": "GetAppDetails.h:24:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetAppDetails.h",
    "line": 26,
    "function": null,
    "comment": "GetAppDetails.h:26:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 31,
    "function": null,
    "comment": "GetAppDetails.h:31:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "GetAppDetails.h",
    "line": 34,
    "function": null,
    "comment": "GetAppDetails.h:34:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 36,
    "function": null,
    "comment": "GetAppDetails.h:36:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 39,
    "function": null,
    "comment": "GetAppDetails.h:39:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 40,
    "function": null,
    "comment": "GetAppDetails.h:40:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 43,
    "function": null,
    "comment": "GetAppDetails.h:43:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 44,
    "function": null,
    "comment": "GetAppDetails.h:44:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 46,
    "function": null,
    "comment": "GetAppDetails.h:46:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 47,
    "function": null,
    "comment": "GetAppDetails.h:47:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 49,
    "function": null,
    "comment": "GetAppDetails.h:49:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 50,
    "function": null,
    "comment": "GetAppDetails.h:50:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetAppDetails.h",
    "line": 55,
    "function": null,
    "comment": "GetAppDetails.h:55:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 60,
    "function": null,
    "comment": "GetAppDetails.h:60:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "GetAppDetails.h",
    "line": 63,
    "function": null,
    "comment": "GetAppDetails.h:63:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 65,
    "function": null,
    "comment": "GetAppDetails.h:65:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Use 2 spaces for indentation.",
    "file": "GetAppDetails.h",
    "line": 69,
    "function": null,
    "comment": "GetAppDetails.h:69:  Weird number of spaces at line-start.  Are you using a 2-space indent?  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","indentation"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 72,
    "function": null,
    "comment": "GetAppDetails.h:72:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 73,
    "function": null,
    "comment": "GetAppDetails.h:73:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 75,
    "function": null,
    "comment": "GetAppDetails.h:75:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 76,
    "function": null,
    "comment": "GetAppDetails.h:76:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 78,
    "function": null,
    "comment": "GetAppDetails.h:78:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 79,
    "function": null,
    "comment": "GetAppDetails.h:79:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 83,
    "function": null,
    "comment": "GetAppDetails.h:83:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "GetAppDetails.h",
    "line": 84,
    "function": null,
    "comment": "GetAppDetails.h:84:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 92,
    "function": null,
    "comment": "GetAppDetails.h:92:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 93,
    "function": null,
    "comment": "GetAppDetails.h:93:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 96,
    "function": null,
    "comment": "GetAppDetails.h:96:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 98,
    "function": null,
    "comment": "GetAppDetails.h:98:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 99,
    "function": null,
    "comment": "GetAppDetails.h:99:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 100,
    "function": null,
    "comment": "GetAppDetails.h:100:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetAppDetails.h",
    "line": 102,
    "function": null,
    "comment": "GetAppDetails.h:102:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 103,
    "function": null,
    "comment": "GetAppDetails.h:103:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 104,
    "function": null,
    "comment": "GetAppDetails.h:104:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 108,
    "function": null,
    "comment": "GetAppDetails.h:108:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 108,
    "function": null,
    "comment": "GetAppDetails.h:108:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetAppDetails.h",
    "line": 114,
    "function": null,
    "comment": "GetAppDetails.h:114:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 115,
    "function": null,
    "comment": "GetAppDetails.h:115:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 116,
    "function": null,
    "comment": "GetAppDetails.h:116:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 120,
    "function": null,
    "comment": "GetAppDetails.h:120:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 120,
    "function": null,
    "comment": "GetAppDetails.h:120:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetAppDetails.h",
    "line": 124,
    "function": null,
    "comment": "GetAppDetails.h:124:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 125,
    "function": null,
    "comment": "GetAppDetails.h:125:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 126,
    "function": null,
    "comment": "GetAppDetails.h:126:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "GetAppDetails.h",
    "line": 127,
    "function": null,
    "comment": "GetAppDetails.h:127:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "GetAppDetails.h",
    "line": 128,
    "function": null,
    "comment": "GetAppDetails.h:128:  For a static/global string constant, use a C style string instead: 'char name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "GetAppDetails.h",
    "line": 130,
    "function": null,
    "comment": "GetAppDetails.h:130:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 133,
    "function": null,
    "comment": "GetAppDetails.h:133:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 133,
    "function": null,
    "comment": "GetAppDetails.h:133:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 136,
    "function": null,
    "comment": "GetAppDetails.h:136:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 137,
    "function": null,
    "comment": "GetAppDetails.h:137:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 141,
    "function": null,
    "comment": "GetAppDetails.h:141:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 143,
    "function": null,
    "comment": "GetAppDetails.h:143:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 144,
    "function": null,
    "comment": "GetAppDetails.h:144:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 145,
    "function": null,
    "comment": "GetAppDetails.h:145:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetAppDetails.h",
    "line": 147,
    "function": null,
    "comment": "GetAppDetails.h:147:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 148,
    "function": null,
    "comment": "GetAppDetails.h:148:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 149,
    "function": null,
    "comment": "GetAppDetails.h:149:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 153,
    "function": null,
    "comment": "GetAppDetails.h:153:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 153,
    "function": null,
    "comment": "GetAppDetails.h:153:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetAppDetails.h",
    "line": 159,
    "function": null,
    "comment": "GetAppDetails.h:159:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 160,
    "function": null,
    "comment": "GetAppDetails.h:160:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 161,
    "function": null,
    "comment": "GetAppDetails.h:161:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 165,
    "function": null,
    "comment": "GetAppDetails.h:165:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 165,
    "function": null,
    "comment": "GetAppDetails.h:165:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetAppDetails.h",
    "line": 169,
    "function": null,
    "comment": "GetAppDetails.h:169:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 170,
    "function": null,
    "comment": "GetAppDetails.h:170:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 171,
    "function": null,
    "comment": "GetAppDetails.h:171:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "GetAppDetails.h",
    "line": 172,
    "function": null,
    "comment": "GetAppDetails.h:172:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 176,
    "function": null,
    "comment": "GetAppDetails.h:176:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "GetAppDetails.h",
    "line": 179,
    "function": null,
    "comment": "GetAppDetails.h:179:  For a static/global string constant, use a C style string instead: 'char name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "GetAppDetails.h",
    "line": 181,
    "function": null,
    "comment": "GetAppDetails.h:181:  For a static/global string constant, use a C style string instead: 'char display_name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "GetAppDetails.h",
    "line": 183,
    "function": null,
    "comment": "GetAppDetails.h:183:  For a static/global string constant, use a C style string instead: 'char version[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "GetAppDetails.h",
    "line": 185,
    "function": null,
    "comment": "GetAppDetails.h:185:  For a static/global string constant, use a C style string instead: 'char latest_version[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "GetAppDetails.h",
    "line": 187,
    "function": null,
    "comment": "GetAppDetails.h:187:  For a static/global string constant, use a C style string instead: 'char description[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 192,
    "function": null,
    "comment": "GetAppDetails.h:192:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "GetAppDetails.h",
    "line": 195,
    "function": null,
    "comment": "GetAppDetails.h:195:  For a static/global string constant, use a C style string instead: 'char format[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "GetAppDetails.h",
    "line": 200,
    "function": null,
    "comment": "GetAppDetails.h:200:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 203,
    "function": null,
    "comment": "GetAppDetails.h:203:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 203,
    "function": null,
    "comment": "GetAppDetails.h:203:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 206,
    "function": null,
    "comment": "GetAppDetails.h:206:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 207,
    "function": null,
    "comment": "GetAppDetails.h:207:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 210,
    "function": null,
    "comment": "GetAppDetails.h:210:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 212,
    "function": null,
    "comment": "GetAppDetails.h:212:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 214,
    "function": null,
    "comment": "GetAppDetails.h:214:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 215,
    "function": null,
    "comment": "GetAppDetails.h:215:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 216,
    "function": null,
    "comment": "GetAppDetails.h:216:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "GetAppDetails.h",
    "line": 216,
    "function": null,
    "comment": "GetAppDetails.h:216:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 217,
    "function": null,
    "comment": "GetAppDetails.h:217:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 222,
    "function": null,
    "comment": "GetAppDetails.h:222:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 223,
    "function": null,
    "comment": "GetAppDetails.h:223:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 224,
    "function": null,
    "comment": "GetAppDetails.h:224:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 228,
    "function": null,
    "comment": "GetAppDetails.h:228:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 230,
    "function": null,
    "comment": "GetAppDetails.h:230:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 232,
    "function": null,
    "comment": "GetAppDetails.h:232:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 233,
    "function": null,
    "comment": "GetAppDetails.h:233:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 234,
    "function": null,
    "comment": "GetAppDetails.h:234:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "GetAppDetails.h",
    "line": 234,
    "function": null,
    "comment": "GetAppDetails.h:234:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 235,
    "function": null,
    "comment": "GetAppDetails.h:235:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 240,
    "function": null,
    "comment": "GetAppDetails.h:240:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 241,
    "function": null,
    "comment": "GetAppDetails.h:241:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 242,
    "function": null,
    "comment": "GetAppDetails.h:242:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 245,
    "function": null,
    "comment": "GetAppDetails.h:245:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 247,
    "function": null,
    "comment": "GetAppDetails.h:247:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetAppDetails.h",
    "line": 249,
    "function": null,
    "comment": "GetAppDetails.h:249:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 250,
    "function": null,
    "comment": "GetAppDetails.h:250:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 251,
    "function": null,
    "comment": "GetAppDetails.h:251:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 255,
    "function": null,
    "comment": "GetAppDetails.h:255:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 255,
    "function": null,
    "comment": "GetAppDetails.h:255:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetAppDetails.h",
    "line": 259,
    "function": null,
    "comment": "GetAppDetails.h:259:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 260,
    "function": null,
    "comment": "GetAppDetails.h:260:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 261,
    "function": null,
    "comment": "GetAppDetails.h:261:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 265,
    "function": null,
    "comment": "GetAppDetails.h:265:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 265,
    "function": null,
    "comment": "GetAppDetails.h:265:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetAppDetails.h",
    "line": 269,
    "function": null,
    "comment": "GetAppDetails.h:269:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 270,
    "function": null,
    "comment": "GetAppDetails.h:270:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 271,
    "function": null,
    "comment": "GetAppDetails.h:271:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 275,
    "function": null,
    "comment": "GetAppDetails.h:275:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 275,
    "function": null,
    "comment": "GetAppDetails.h:275:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetAppDetails.h",
    "line": 279,
    "function": null,
    "comment": "GetAppDetails.h:279:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 280,
    "function": null,
    "comment": "GetAppDetails.h:280:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 281,
    "function": null,
    "comment": "GetAppDetails.h:281:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 285,
    "function": null,
    "comment": "GetAppDetails.h:285:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 285,
    "function": null,
    "comment": "GetAppDetails.h:285:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetAppDetails.h",
    "line": 289,
    "function": null,
    "comment": "GetAppDetails.h:289:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 290,
    "function": null,
    "comment": "GetAppDetails.h:290:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 291,
    "function": null,
    "comment": "GetAppDetails.h:291:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 295,
    "function": null,
    "comment": "GetAppDetails.h:295:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 295,
    "function": null,
    "comment": "GetAppDetails.h:295:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "GetAppDetails.h",
    "line": 299,
    "function": null,
    "comment": "GetAppDetails.h:299:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 300,
    "function": null,
    "comment": "GetAppDetails.h:300:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "GetAppDetails.h",
    "line": 301,
    "function": null,
    "comment": "GetAppDetails.h:301:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "GetAppDetails.h",
    "line": 305,
    "function": null,
    "comment": "GetAppDetails.h:305:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "GetAppDetails.h",
    "line": 305,
    "function": null,
    "comment": "GetAppDetails.h:305:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 308,
    "function": null,
    "comment": "GetAppDetails.h:308:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 309,
    "function": null,
    "comment": "GetAppDetails.h:309:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "GetAppDetails.h",
    "line": 311,
    "function": null,
    "comment": "GetAppDetails.h:311:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "GetAppDetails.h",
    "line": 76,
    "function": null,
    "comment": "GetAppDetails.h:76:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "StopApp.h",
    "line": null,
    "function": null,
    "comment": "StopApp.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "StopApp.h",
    "line": 2,
    "function": null,
    "comment": "StopApp.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_STOPAPP_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "StopApp.h",
    "line": 2,
    "function": null,
    "comment": "StopApp.h:2:  #ifndef header guard has wrong style, please use: STOPAPP_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "StopApp.h",
    "line": 302,
    "function": null,
    "comment": "StopApp.h:302:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_STOPAPP_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 1,
    "function": null,
    "comment": "StopApp.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "StopApp.h",
    "line": 6,
    "function": null,
    "comment": "StopApp.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "StopApp.h",
    "line": 9,
    "function": null,
    "comment": "StopApp.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 23,
    "function": null,
    "comment": "StopApp.h:23:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StopApp.h",
    "line": 25,
    "function": null,
    "comment": "StopApp.h:25:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 30,
    "function": null,
    "comment": "StopApp.h:30:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "StopApp.h",
    "line": 33,
    "function": null,
    "comment": "StopApp.h:33:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 35,
    "function": null,
    "comment": "StopApp.h:35:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 38,
    "function": null,
    "comment": "StopApp.h:38:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 39,
    "function": null,
    "comment": "StopApp.h:39:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 42,
    "function": null,
    "comment": "StopApp.h:42:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 43,
    "function": null,
    "comment": "StopApp.h:43:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 45,
    "function": null,
    "comment": "StopApp.h:45:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 49,
    "function": null,
    "comment": "StopApp.h:49:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StopApp.h",
    "line": 54,
    "function": null,
    "comment": "StopApp.h:54:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 61,
    "function": null,
    "comment": "StopApp.h:61:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "StopApp.h",
    "line": 64,
    "function": null,
    "comment": "StopApp.h:64:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 68,
    "function": null,
    "comment": "StopApp.h:68:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 77,
    "function": null,
    "comment": "StopApp.h:77:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 78,
    "function": null,
    "comment": "StopApp.h:78:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 81,
    "function": null,
    "comment": "StopApp.h:81:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 82,
    "function": null,
    "comment": "StopApp.h:82:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 84,
    "function": null,
    "comment": "StopApp.h:84:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 88,
    "function": null,
    "comment": "StopApp.h:88:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 92,
    "function": null,
    "comment": "StopApp.h:92:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "StopApp.h",
    "line": 93,
    "function": null,
    "comment": "StopApp.h:93:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 101,
    "function": null,
    "comment": "StopApp.h:101:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 102,
    "function": null,
    "comment": "StopApp.h:102:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 105,
    "function": null,
    "comment": "StopApp.h:105:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 107,
    "function": null,
    "comment": "StopApp.h:107:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 108,
    "function": null,
    "comment": "StopApp.h:108:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 109,
    "function": null,
    "comment": "StopApp.h:109:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StopApp.h",
    "line": 111,
    "function": null,
    "comment": "StopApp.h:111:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 112,
    "function": null,
    "comment": "StopApp.h:112:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 113,
    "function": null,
    "comment": "StopApp.h:113:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 117,
    "function": null,
    "comment": "StopApp.h:117:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 117,
    "function": null,
    "comment": "StopApp.h:117:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StopApp.h",
    "line": 123,
    "function": null,
    "comment": "StopApp.h:123:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 124,
    "function": null,
    "comment": "StopApp.h:124:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 125,
    "function": null,
    "comment": "StopApp.h:125:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 129,
    "function": null,
    "comment": "StopApp.h:129:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 129,
    "function": null,
    "comment": "StopApp.h:129:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StopApp.h",
    "line": 133,
    "function": null,
    "comment": "StopApp.h:133:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 134,
    "function": null,
    "comment": "StopApp.h:134:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 135,
    "function": null,
    "comment": "StopApp.h:135:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "StopApp.h",
    "line": 136,
    "function": null,
    "comment": "StopApp.h:136:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "StopApp.h",
    "line": 137,
    "function": null,
    "comment": "StopApp.h:137:  For a static/global string constant, use a C style string instead: 'char name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "StopApp.h",
    "line": 139,
    "function": null,
    "comment": "StopApp.h:139:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 142,
    "function": null,
    "comment": "StopApp.h:142:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 142,
    "function": null,
    "comment": "StopApp.h:142:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 145,
    "function": null,
    "comment": "StopApp.h:145:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 146,
    "function": null,
    "comment": "StopApp.h:146:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 150,
    "function": null,
    "comment": "StopApp.h:150:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 152,
    "function": null,
    "comment": "StopApp.h:152:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 153,
    "function": null,
    "comment": "StopApp.h:153:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 154,
    "function": null,
    "comment": "StopApp.h:154:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StopApp.h",
    "line": 156,
    "function": null,
    "comment": "StopApp.h:156:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 157,
    "function": null,
    "comment": "StopApp.h:157:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 158,
    "function": null,
    "comment": "StopApp.h:158:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 162,
    "function": null,
    "comment": "StopApp.h:162:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 162,
    "function": null,
    "comment": "StopApp.h:162:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StopApp.h",
    "line": 168,
    "function": null,
    "comment": "StopApp.h:168:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 169,
    "function": null,
    "comment": "StopApp.h:169:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 170,
    "function": null,
    "comment": "StopApp.h:170:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 174,
    "function": null,
    "comment": "StopApp.h:174:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 174,
    "function": null,
    "comment": "StopApp.h:174:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StopApp.h",
    "line": 178,
    "function": null,
    "comment": "StopApp.h:178:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 179,
    "function": null,
    "comment": "StopApp.h:179:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 180,
    "function": null,
    "comment": "StopApp.h:180:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "StopApp.h",
    "line": 181,
    "function": null,
    "comment": "StopApp.h:181:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "StopApp.h",
    "line": 186,
    "function": null,
    "comment": "StopApp.h:186:  For a static/global string constant, use a C style string instead: 'char message[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "StopApp.h",
    "line": 189,
    "function": null,
    "comment": "StopApp.h:189:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 192,
    "function": null,
    "comment": "StopApp.h:192:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 192,
    "function": null,
    "comment": "StopApp.h:192:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 195,
    "function": null,
    "comment": "StopApp.h:195:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 196,
    "function": null,
    "comment": "StopApp.h:196:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 199,
    "function": null,
    "comment": "StopApp.h:199:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 201,
    "function": null,
    "comment": "StopApp.h:201:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 203,
    "function": null,
    "comment": "StopApp.h:203:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 204,
    "function": null,
    "comment": "StopApp.h:204:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 205,
    "function": null,
    "comment": "StopApp.h:205:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "StopApp.h",
    "line": 205,
    "function": null,
    "comment": "StopApp.h:205:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 206,
    "function": null,
    "comment": "StopApp.h:206:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 211,
    "function": null,
    "comment": "StopApp.h:211:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 212,
    "function": null,
    "comment": "StopApp.h:212:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 213,
    "function": null,
    "comment": "StopApp.h:213:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 217,
    "function": null,
    "comment": "StopApp.h:217:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 219,
    "function": null,
    "comment": "StopApp.h:219:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 221,
    "function": null,
    "comment": "StopApp.h:221:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 222,
    "function": null,
    "comment": "StopApp.h:222:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 223,
    "function": null,
    "comment": "StopApp.h:223:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "StopApp.h",
    "line": 223,
    "function": null,
    "comment": "StopApp.h:223:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 224,
    "function": null,
    "comment": "StopApp.h:224:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 231,
    "function": null,
    "comment": "StopApp.h:231:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 232,
    "function": null,
    "comment": "StopApp.h:232:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 233,
    "function": null,
    "comment": "StopApp.h:233:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 236,
    "function": null,
    "comment": "StopApp.h:236:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 238,
    "function": null,
    "comment": "StopApp.h:238:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StopApp.h",
    "line": 240,
    "function": null,
    "comment": "StopApp.h:240:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 241,
    "function": null,
    "comment": "StopApp.h:241:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 242,
    "function": null,
    "comment": "StopApp.h:242:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 246,
    "function": null,
    "comment": "StopApp.h:246:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StopApp.h",
    "line": 250,
    "function": null,
    "comment": "StopApp.h:250:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 251,
    "function": null,
    "comment": "StopApp.h:251:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 252,
    "function": null,
    "comment": "StopApp.h:252:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 256,
    "function": null,
    "comment": "StopApp.h:256:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StopApp.h",
    "line": 260,
    "function": null,
    "comment": "StopApp.h:260:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 261,
    "function": null,
    "comment": "StopApp.h:261:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 262,
    "function": null,
    "comment": "StopApp.h:262:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 266,
    "function": null,
    "comment": "StopApp.h:266:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 266,
    "function": null,
    "comment": "StopApp.h:266:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StopApp.h",
    "line": 270,
    "function": null,
    "comment": "StopApp.h:270:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 271,
    "function": null,
    "comment": "StopApp.h:271:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 272,
    "function": null,
    "comment": "StopApp.h:272:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 276,
    "function": null,
    "comment": "StopApp.h:276:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 276,
    "function": null,
    "comment": "StopApp.h:276:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StopApp.h",
    "line": 280,
    "function": null,
    "comment": "StopApp.h:280:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 281,
    "function": null,
    "comment": "StopApp.h:281:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 282,
    "function": null,
    "comment": "StopApp.h:282:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 286,
    "function": null,
    "comment": "StopApp.h:286:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 286,
    "function": null,
    "comment": "StopApp.h:286:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StopApp.h",
    "line": 290,
    "function": null,
    "comment": "StopApp.h:290:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 291,
    "function": null,
    "comment": "StopApp.h:291:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StopApp.h",
    "line": 292,
    "function": null,
    "comment": "StopApp.h:292:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StopApp.h",
    "line": 296,
    "function": null,
    "comment": "StopApp.h:296:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StopApp.h",
    "line": 296,
    "function": null,
    "comment": "StopApp.h:296:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 299,
    "function": null,
    "comment": "StopApp.h:299:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 300,
    "function": null,
    "comment": "StopApp.h:300:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StopApp.h",
    "line": 302,
    "function": null,
    "comment": "StopApp.h:302:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "StopApp.h",
    "line": 85,
    "function": null,
    "comment": "StopApp.h:85:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "StartApp.h",
    "line": null,
    "function": null,
    "comment": "StartApp.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "StartApp.h",
    "line": 2,
    "function": null,
    "comment": "StartApp.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_STARTAPP_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "StartApp.h",
    "line": 2,
    "function": null,
    "comment": "StartApp.h:2:  #ifndef header guard has wrong style, please use: STARTAPP_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "StartApp.h",
    "line": 312,
    "function": null,
    "comment": "StartApp.h:312:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_STARTAPP_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 1,
    "function": null,
    "comment": "StartApp.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "StartApp.h",
    "line": 6,
    "function": null,
    "comment": "StartApp.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "StartApp.h",
    "line": 9,
    "function": null,
    "comment": "StartApp.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 23,
    "function": null,
    "comment": "StartApp.h:23:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StartApp.h",
    "line": 25,
    "function": null,
    "comment": "StartApp.h:25:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 30,
    "function": null,
    "comment": "StartApp.h:30:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "StartApp.h",
    "line": 33,
    "function": null,
    "comment": "StartApp.h:33:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 35,
    "function": null,
    "comment": "StartApp.h:35:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 38,
    "function": null,
    "comment": "StartApp.h:38:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 39,
    "function": null,
    "comment": "StartApp.h:39:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 42,
    "function": null,
    "comment": "StartApp.h:42:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 43,
    "function": null,
    "comment": "StartApp.h:43:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 45,
    "function": null,
    "comment": "StartApp.h:45:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 49,
    "function": null,
    "comment": "StartApp.h:49:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StartApp.h",
    "line": 54,
    "function": null,
    "comment": "StartApp.h:54:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 62,
    "function": null,
    "comment": "StartApp.h:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "StartApp.h",
    "line": 65,
    "function": null,
    "comment": "StartApp.h:65:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 70,
    "function": null,
    "comment": "StartApp.h:70:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 79,
    "function": null,
    "comment": "StartApp.h:79:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 80,
    "function": null,
    "comment": "StartApp.h:80:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 82,
    "function": null,
    "comment": "StartApp.h:82:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 83,
    "function": null,
    "comment": "StartApp.h:83:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 86,
    "function": null,
    "comment": "StartApp.h:86:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 87,
    "function": null,
    "comment": "StartApp.h:87:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 89,
    "function": null,
    "comment": "StartApp.h:89:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 90,
    "function": null,
    "comment": "StartApp.h:90:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 93,
    "function": null,
    "comment": "StartApp.h:93:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 97,
    "function": null,
    "comment": "StartApp.h:97:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "StartApp.h",
    "line": 98,
    "function": null,
    "comment": "StartApp.h:98:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 106,
    "function": null,
    "comment": "StartApp.h:106:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 107,
    "function": null,
    "comment": "StartApp.h:107:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 110,
    "function": null,
    "comment": "StartApp.h:110:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 112,
    "function": null,
    "comment": "StartApp.h:112:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 113,
    "function": null,
    "comment": "StartApp.h:113:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 114,
    "function": null,
    "comment": "StartApp.h:114:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StartApp.h",
    "line": 116,
    "function": null,
    "comment": "StartApp.h:116:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 117,
    "function": null,
    "comment": "StartApp.h:117:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 118,
    "function": null,
    "comment": "StartApp.h:118:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 122,
    "function": null,
    "comment": "StartApp.h:122:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 122,
    "function": null,
    "comment": "StartApp.h:122:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StartApp.h",
    "line": 128,
    "function": null,
    "comment": "StartApp.h:128:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 129,
    "function": null,
    "comment": "StartApp.h:129:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 130,
    "function": null,
    "comment": "StartApp.h:130:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 134,
    "function": null,
    "comment": "StartApp.h:134:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 134,
    "function": null,
    "comment": "StartApp.h:134:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StartApp.h",
    "line": 138,
    "function": null,
    "comment": "StartApp.h:138:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 139,
    "function": null,
    "comment": "StartApp.h:139:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 140,
    "function": null,
    "comment": "StartApp.h:140:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "StartApp.h",
    "line": 141,
    "function": null,
    "comment": "StartApp.h:141:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "StartApp.h",
    "line": 142,
    "function": null,
    "comment": "StartApp.h:142:  For a static/global string constant, use a C style string instead: 'char name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "StartApp.h",
    "line": 144,
    "function": null,
    "comment": "StartApp.h:144:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 147,
    "function": null,
    "comment": "StartApp.h:147:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 147,
    "function": null,
    "comment": "StartApp.h:147:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 150,
    "function": null,
    "comment": "StartApp.h:150:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 151,
    "function": null,
    "comment": "StartApp.h:151:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 155,
    "function": null,
    "comment": "StartApp.h:155:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 157,
    "function": null,
    "comment": "StartApp.h:157:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 158,
    "function": null,
    "comment": "StartApp.h:158:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 159,
    "function": null,
    "comment": "StartApp.h:159:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StartApp.h",
    "line": 161,
    "function": null,
    "comment": "StartApp.h:161:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 162,
    "function": null,
    "comment": "StartApp.h:162:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 163,
    "function": null,
    "comment": "StartApp.h:163:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 167,
    "function": null,
    "comment": "StartApp.h:167:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 167,
    "function": null,
    "comment": "StartApp.h:167:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StartApp.h",
    "line": 173,
    "function": null,
    "comment": "StartApp.h:173:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 174,
    "function": null,
    "comment": "StartApp.h:174:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 175,
    "function": null,
    "comment": "StartApp.h:175:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 179,
    "function": null,
    "comment": "StartApp.h:179:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 179,
    "function": null,
    "comment": "StartApp.h:179:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StartApp.h",
    "line": 183,
    "function": null,
    "comment": "StartApp.h:183:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 184,
    "function": null,
    "comment": "StartApp.h:184:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 185,
    "function": null,
    "comment": "StartApp.h:185:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "StartApp.h",
    "line": 186,
    "function": null,
    "comment": "StartApp.h:186:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "StartApp.h",
    "line": 192,
    "function": null,
    "comment": "StartApp.h:192:  For a static/global string constant, use a C style string instead: 'char message[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "StartApp.h",
    "line": 194,
    "function": null,
    "comment": "StartApp.h:194:  For a static/global string constant, use a C style string instead: 'char namespace[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "StartApp.h",
    "line": 198,
    "function": null,
    "comment": "StartApp.h:198:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 201,
    "function": null,
    "comment": "StartApp.h:201:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 201,
    "function": null,
    "comment": "StartApp.h:201:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 204,
    "function": null,
    "comment": "StartApp.h:204:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 205,
    "function": null,
    "comment": "StartApp.h:205:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 208,
    "function": null,
    "comment": "StartApp.h:208:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 210,
    "function": null,
    "comment": "StartApp.h:210:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 212,
    "function": null,
    "comment": "StartApp.h:212:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 213,
    "function": null,
    "comment": "StartApp.h:213:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 214,
    "function": null,
    "comment": "StartApp.h:214:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "StartApp.h",
    "line": 214,
    "function": null,
    "comment": "StartApp.h:214:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 215,
    "function": null,
    "comment": "StartApp.h:215:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 220,
    "function": null,
    "comment": "StartApp.h:220:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 221,
    "function": null,
    "comment": "StartApp.h:221:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 222,
    "function": null,
    "comment": "StartApp.h:222:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 226,
    "function": null,
    "comment": "StartApp.h:226:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 228,
    "function": null,
    "comment": "StartApp.h:228:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 230,
    "function": null,
    "comment": "StartApp.h:230:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 231,
    "function": null,
    "comment": "StartApp.h:231:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 232,
    "function": null,
    "comment": "StartApp.h:232:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "StartApp.h",
    "line": 232,
    "function": null,
    "comment": "StartApp.h:232:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 233,
    "function": null,
    "comment": "StartApp.h:233:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 241,
    "function": null,
    "comment": "StartApp.h:241:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 242,
    "function": null,
    "comment": "StartApp.h:242:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 243,
    "function": null,
    "comment": "StartApp.h:243:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 246,
    "function": null,
    "comment": "StartApp.h:246:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 248,
    "function": null,
    "comment": "StartApp.h:248:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StartApp.h",
    "line": 250,
    "function": null,
    "comment": "StartApp.h:250:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 251,
    "function": null,
    "comment": "StartApp.h:251:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 252,
    "function": null,
    "comment": "StartApp.h:252:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 256,
    "function": null,
    "comment": "StartApp.h:256:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StartApp.h",
    "line": 260,
    "function": null,
    "comment": "StartApp.h:260:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 261,
    "function": null,
    "comment": "StartApp.h:261:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 262,
    "function": null,
    "comment": "StartApp.h:262:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 266,
    "function": null,
    "comment": "StartApp.h:266:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StartApp.h",
    "line": 270,
    "function": null,
    "comment": "StartApp.h:270:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 271,
    "function": null,
    "comment": "StartApp.h:271:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 272,
    "function": null,
    "comment": "StartApp.h:272:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 276,
    "function": null,
    "comment": "StartApp.h:276:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 276,
    "function": null,
    "comment": "StartApp.h:276:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StartApp.h",
    "line": 280,
    "function": null,
    "comment": "StartApp.h:280:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 281,
    "function": null,
    "comment": "StartApp.h:281:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 282,
    "function": null,
    "comment": "StartApp.h:282:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 286,
    "function": null,
    "comment": "StartApp.h:286:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 286,
    "function": null,
    "comment": "StartApp.h:286:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StartApp.h",
    "line": 290,
    "function": null,
    "comment": "StartApp.h:290:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 291,
    "function": null,
    "comment": "StartApp.h:291:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 292,
    "function": null,
    "comment": "StartApp.h:292:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 296,
    "function": null,
    "comment": "StartApp.h:296:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 296,
    "function": null,
    "comment": "StartApp.h:296:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StartApp.h",
    "line": 300,
    "function": null,
    "comment": "StartApp.h:300:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 301,
    "function": null,
    "comment": "StartApp.h:301:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StartApp.h",
    "line": 302,
    "function": null,
    "comment": "StartApp.h:302:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StartApp.h",
    "line": 306,
    "function": null,
    "comment": "StartApp.h:306:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StartApp.h",
    "line": 306,
    "function": null,
    "comment": "StartApp.h:306:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 309,
    "function": null,
    "comment": "StartApp.h:309:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 310,
    "function": null,
    "comment": "StartApp.h:310:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StartApp.h",
    "line": 312,
    "function": null,
    "comment": "StartApp.h:312:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "StartApp.h",
    "line": 90,
    "function": null,
    "comment": "StartApp.h:90:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "InstallApp.h",
    "line": null,
    "function": null,
    "comment": "InstallApp.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "InstallApp.h",
    "line": 2,
    "function": null,
    "comment": "InstallApp.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_INSTALLAPP_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "InstallApp.h",
    "line": 2,
    "function": null,
    "comment": "InstallApp.h:2:  #ifndef header guard has wrong style, please use: INSTALLAPP_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "InstallApp.h",
    "line": 295,
    "function": null,
    "comment": "InstallApp.h:295:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_INSTALLAPP_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 1,
    "function": null,
    "comment": "InstallApp.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "InstallApp.h",
    "line": 6,
    "function": null,
    "comment": "InstallApp.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "InstallApp.h",
    "line": 9,
    "function": null,
    "comment": "InstallApp.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 23,
    "function": null,
    "comment": "InstallApp.h:23:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "InstallApp.h",
    "line": 25,
    "function": null,
    "comment": "InstallApp.h:25:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 30,
    "function": null,
    "comment": "InstallApp.h:30:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "InstallApp.h",
    "line": 33,
    "function": null,
    "comment": "InstallApp.h:33:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 35,
    "function": null,
    "comment": "InstallApp.h:35:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 38,
    "function": null,
    "comment": "InstallApp.h:38:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 39,
    "function": null,
    "comment": "InstallApp.h:39:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 42,
    "function": null,
    "comment": "InstallApp.h:42:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 43,
    "function": null,
    "comment": "InstallApp.h:43:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 45,
    "function": null,
    "comment": "InstallApp.h:45:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 46,
    "function": null,
    "comment": "InstallApp.h:46:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 48,
    "function": null,
    "comment": "InstallApp.h:48:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 49,
    "function": null,
    "comment": "InstallApp.h:49:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "InstallApp.h",
    "line": 54,
    "function": null,
    "comment": "InstallApp.h:54:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 60,
    "function": null,
    "comment": "InstallApp.h:60:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "InstallApp.h",
    "line": 63,
    "function": null,
    "comment": "InstallApp.h:63:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 66,
    "function": null,
    "comment": "InstallApp.h:66:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 72,
    "function": null,
    "comment": "InstallApp.h:72:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 73,
    "function": null,
    "comment": "InstallApp.h:73:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 76,
    "function": null,
    "comment": "InstallApp.h:76:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 77,
    "function": null,
    "comment": "InstallApp.h:77:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 79,
    "function": null,
    "comment": "InstallApp.h:79:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 80,
    "function": null,
    "comment": "InstallApp.h:80:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 82,
    "function": null,
    "comment": "InstallApp.h:82:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 83,
    "function": null,
    "comment": "InstallApp.h:83:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 87,
    "function": null,
    "comment": "InstallApp.h:87:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "InstallApp.h",
    "line": 88,
    "function": null,
    "comment": "InstallApp.h:88:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 96,
    "function": null,
    "comment": "InstallApp.h:96:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 97,
    "function": null,
    "comment": "InstallApp.h:97:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 100,
    "function": null,
    "comment": "InstallApp.h:100:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 102,
    "function": null,
    "comment": "InstallApp.h:102:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 103,
    "function": null,
    "comment": "InstallApp.h:103:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 104,
    "function": null,
    "comment": "InstallApp.h:104:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "InstallApp.h",
    "line": 106,
    "function": null,
    "comment": "InstallApp.h:106:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 107,
    "function": null,
    "comment": "InstallApp.h:107:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 108,
    "function": null,
    "comment": "InstallApp.h:108:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 112,
    "function": null,
    "comment": "InstallApp.h:112:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 112,
    "function": null,
    "comment": "InstallApp.h:112:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "InstallApp.h",
    "line": 118,
    "function": null,
    "comment": "InstallApp.h:118:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 119,
    "function": null,
    "comment": "InstallApp.h:119:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 120,
    "function": null,
    "comment": "InstallApp.h:120:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 124,
    "function": null,
    "comment": "InstallApp.h:124:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 124,
    "function": null,
    "comment": "InstallApp.h:124:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "InstallApp.h",
    "line": 128,
    "function": null,
    "comment": "InstallApp.h:128:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 129,
    "function": null,
    "comment": "InstallApp.h:129:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 130,
    "function": null,
    "comment": "InstallApp.h:130:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "InstallApp.h",
    "line": 131,
    "function": null,
    "comment": "InstallApp.h:131:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "InstallApp.h",
    "line": 132,
    "function": null,
    "comment": "InstallApp.h:132:  For a static/global string constant, use a C style string instead: 'char name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "InstallApp.h",
    "line": 134,
    "function": null,
    "comment": "InstallApp.h:134:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 137,
    "function": null,
    "comment": "InstallApp.h:137:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 137,
    "function": null,
    "comment": "InstallApp.h:137:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 140,
    "function": null,
    "comment": "InstallApp.h:140:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 141,
    "function": null,
    "comment": "InstallApp.h:141:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 145,
    "function": null,
    "comment": "InstallApp.h:145:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 147,
    "function": null,
    "comment": "InstallApp.h:147:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 148,
    "function": null,
    "comment": "InstallApp.h:148:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 149,
    "function": null,
    "comment": "InstallApp.h:149:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "InstallApp.h",
    "line": 151,
    "function": null,
    "comment": "InstallApp.h:151:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 152,
    "function": null,
    "comment": "InstallApp.h:152:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 153,
    "function": null,
    "comment": "InstallApp.h:153:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 157,
    "function": null,
    "comment": "InstallApp.h:157:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 157,
    "function": null,
    "comment": "InstallApp.h:157:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "InstallApp.h",
    "line": 163,
    "function": null,
    "comment": "InstallApp.h:163:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 164,
    "function": null,
    "comment": "InstallApp.h:164:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 165,
    "function": null,
    "comment": "InstallApp.h:165:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 169,
    "function": null,
    "comment": "InstallApp.h:169:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 169,
    "function": null,
    "comment": "InstallApp.h:169:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "InstallApp.h",
    "line": 173,
    "function": null,
    "comment": "InstallApp.h:173:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 174,
    "function": null,
    "comment": "InstallApp.h:174:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 175,
    "function": null,
    "comment": "InstallApp.h:175:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "InstallApp.h",
    "line": 176,
    "function": null,
    "comment": "InstallApp.h:176:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "InstallApp.h",
    "line": 179,
    "function": null,
    "comment": "InstallApp.h:179:  For a static/global string constant, use a C style string instead: 'char message[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "InstallApp.h",
    "line": 183,
    "function": null,
    "comment": "InstallApp.h:183:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 186,
    "function": null,
    "comment": "InstallApp.h:186:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 186,
    "function": null,
    "comment": "InstallApp.h:186:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 189,
    "function": null,
    "comment": "InstallApp.h:189:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 190,
    "function": null,
    "comment": "InstallApp.h:190:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 193,
    "function": null,
    "comment": "InstallApp.h:193:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 195,
    "function": null,
    "comment": "InstallApp.h:195:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 197,
    "function": null,
    "comment": "InstallApp.h:197:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 198,
    "function": null,
    "comment": "InstallApp.h:198:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 199,
    "function": null,
    "comment": "InstallApp.h:199:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "InstallApp.h",
    "line": 199,
    "function": null,
    "comment": "InstallApp.h:199:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 200,
    "function": null,
    "comment": "InstallApp.h:200:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 205,
    "function": null,
    "comment": "InstallApp.h:205:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 206,
    "function": null,
    "comment": "InstallApp.h:206:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 207,
    "function": null,
    "comment": "InstallApp.h:207:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 211,
    "function": null,
    "comment": "InstallApp.h:211:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 213,
    "function": null,
    "comment": "InstallApp.h:213:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 215,
    "function": null,
    "comment": "InstallApp.h:215:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 216,
    "function": null,
    "comment": "InstallApp.h:216:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 217,
    "function": null,
    "comment": "InstallApp.h:217:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "InstallApp.h",
    "line": 217,
    "function": null,
    "comment": "InstallApp.h:217:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 218,
    "function": null,
    "comment": "InstallApp.h:218:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 224,
    "function": null,
    "comment": "InstallApp.h:224:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 225,
    "function": null,
    "comment": "InstallApp.h:225:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 226,
    "function": null,
    "comment": "InstallApp.h:226:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 229,
    "function": null,
    "comment": "InstallApp.h:229:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 231,
    "function": null,
    "comment": "InstallApp.h:231:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "InstallApp.h",
    "line": 233,
    "function": null,
    "comment": "InstallApp.h:233:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 234,
    "function": null,
    "comment": "InstallApp.h:234:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 235,
    "function": null,
    "comment": "InstallApp.h:235:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 239,
    "function": null,
    "comment": "InstallApp.h:239:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "InstallApp.h",
    "line": 243,
    "function": null,
    "comment": "InstallApp.h:243:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 244,
    "function": null,
    "comment": "InstallApp.h:244:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 245,
    "function": null,
    "comment": "InstallApp.h:245:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 249,
    "function": null,
    "comment": "InstallApp.h:249:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "InstallApp.h",
    "line": 253,
    "function": null,
    "comment": "InstallApp.h:253:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 254,
    "function": null,
    "comment": "InstallApp.h:254:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 255,
    "function": null,
    "comment": "InstallApp.h:255:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 259,
    "function": null,
    "comment": "InstallApp.h:259:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 259,
    "function": null,
    "comment": "InstallApp.h:259:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "InstallApp.h",
    "line": 263,
    "function": null,
    "comment": "InstallApp.h:263:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 264,
    "function": null,
    "comment": "InstallApp.h:264:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 265,
    "function": null,
    "comment": "InstallApp.h:265:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 269,
    "function": null,
    "comment": "InstallApp.h:269:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 269,
    "function": null,
    "comment": "InstallApp.h:269:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "InstallApp.h",
    "line": 273,
    "function": null,
    "comment": "InstallApp.h:273:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 274,
    "function": null,
    "comment": "InstallApp.h:274:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 275,
    "function": null,
    "comment": "InstallApp.h:275:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 279,
    "function": null,
    "comment": "InstallApp.h:279:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 279,
    "function": null,
    "comment": "InstallApp.h:279:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "InstallApp.h",
    "line": 283,
    "function": null,
    "comment": "InstallApp.h:283:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 284,
    "function": null,
    "comment": "InstallApp.h:284:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "InstallApp.h",
    "line": 285,
    "function": null,
    "comment": "InstallApp.h:285:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "InstallApp.h",
    "line": 289,
    "function": null,
    "comment": "InstallApp.h:289:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "InstallApp.h",
    "line": 289,
    "function": null,
    "comment": "InstallApp.h:289:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 292,
    "function": null,
    "comment": "InstallApp.h:292:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 293,
    "function": null,
    "comment": "InstallApp.h:293:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "InstallApp.h",
    "line": 295,
    "function": null,
    "comment": "InstallApp.h:295:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "InstallApp.h",
    "line": 80,
    "function": null,
    "comment": "InstallApp.h:80:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "UninstallApp.h",
    "line": null,
    "function": null,
    "comment": "UninstallApp.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "UninstallApp.h",
    "line": 2,
    "function": null,
    "comment": "UninstallApp.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_UNINSTALLAPP_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "UninstallApp.h",
    "line": 2,
    "function": null,
    "comment": "UninstallApp.h:2:  #ifndef header guard has wrong style, please use: UNINSTALLAPP_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "UninstallApp.h",
    "line": 293,
    "function": null,
    "comment": "UninstallApp.h:293:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_UNINSTALLAPP_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 1,
    "function": null,
    "comment": "UninstallApp.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "UninstallApp.h",
    "line": 6,
    "function": null,
    "comment": "UninstallApp.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "UninstallApp.h",
    "line": 9,
    "function": null,
    "comment": "UninstallApp.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 23,
    "function": null,
    "comment": "UninstallApp.h:23:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "UninstallApp.h",
    "line": 25,
    "function": null,
    "comment": "UninstallApp.h:25:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 30,
    "function": null,
    "comment": "UninstallApp.h:30:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "UninstallApp.h",
    "line": 33,
    "function": null,
    "comment": "UninstallApp.h:33:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 35,
    "function": null,
    "comment": "UninstallApp.h:35:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 38,
    "function": null,
    "comment": "UninstallApp.h:38:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 39,
    "function": null,
    "comment": "UninstallApp.h:39:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 42,
    "function": null,
    "comment": "UninstallApp.h:42:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 43,
    "function": null,
    "comment": "UninstallApp.h:43:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 45,
    "function": null,
    "comment": "UninstallApp.h:45:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 46,
    "function": null,
    "comment": "UninstallApp.h:46:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 48,
    "function": null,
    "comment": "UninstallApp.h:48:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 49,
    "function": null,
    "comment": "UninstallApp.h:49:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "UninstallApp.h",
    "line": 54,
    "function": null,
    "comment": "UninstallApp.h:54:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 60,
    "function": null,
    "comment": "UninstallApp.h:60:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "UninstallApp.h",
    "line": 63,
    "function": null,
    "comment": "UninstallApp.h:63:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 66,
    "function": null,
    "comment": "UninstallApp.h:66:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 72,
    "function": null,
    "comment": "UninstallApp.h:72:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 73,
    "function": null,
    "comment": "UninstallApp.h:73:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 76,
    "function": null,
    "comment": "UninstallApp.h:76:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 77,
    "function": null,
    "comment": "UninstallApp.h:77:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 79,
    "function": null,
    "comment": "UninstallApp.h:79:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 80,
    "function": null,
    "comment": "UninstallApp.h:80:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 82,
    "function": null,
    "comment": "UninstallApp.h:82:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 83,
    "function": null,
    "comment": "UninstallApp.h:83:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 87,
    "function": null,
    "comment": "UninstallApp.h:87:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "UninstallApp.h",
    "line": 88,
    "function": null,
    "comment": "UninstallApp.h:88:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 96,
    "function": null,
    "comment": "UninstallApp.h:96:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 97,
    "function": null,
    "comment": "UninstallApp.h:97:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 100,
    "function": null,
    "comment": "UninstallApp.h:100:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 102,
    "function": null,
    "comment": "UninstallApp.h:102:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 103,
    "function": null,
    "comment": "UninstallApp.h:103:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 104,
    "function": null,
    "comment": "UninstallApp.h:104:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "UninstallApp.h",
    "line": 106,
    "function": null,
    "comment": "UninstallApp.h:106:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 107,
    "function": null,
    "comment": "UninstallApp.h:107:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 108,
    "function": null,
    "comment": "UninstallApp.h:108:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 112,
    "function": null,
    "comment": "UninstallApp.h:112:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 112,
    "function": null,
    "comment": "UninstallApp.h:112:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "UninstallApp.h",
    "line": 118,
    "function": null,
    "comment": "UninstallApp.h:118:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 119,
    "function": null,
    "comment": "UninstallApp.h:119:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 120,
    "function": null,
    "comment": "UninstallApp.h:120:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 124,
    "function": null,
    "comment": "UninstallApp.h:124:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 124,
    "function": null,
    "comment": "UninstallApp.h:124:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "UninstallApp.h",
    "line": 128,
    "function": null,
    "comment": "UninstallApp.h:128:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 129,
    "function": null,
    "comment": "UninstallApp.h:129:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 130,
    "function": null,
    "comment": "UninstallApp.h:130:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "UninstallApp.h",
    "line": 131,
    "function": null,
    "comment": "UninstallApp.h:131:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "UninstallApp.h",
    "line": 132,
    "function": null,
    "comment": "UninstallApp.h:132:  For a static/global string constant, use a C style string instead: 'char name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "UninstallApp.h",
    "line": 134,
    "function": null,
    "comment": "UninstallApp.h:134:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 137,
    "function": null,
    "comment": "UninstallApp.h:137:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 137,
    "function": null,
    "comment": "UninstallApp.h:137:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 140,
    "function": null,
    "comment": "UninstallApp.h:140:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 141,
    "function": null,
    "comment": "UninstallApp.h:141:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 145,
    "function": null,
    "comment": "UninstallApp.h:145:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 147,
    "function": null,
    "comment": "UninstallApp.h:147:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 148,
    "function": null,
    "comment": "UninstallApp.h:148:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 149,
    "function": null,
    "comment": "UninstallApp.h:149:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "UninstallApp.h",
    "line": 151,
    "function": null,
    "comment": "UninstallApp.h:151:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 152,
    "function": null,
    "comment": "UninstallApp.h:152:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 153,
    "function": null,
    "comment": "UninstallApp.h:153:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 157,
    "function": null,
    "comment": "UninstallApp.h:157:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 157,
    "function": null,
    "comment": "UninstallApp.h:157:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "UninstallApp.h",
    "line": 163,
    "function": null,
    "comment": "UninstallApp.h:163:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 164,
    "function": null,
    "comment": "UninstallApp.h:164:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 165,
    "function": null,
    "comment": "UninstallApp.h:165:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 169,
    "function": null,
    "comment": "UninstallApp.h:169:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 169,
    "function": null,
    "comment": "UninstallApp.h:169:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "UninstallApp.h",
    "line": 173,
    "function": null,
    "comment": "UninstallApp.h:173:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 174,
    "function": null,
    "comment": "UninstallApp.h:174:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 175,
    "function": null,
    "comment": "UninstallApp.h:175:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "UninstallApp.h",
    "line": 176,
    "function": null,
    "comment": "UninstallApp.h:176:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "UninstallApp.h",
    "line": 178,
    "function": null,
    "comment": "UninstallApp.h:178:  For a static/global string constant, use a C style string instead: 'char message[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "UninstallApp.h",
    "line": 181,
    "function": null,
    "comment": "UninstallApp.h:181:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 184,
    "function": null,
    "comment": "UninstallApp.h:184:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 184,
    "function": null,
    "comment": "UninstallApp.h:184:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 187,
    "function": null,
    "comment": "UninstallApp.h:187:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 188,
    "function": null,
    "comment": "UninstallApp.h:188:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 191,
    "function": null,
    "comment": "UninstallApp.h:191:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 193,
    "function": null,
    "comment": "UninstallApp.h:193:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 195,
    "function": null,
    "comment": "UninstallApp.h:195:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 196,
    "function": null,
    "comment": "UninstallApp.h:196:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 197,
    "function": null,
    "comment": "UninstallApp.h:197:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "UninstallApp.h",
    "line": 197,
    "function": null,
    "comment": "UninstallApp.h:197:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 198,
    "function": null,
    "comment": "UninstallApp.h:198:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 203,
    "function": null,
    "comment": "UninstallApp.h:203:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 204,
    "function": null,
    "comment": "UninstallApp.h:204:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 205,
    "function": null,
    "comment": "UninstallApp.h:205:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 209,
    "function": null,
    "comment": "UninstallApp.h:209:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 211,
    "function": null,
    "comment": "UninstallApp.h:211:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 213,
    "function": null,
    "comment": "UninstallApp.h:213:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 214,
    "function": null,
    "comment": "UninstallApp.h:214:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 215,
    "function": null,
    "comment": "UninstallApp.h:215:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "UninstallApp.h",
    "line": 215,
    "function": null,
    "comment": "UninstallApp.h:215:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 216,
    "function": null,
    "comment": "UninstallApp.h:216:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 222,
    "function": null,
    "comment": "UninstallApp.h:222:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 223,
    "function": null,
    "comment": "UninstallApp.h:223:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 224,
    "function": null,
    "comment": "UninstallApp.h:224:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 227,
    "function": null,
    "comment": "UninstallApp.h:227:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 229,
    "function": null,
    "comment": "UninstallApp.h:229:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "UninstallApp.h",
    "line": 231,
    "function": null,
    "comment": "UninstallApp.h:231:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 232,
    "function": null,
    "comment": "UninstallApp.h:232:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 233,
    "function": null,
    "comment": "UninstallApp.h:233:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 237,
    "function": null,
    "comment": "UninstallApp.h:237:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 237,
    "function": null,
    "comment": "UninstallApp.h:237:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "UninstallApp.h",
    "line": 241,
    "function": null,
    "comment": "UninstallApp.h:241:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 242,
    "function": null,
    "comment": "UninstallApp.h:242:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 243,
    "function": null,
    "comment": "UninstallApp.h:243:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 247,
    "function": null,
    "comment": "UninstallApp.h:247:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 247,
    "function": null,
    "comment": "UninstallApp.h:247:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "UninstallApp.h",
    "line": 251,
    "function": null,
    "comment": "UninstallApp.h:251:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 252,
    "function": null,
    "comment": "UninstallApp.h:252:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 253,
    "function": null,
    "comment": "UninstallApp.h:253:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 257,
    "function": null,
    "comment": "UninstallApp.h:257:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 257,
    "function": null,
    "comment": "UninstallApp.h:257:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "UninstallApp.h",
    "line": 261,
    "function": null,
    "comment": "UninstallApp.h:261:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 262,
    "function": null,
    "comment": "UninstallApp.h:262:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 263,
    "function": null,
    "comment": "UninstallApp.h:263:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 267,
    "function": null,
    "comment": "UninstallApp.h:267:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 267,
    "function": null,
    "comment": "UninstallApp.h:267:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "UninstallApp.h",
    "line": 271,
    "function": null,
    "comment": "UninstallApp.h:271:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 272,
    "function": null,
    "comment": "UninstallApp.h:272:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 273,
    "function": null,
    "comment": "UninstallApp.h:273:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 277,
    "function": null,
    "comment": "UninstallApp.h:277:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 277,
    "function": null,
    "comment": "UninstallApp.h:277:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "UninstallApp.h",
    "line": 281,
    "function": null,
    "comment": "UninstallApp.h:281:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 282,
    "function": null,
    "comment": "UninstallApp.h:282:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "UninstallApp.h",
    "line": 283,
    "function": null,
    "comment": "UninstallApp.h:283:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "UninstallApp.h",
    "line": 287,
    "function": null,
    "comment": "UninstallApp.h:287:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "UninstallApp.h",
    "line": 287,
    "function": null,
    "comment": "UninstallApp.h:287:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 290,
    "function": null,
    "comment": "UninstallApp.h:290:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 291,
    "function": null,
    "comment": "UninstallApp.h:291:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "UninstallApp.h",
    "line": 293,
    "function": null,
    "comment": "UninstallApp.h:293:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "UninstallApp.h",
    "line": 80,
    "function": null,
    "comment": "UninstallApp.h:80:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "ListApps.h",
    "line": null,
    "function": null,
    "comment": "ListApps.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "ListApps.h",
    "line": 2,
    "function": null,
    "comment": "ListApps.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_LISTAPPS_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "ListApps.h",
    "line": 2,
    "function": null,
    "comment": "ListApps.h:2:  #ifndef header guard has wrong style, please use: LISTAPPS_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "ListApps.h",
    "line": 321,
    "function": null,
    "comment": "ListApps.h:321:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_LISTAPPS_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 1,
    "function": null,
    "comment": "ListApps.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "ListApps.h",
    "line": 6,
    "function": null,
    "comment": "ListApps.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "ListApps.h",
    "line": 9,
    "function": null,
    "comment": "ListApps.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not include the same file twice.",
    "file": "ListApps.h",
    "line": 22,
    "function": null,
    "comment": "ListApps.h:22:  'app_manager/App.h' already included at ListApps.h:21  [build/include] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 25,
    "function": null,
    "comment": "ListApps.h:25:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ListApps.h",
    "line": 27,
    "function": null,
    "comment": "ListApps.h:27:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 31,
    "function": null,
    "comment": "ListApps.h:31:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "ListApps.h",
    "line": 34,
    "function": null,
    "comment": "ListApps.h:34:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 35,
    "function": null,
    "comment": "ListApps.h:35:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 39,
    "function": null,
    "comment": "ListApps.h:39:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 40,
    "function": null,
    "comment": "ListApps.h:40:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 42,
    "function": null,
    "comment": "ListApps.h:42:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 46,
    "function": null,
    "comment": "ListApps.h:46:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ListApps.h",
    "line": 51,
    "function": null,
    "comment": "ListApps.h:51:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 57,
    "function": null,
    "comment": "ListApps.h:57:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "ListApps.h",
    "line": 60,
    "function": null,
    "comment": "ListApps.h:60:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 63,
    "function": null,
    "comment": "ListApps.h:63:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 66,
    "function": null,
    "comment": "ListApps.h:66:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 67,
    "function": null,
    "comment": "ListApps.h:67:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 69,
    "function": null,
    "comment": "ListApps.h:69:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 70,
    "function": null,
    "comment": "ListApps.h:70:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 73,
    "function": null,
    "comment": "ListApps.h:73:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 74,
    "function": null,
    "comment": "ListApps.h:74:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 76,
    "function": null,
    "comment": "ListApps.h:76:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 77,
    "function": null,
    "comment": "ListApps.h:77:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 80,
    "function": null,
    "comment": "ListApps.h:80:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 84,
    "function": null,
    "comment": "ListApps.h:84:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Leave no redundant blank lines in code blocks.",
    "file": "ListApps.h",
    "line": 85,
    "function": null,
    "comment": "ListApps.h:85:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]",
    "tags": ["code-standards","functions","formatting","whitespace","google-cpp","code-blocks"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 93,
    "function": null,
    "comment": "ListApps.h:93:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 94,
    "function": null,
    "comment": "ListApps.h:94:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 97,
    "function": null,
    "comment": "ListApps.h:97:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 99,
    "function": null,
    "comment": "ListApps.h:99:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 100,
    "function": null,
    "comment": "ListApps.h:100:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 101,
    "function": null,
    "comment": "ListApps.h:101:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ListApps.h",
    "line": 103,
    "function": null,
    "comment": "ListApps.h:103:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 104,
    "function": null,
    "comment": "ListApps.h:104:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 105,
    "function": null,
    "comment": "ListApps.h:105:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 109,
    "function": null,
    "comment": "ListApps.h:109:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 109,
    "function": null,
    "comment": "ListApps.h:109:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ListApps.h",
    "line": 115,
    "function": null,
    "comment": "ListApps.h:115:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 116,
    "function": null,
    "comment": "ListApps.h:116:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 117,
    "function": null,
    "comment": "ListApps.h:117:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 121,
    "function": null,
    "comment": "ListApps.h:121:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 121,
    "function": null,
    "comment": "ListApps.h:121:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ListApps.h",
    "line": 125,
    "function": null,
    "comment": "ListApps.h:125:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 126,
    "function": null,
    "comment": "ListApps.h:126:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 127,
    "function": null,
    "comment": "ListApps.h:127:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "ListApps.h",
    "line": 128,
    "function": null,
    "comment": "ListApps.h:128:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "ListApps.h",
    "line": 129,
    "function": null,
    "comment": "ListApps.h:129:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 132,
    "function": null,
    "comment": "ListApps.h:132:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 132,
    "function": null,
    "comment": "ListApps.h:132:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 135,
    "function": null,
    "comment": "ListApps.h:135:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 136,
    "function": null,
    "comment": "ListApps.h:136:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 137,
    "function": null,
    "comment": "ListApps.h:137:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 141,
    "function": null,
    "comment": "ListApps.h:141:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 143,
    "function": null,
    "comment": "ListApps.h:143:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 144,
    "function": null,
    "comment": "ListApps.h:144:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 145,
    "function": null,
    "comment": "ListApps.h:145:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ListApps.h",
    "line": 147,
    "function": null,
    "comment": "ListApps.h:147:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 148,
    "function": null,
    "comment": "ListApps.h:148:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 149,
    "function": null,
    "comment": "ListApps.h:149:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 153,
    "function": null,
    "comment": "ListApps.h:153:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 153,
    "function": null,
    "comment": "ListApps.h:153:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ListApps.h",
    "line": 159,
    "function": null,
    "comment": "ListApps.h:159:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 160,
    "function": null,
    "comment": "ListApps.h:160:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 161,
    "function": null,
    "comment": "ListApps.h:161:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 165,
    "function": null,
    "comment": "ListApps.h:165:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 165,
    "function": null,
    "comment": "ListApps.h:165:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ListApps.h",
    "line": 169,
    "function": null,
    "comment": "ListApps.h:169:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 170,
    "function": null,
    "comment": "ListApps.h:170:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 171,
    "function": null,
    "comment": "ListApps.h:171:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "ListApps.h",
    "line": 172,
    "function": null,
    "comment": "ListApps.h:172:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 175,
    "function": null,
    "comment": "ListApps.h:175:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ListApps.h",
    "line": 178,
    "function": null,
    "comment": "ListApps.h:178:  For a static/global string constant, use a C style string instead: 'char name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ListApps.h",
    "line": 180,
    "function": null,
    "comment": "ListApps.h:180:  For a static/global string constant, use a C style string instead: 'char display_name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 183,
    "function": null,
    "comment": "ListApps.h:183:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "ListApps.h",
    "line": 183,
    "function": null,
    "comment": "ListApps.h:183:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 186,
    "function": null,
    "comment": "ListApps.h:186:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ListApps.h",
    "line": 189,
    "function": null,
    "comment": "ListApps.h:189:  For a static/global string constant, use a C style string instead: 'char format[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 194,
    "function": null,
    "comment": "ListApps.h:194:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ListApps.h",
    "line": 197,
    "function": null,
    "comment": "ListApps.h:197:  For a static/global string constant, use a C style string instead: 'char client_type[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 199,
    "function": null,
    "comment": "ListApps.h:199:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 205,
    "function": null,
    "comment": "ListApps.h:205:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ListApps.h",
    "line": 207,
    "function": null,
    "comment": "ListApps.h:207:  For a static/global string constant, use a C style string instead: 'char key[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ListApps.h",
    "line": 208,
    "function": null,
    "comment": "ListApps.h:208:  For a static/global string constant, use a C style string instead: 'char value[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "ListApps.h",
    "line": 210,
    "function": null,
    "comment": "ListApps.h:210:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 213,
    "function": null,
    "comment": "ListApps.h:213:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 213,
    "function": null,
    "comment": "ListApps.h:213:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 216,
    "function": null,
    "comment": "ListApps.h:216:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 217,
    "function": null,
    "comment": "ListApps.h:217:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 220,
    "function": null,
    "comment": "ListApps.h:220:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 222,
    "function": null,
    "comment": "ListApps.h:222:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 224,
    "function": null,
    "comment": "ListApps.h:224:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 225,
    "function": null,
    "comment": "ListApps.h:225:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 226,
    "function": null,
    "comment": "ListApps.h:226:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "ListApps.h",
    "line": 226,
    "function": null,
    "comment": "ListApps.h:226:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 227,
    "function": null,
    "comment": "ListApps.h:227:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 231,
    "function": null,
    "comment": "ListApps.h:231:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 232,
    "function": null,
    "comment": "ListApps.h:232:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 233,
    "function": null,
    "comment": "ListApps.h:233:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 237,
    "function": null,
    "comment": "ListApps.h:237:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 239,
    "function": null,
    "comment": "ListApps.h:239:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 241,
    "function": null,
    "comment": "ListApps.h:241:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 242,
    "function": null,
    "comment": "ListApps.h:242:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 243,
    "function": null,
    "comment": "ListApps.h:243:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "ListApps.h",
    "line": 243,
    "function": null,
    "comment": "ListApps.h:243:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 244,
    "function": null,
    "comment": "ListApps.h:244:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 250,
    "function": null,
    "comment": "ListApps.h:250:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 251,
    "function": null,
    "comment": "ListApps.h:251:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 252,
    "function": null,
    "comment": "ListApps.h:252:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 255,
    "function": null,
    "comment": "ListApps.h:255:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 257,
    "function": null,
    "comment": "ListApps.h:257:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ListApps.h",
    "line": 259,
    "function": null,
    "comment": "ListApps.h:259:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 260,
    "function": null,
    "comment": "ListApps.h:260:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 261,
    "function": null,
    "comment": "ListApps.h:261:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 265,
    "function": null,
    "comment": "ListApps.h:265:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ListApps.h",
    "line": 269,
    "function": null,
    "comment": "ListApps.h:269:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 270,
    "function": null,
    "comment": "ListApps.h:270:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 271,
    "function": null,
    "comment": "ListApps.h:271:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 275,
    "function": null,
    "comment": "ListApps.h:275:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ListApps.h",
    "line": 279,
    "function": null,
    "comment": "ListApps.h:279:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 280,
    "function": null,
    "comment": "ListApps.h:280:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 281,
    "function": null,
    "comment": "ListApps.h:281:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 285,
    "function": null,
    "comment": "ListApps.h:285:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 285,
    "function": null,
    "comment": "ListApps.h:285:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ListApps.h",
    "line": 289,
    "function": null,
    "comment": "ListApps.h:289:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 290,
    "function": null,
    "comment": "ListApps.h:290:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 291,
    "function": null,
    "comment": "ListApps.h:291:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 295,
    "function": null,
    "comment": "ListApps.h:295:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 295,
    "function": null,
    "comment": "ListApps.h:295:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ListApps.h",
    "line": 299,
    "function": null,
    "comment": "ListApps.h:299:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 300,
    "function": null,
    "comment": "ListApps.h:300:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 301,
    "function": null,
    "comment": "ListApps.h:301:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 305,
    "function": null,
    "comment": "ListApps.h:305:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 305,
    "function": null,
    "comment": "ListApps.h:305:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ListApps.h",
    "line": 309,
    "function": null,
    "comment": "ListApps.h:309:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 310,
    "function": null,
    "comment": "ListApps.h:310:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ListApps.h",
    "line": 311,
    "function": null,
    "comment": "ListApps.h:311:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ListApps.h",
    "line": 315,
    "function": null,
    "comment": "ListApps.h:315:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ListApps.h",
    "line": 315,
    "function": null,
    "comment": "ListApps.h:315:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 318,
    "function": null,
    "comment": "ListApps.h:318:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 319,
    "function": null,
    "comment": "ListApps.h:319:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ListApps.h",
    "line": 321,
    "function": null,
    "comment": "ListApps.h:321:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "ListApps.h",
    "line": 77,
    "function": null,
    "comment": "ListApps.h:77:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "AppInstallationState.h",
    "line": null,
    "function": null,
    "comment": "AppInstallationState.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "AppInstallationState.h",
    "line": 2,
    "function": null,
    "comment": "AppInstallationState.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_APPINSTALLATIONSTATE_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "AppInstallationState.h",
    "line": 2,
    "function": null,
    "comment": "AppInstallationState.h:2:  #ifndef header guard has wrong style, please use: APPINSTALLATIONSTATE_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "AppInstallationState.h",
    "line": 182,
    "function": null,
    "comment": "AppInstallationState.h:182:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_APPINSTALLATIONSTATE_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 1,
    "function": null,
    "comment": "AppInstallationState.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "AppInstallationState.h",
    "line": 6,
    "function": null,
    "comment": "AppInstallationState.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "AppInstallationState.h",
    "line": 9,
    "function": null,
    "comment": "AppInstallationState.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not include the same file twice.",
    "file": "AppInstallationState.h",
    "line": 18,
    "function": null,
    "comment": "AppInstallationState.h:18:  'app_manager/ExchangeApp.h' already included at AppInstallationState.h:17  [build/include] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 21,
    "function": null,
    "comment": "AppInstallationState.h:21:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "AppInstallationState.h",
    "line": 23,
    "function": null,
    "comment": "AppInstallationState.h:23:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 29,
    "function": null,
    "comment": "AppInstallationState.h:29:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "AppInstallationState.h",
    "line": 32,
    "function": null,
    "comment": "AppInstallationState.h:32:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 35,
    "function": null,
    "comment": "AppInstallationState.h:35:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 38,
    "function": null,
    "comment": "AppInstallationState.h:38:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 39,
    "function": null,
    "comment": "AppInstallationState.h:39:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 41,
    "function": null,
    "comment": "AppInstallationState.h:41:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 42,
    "function": null,
    "comment": "AppInstallationState.h:42:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 45,
    "function": null,
    "comment": "AppInstallationState.h:45:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 46,
    "function": null,
    "comment": "AppInstallationState.h:46:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppInstallationState.h",
    "line": 48,
    "function": null,
    "comment": "AppInstallationState.h:48:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 49,
    "function": null,
    "comment": "AppInstallationState.h:49:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 51,
    "function": null,
    "comment": "AppInstallationState.h:51:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 52,
    "function": null,
    "comment": "AppInstallationState.h:52:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 56,
    "function": null,
    "comment": "AppInstallationState.h:56:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 57,
    "function": null,
    "comment": "AppInstallationState.h:57:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 58,
    "function": null,
    "comment": "AppInstallationState.h:58:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "AppInstallationState.h",
    "line": 59,
    "function": null,
    "comment": "AppInstallationState.h:59:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppInstallationState.h",
    "line": 61,
    "function": null,
    "comment": "AppInstallationState.h:61:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 64,
    "function": null,
    "comment": "AppInstallationState.h:64:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 66,
    "function": null,
    "comment": "AppInstallationState.h:66:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 67,
    "function": null,
    "comment": "AppInstallationState.h:67:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 68,
    "function": null,
    "comment": "AppInstallationState.h:68:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "AppInstallationState.h",
    "line": 70,
    "function": null,
    "comment": "AppInstallationState.h:70:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppInstallationState.h",
    "line": 71,
    "function": null,
    "comment": "AppInstallationState.h:71:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 72,
    "function": null,
    "comment": "AppInstallationState.h:72:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppInstallationState.h",
    "line": 76,
    "function": null,
    "comment": "AppInstallationState.h:76:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 76,
    "function": null,
    "comment": "AppInstallationState.h:76:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "AppInstallationState.h",
    "line": 82,
    "function": null,
    "comment": "AppInstallationState.h:82:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppInstallationState.h",
    "line": 83,
    "function": null,
    "comment": "AppInstallationState.h:83:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 84,
    "function": null,
    "comment": "AppInstallationState.h:84:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppInstallationState.h",
    "line": 88,
    "function": null,
    "comment": "AppInstallationState.h:88:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 88,
    "function": null,
    "comment": "AppInstallationState.h:88:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "AppInstallationState.h",
    "line": 92,
    "function": null,
    "comment": "AppInstallationState.h:92:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppInstallationState.h",
    "line": 93,
    "function": null,
    "comment": "AppInstallationState.h:93:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 94,
    "function": null,
    "comment": "AppInstallationState.h:94:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "AppInstallationState.h",
    "line": 95,
    "function": null,
    "comment": "AppInstallationState.h:95:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 98,
    "function": null,
    "comment": "AppInstallationState.h:98:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "AppInstallationState.h",
    "line": 101,
    "function": null,
    "comment": "AppInstallationState.h:101:  For a static/global string constant, use a C style string instead: 'char name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "AppInstallationState.h",
    "line": 103,
    "function": null,
    "comment": "AppInstallationState.h:103:  For a static/global string constant, use a C style string instead: 'char display_name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "AppInstallationState.h",
    "line": 105,
    "function": null,
    "comment": "AppInstallationState.h:105:  For a static/global string constant, use a C style string instead: 'char version[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "AppInstallationState.h",
    "line": 107,
    "function": null,
    "comment": "AppInstallationState.h:107:  For a static/global string constant, use a C style string instead: 'char latest_version[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "AppInstallationState.h",
    "line": 109,
    "function": null,
    "comment": "AppInstallationState.h:109:  For a static/global string constant, use a C style string instead: 'char description[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 114,
    "function": null,
    "comment": "AppInstallationState.h:114:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "AppInstallationState.h",
    "line": 117,
    "function": null,
    "comment": "AppInstallationState.h:117:  For a static/global string constant, use a C style string instead: 'char format[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "AppInstallationState.h",
    "line": 122,
    "function": null,
    "comment": "AppInstallationState.h:122:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppInstallationState.h",
    "line": 125,
    "function": null,
    "comment": "AppInstallationState.h:125:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 125,
    "function": null,
    "comment": "AppInstallationState.h:125:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppInstallationState.h",
    "line": 128,
    "function": null,
    "comment": "AppInstallationState.h:128:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppInstallationState.h",
    "line": 129,
    "function": null,
    "comment": "AppInstallationState.h:129:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 132,
    "function": null,
    "comment": "AppInstallationState.h:132:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 134,
    "function": null,
    "comment": "AppInstallationState.h:134:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 136,
    "function": null,
    "comment": "AppInstallationState.h:136:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 137,
    "function": null,
    "comment": "AppInstallationState.h:137:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 138,
    "function": null,
    "comment": "AppInstallationState.h:138:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "AppInstallationState.h",
    "line": 138,
    "function": null,
    "comment": "AppInstallationState.h:138:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 139,
    "function": null,
    "comment": "AppInstallationState.h:139:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppInstallationState.h",
    "line": 145,
    "function": null,
    "comment": "AppInstallationState.h:145:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppInstallationState.h",
    "line": 146,
    "function": null,
    "comment": "AppInstallationState.h:146:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppInstallationState.h",
    "line": 147,
    "function": null,
    "comment": "AppInstallationState.h:147:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 150,
    "function": null,
    "comment": "AppInstallationState.h:150:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 152,
    "function": null,
    "comment": "AppInstallationState.h:152:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 156,
    "function": null,
    "comment": "AppInstallationState.h:156:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppInstallationState.h",
    "line": 157,
    "function": null,
    "comment": "AppInstallationState.h:157:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 157,
    "function": null,
    "comment": "AppInstallationState.h:157:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "AppInstallationState.h",
    "line": 157,
    "function": null,
    "comment": "AppInstallationState.h:157:  Is this a non-const reference? If so, make const or use a pointer: Stream& s  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 158,
    "function": null,
    "comment": "AppInstallationState.h:158:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 161,
    "function": null,
    "comment": "AppInstallationState.h:161:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 165,
    "function": null,
    "comment": "AppInstallationState.h:165:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppInstallationState.h",
    "line": 169,
    "function": null,
    "comment": "AppInstallationState.h:169:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppInstallationState.h",
    "line": 173,
    "function": null,
    "comment": "AppInstallationState.h:173:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppInstallationState.h",
    "line": 179,
    "function": null,
    "comment": "AppInstallationState.h:179:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppInstallationState.h",
    "line": 180,
    "function": null,
    "comment": "AppInstallationState.h:180:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppInstallationState.h",
    "line": 182,
    "function": null,
    "comment": "AppInstallationState.h:182:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "AppInstallationState.h",
    "line": 49,
    "function": null,
    "comment": "AppInstallationState.h:49:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "KeyValue.h",
    "line": null,
    "function": null,
    "comment": "KeyValue.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "KeyValue.h",
    "line": 2,
    "function": null,
    "comment": "KeyValue.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_KEYVALUE_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "KeyValue.h",
    "line": 2,
    "function": null,
    "comment": "KeyValue.h:2:  #ifndef header guard has wrong style, please use: KEYVALUE_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "KeyValue.h",
    "line": 144,
    "function": null,
    "comment": "KeyValue.h:144:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_KEYVALUE_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 1,
    "function": null,
    "comment": "KeyValue.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "KeyValue.h",
    "line": 6,
    "function": null,
    "comment": "KeyValue.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "KeyValue.h",
    "line": 9,
    "function": null,
    "comment": "KeyValue.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 19,
    "function": null,
    "comment": "KeyValue.h:19:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "KeyValue.h",
    "line": 21,
    "function": null,
    "comment": "KeyValue.h:21:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 27,
    "function": null,
    "comment": "KeyValue.h:27:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "KeyValue.h",
    "line": 30,
    "function": null,
    "comment": "KeyValue.h:30:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 33,
    "function": null,
    "comment": "KeyValue.h:33:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 36,
    "function": null,
    "comment": "KeyValue.h:36:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 37,
    "function": null,
    "comment": "KeyValue.h:37:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 39,
    "function": null,
    "comment": "KeyValue.h:39:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 40,
    "function": null,
    "comment": "KeyValue.h:40:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 44,
    "function": null,
    "comment": "KeyValue.h:44:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "KeyValue.h",
    "line": 46,
    "function": null,
    "comment": "KeyValue.h:46:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 54,
    "function": null,
    "comment": "KeyValue.h:54:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 55,
    "function": null,
    "comment": "KeyValue.h:55:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 56,
    "function": null,
    "comment": "KeyValue.h:56:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "KeyValue.h",
    "line": 57,
    "function": null,
    "comment": "KeyValue.h:57:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "KeyValue.h",
    "line": 59,
    "function": null,
    "comment": "KeyValue.h:59:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 62,
    "function": null,
    "comment": "KeyValue.h:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 64,
    "function": null,
    "comment": "KeyValue.h:64:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 65,
    "function": null,
    "comment": "KeyValue.h:65:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 66,
    "function": null,
    "comment": "KeyValue.h:66:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "KeyValue.h",
    "line": 68,
    "function": null,
    "comment": "KeyValue.h:68:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "KeyValue.h",
    "line": 69,
    "function": null,
    "comment": "KeyValue.h:69:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 70,
    "function": null,
    "comment": "KeyValue.h:70:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "KeyValue.h",
    "line": 74,
    "function": null,
    "comment": "KeyValue.h:74:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 74,
    "function": null,
    "comment": "KeyValue.h:74:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "KeyValue.h",
    "line": 80,
    "function": null,
    "comment": "KeyValue.h:80:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "KeyValue.h",
    "line": 81,
    "function": null,
    "comment": "KeyValue.h:81:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 82,
    "function": null,
    "comment": "KeyValue.h:82:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "KeyValue.h",
    "line": 86,
    "function": null,
    "comment": "KeyValue.h:86:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 86,
    "function": null,
    "comment": "KeyValue.h:86:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "KeyValue.h",
    "line": 90,
    "function": null,
    "comment": "KeyValue.h:90:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "KeyValue.h",
    "line": 91,
    "function": null,
    "comment": "KeyValue.h:91:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 92,
    "function": null,
    "comment": "KeyValue.h:92:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "KeyValue.h",
    "line": 93,
    "function": null,
    "comment": "KeyValue.h:93:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "KeyValue.h",
    "line": 94,
    "function": null,
    "comment": "KeyValue.h:94:  For a static/global string constant, use a C style string instead: 'char value[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "KeyValue.h",
    "line": 96,
    "function": null,
    "comment": "KeyValue.h:96:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "KeyValue.h",
    "line": 99,
    "function": null,
    "comment": "KeyValue.h:99:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 99,
    "function": null,
    "comment": "KeyValue.h:99:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "KeyValue.h",
    "line": 102,
    "function": null,
    "comment": "KeyValue.h:102:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "KeyValue.h",
    "line": 103,
    "function": null,
    "comment": "KeyValue.h:103:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 106,
    "function": null,
    "comment": "KeyValue.h:106:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 108,
    "function": null,
    "comment": "KeyValue.h:108:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 110,
    "function": null,
    "comment": "KeyValue.h:110:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 111,
    "function": null,
    "comment": "KeyValue.h:111:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 112,
    "function": null,
    "comment": "KeyValue.h:112:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "KeyValue.h",
    "line": 112,
    "function": null,
    "comment": "KeyValue.h:112:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 113,
    "function": null,
    "comment": "KeyValue.h:113:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "KeyValue.h",
    "line": 119,
    "function": null,
    "comment": "KeyValue.h:119:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "KeyValue.h",
    "line": 120,
    "function": null,
    "comment": "KeyValue.h:120:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "KeyValue.h",
    "line": 121,
    "function": null,
    "comment": "KeyValue.h:121:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 124,
    "function": null,
    "comment": "KeyValue.h:124:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 126,
    "function": null,
    "comment": "KeyValue.h:126:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 130,
    "function": null,
    "comment": "KeyValue.h:130:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "KeyValue.h",
    "line": 131,
    "function": null,
    "comment": "KeyValue.h:131:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 131,
    "function": null,
    "comment": "KeyValue.h:131:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "KeyValue.h",
    "line": 131,
    "function": null,
    "comment": "KeyValue.h:131:  Is this a non-const reference? If so, make const or use a pointer: Stream& s  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "KeyValue.h",
    "line": 132,
    "function": null,
    "comment": "KeyValue.h:132:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 134,
    "function": null,
    "comment": "KeyValue.h:134:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "KeyValue.h",
    "line": 136,
    "function": null,
    "comment": "KeyValue.h:136:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "KeyValue.h",
    "line": 141,
    "function": null,
    "comment": "KeyValue.h:141:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "KeyValue.h",
    "line": 142,
    "function": null,
    "comment": "KeyValue.h:142:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "KeyValue.h",
    "line": 144,
    "function": null,
    "comment": "KeyValue.h:144:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "KeyValue.h",
    "line": 47,
    "function": null,
    "comment": "KeyValue.h:47:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "App.h",
    "line": null,
    "function": null,
    "comment": "App.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "App.h",
    "line": 2,
    "function": null,
    "comment": "App.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_APP_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "App.h",
    "line": 2,
    "function": null,
    "comment": "App.h:2:  #ifndef header guard has wrong style, please use: APP_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "App.h",
    "line": 199,
    "function": null,
    "comment": "App.h:199:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_APP_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 1,
    "function": null,
    "comment": "App.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "App.h",
    "line": 6,
    "function": null,
    "comment": "App.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "App.h",
    "line": 9,
    "function": null,
    "comment": "App.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "App.h",
    "line": 18,
    "function": null,
    "comment": "App.h:18:  Include 'app_manager/ClientApp.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 21,
    "function": null,
    "comment": "App.h:21:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "App.h",
    "line": 23,
    "function": null,
    "comment": "App.h:23:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 31,
    "function": null,
    "comment": "App.h:31:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "App.h",
    "line": 34,
    "function": null,
    "comment": "App.h:34:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 39,
    "function": null,
    "comment": "App.h:39:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 42,
    "function": null,
    "comment": "App.h:42:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 43,
    "function": null,
    "comment": "App.h:43:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 45,
    "function": null,
    "comment": "App.h:45:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 46,
    "function": null,
    "comment": "App.h:46:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use 2 spaces for indentation.",
    "file": "App.h",
    "line": 49,
    "function": null,
    "comment": "App.h:49:  Weird number of spaces at line-start.  Are you using a 2-space indent?  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","indentation"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 51,
    "function": null,
    "comment": "App.h:51:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 52,
    "function": null,
    "comment": "App.h:52:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 56,
    "function": null,
    "comment": "App.h:56:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "App.h",
    "line": 58,
    "function": null,
    "comment": "App.h:58:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 66,
    "function": null,
    "comment": "App.h:66:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 67,
    "function": null,
    "comment": "App.h:67:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 68,
    "function": null,
    "comment": "App.h:68:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "App.h",
    "line": 69,
    "function": null,
    "comment": "App.h:69:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "App.h",
    "line": 71,
    "function": null,
    "comment": "App.h:71:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 74,
    "function": null,
    "comment": "App.h:74:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 76,
    "function": null,
    "comment": "App.h:76:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 77,
    "function": null,
    "comment": "App.h:77:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 78,
    "function": null,
    "comment": "App.h:78:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "App.h",
    "line": 80,
    "function": null,
    "comment": "App.h:80:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "App.h",
    "line": 81,
    "function": null,
    "comment": "App.h:81:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 82,
    "function": null,
    "comment": "App.h:82:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "App.h",
    "line": 86,
    "function": null,
    "comment": "App.h:86:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 86,
    "function": null,
    "comment": "App.h:86:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "App.h",
    "line": 92,
    "function": null,
    "comment": "App.h:92:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "App.h",
    "line": 93,
    "function": null,
    "comment": "App.h:93:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 94,
    "function": null,
    "comment": "App.h:94:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "App.h",
    "line": 98,
    "function": null,
    "comment": "App.h:98:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 98,
    "function": null,
    "comment": "App.h:98:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "App.h",
    "line": 102,
    "function": null,
    "comment": "App.h:102:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "App.h",
    "line": 103,
    "function": null,
    "comment": "App.h:103:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 104,
    "function": null,
    "comment": "App.h:104:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "App.h",
    "line": 105,
    "function": null,
    "comment": "App.h:105:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "App.h",
    "line": 106,
    "function": null,
    "comment": "App.h:106:  For a static/global string constant, use a C style string instead: 'char name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "App.h",
    "line": 108,
    "function": null,
    "comment": "App.h:108:  For a static/global string constant, use a C style string instead: 'char display_name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 111,
    "function": null,
    "comment": "App.h:111:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "App.h",
    "line": 111,
    "function": null,
    "comment": "App.h:111:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 114,
    "function": null,
    "comment": "App.h:114:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "App.h",
    "line": 117,
    "function": null,
    "comment": "App.h:117:  For a static/global string constant, use a C style string instead: 'char format[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 122,
    "function": null,
    "comment": "App.h:122:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "App.h",
    "line": 125,
    "function": null,
    "comment": "App.h:125:  For a static/global string constant, use a C style string instead: 'char client_type[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 127,
    "function": null,
    "comment": "App.h:127:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 133,
    "function": null,
    "comment": "App.h:133:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "App.h",
    "line": 135,
    "function": null,
    "comment": "App.h:135:  For a static/global string constant, use a C style string instead: 'char key[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "App.h",
    "line": 136,
    "function": null,
    "comment": "App.h:136:  For a static/global string constant, use a C style string instead: 'char value[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "App.h",
    "line": 138,
    "function": null,
    "comment": "App.h:138:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "App.h",
    "line": 141,
    "function": null,
    "comment": "App.h:141:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 141,
    "function": null,
    "comment": "App.h:141:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "App.h",
    "line": 144,
    "function": null,
    "comment": "App.h:144:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "App.h",
    "line": 145,
    "function": null,
    "comment": "App.h:145:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 148,
    "function": null,
    "comment": "App.h:148:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 150,
    "function": null,
    "comment": "App.h:150:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 152,
    "function": null,
    "comment": "App.h:152:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 153,
    "function": null,
    "comment": "App.h:153:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 154,
    "function": null,
    "comment": "App.h:154:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "App.h",
    "line": 154,
    "function": null,
    "comment": "App.h:154:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 155,
    "function": null,
    "comment": "App.h:155:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "App.h",
    "line": 163,
    "function": null,
    "comment": "App.h:163:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "App.h",
    "line": 164,
    "function": null,
    "comment": "App.h:164:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "App.h",
    "line": 165,
    "function": null,
    "comment": "App.h:165:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 168,
    "function": null,
    "comment": "App.h:168:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 170,
    "function": null,
    "comment": "App.h:170:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 174,
    "function": null,
    "comment": "App.h:174:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "App.h",
    "line": 175,
    "function": null,
    "comment": "App.h:175:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 175,
    "function": null,
    "comment": "App.h:175:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "App.h",
    "line": 175,
    "function": null,
    "comment": "App.h:175:  Is this a non-const reference? If so, make const or use a pointer: Stream& s  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 176,
    "function": null,
    "comment": "App.h:176:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 178,
    "function": null,
    "comment": "App.h:178:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 180,
    "function": null,
    "comment": "App.h:180:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 183,
    "function": null,
    "comment": "App.h:183:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "App.h",
    "line": 186,
    "function": null,
    "comment": "App.h:186:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "App.h",
    "line": 190,
    "function": null,
    "comment": "App.h:190:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "App.h",
    "line": 196,
    "function": null,
    "comment": "App.h:196:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "App.h",
    "line": 197,
    "function": null,
    "comment": "App.h:197:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "App.h",
    "line": 199,
    "function": null,
    "comment": "App.h:199:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "App.h",
    "line": 59,
    "function": null,
    "comment": "App.h:59:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "Icon.h",
    "line": null,
    "function": null,
    "comment": "Icon.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "Icon.h",
    "line": 2,
    "function": null,
    "comment": "Icon.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_ICON_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "Icon.h",
    "line": 2,
    "function": null,
    "comment": "Icon.h:2:  #ifndef header guard has wrong style, please use: ICON_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "Icon.h",
    "line": 151,
    "function": null,
    "comment": "Icon.h:151:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_ICON_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 1,
    "function": null,
    "comment": "Icon.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "Icon.h",
    "line": 6,
    "function": null,
    "comment": "Icon.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "Icon.h",
    "line": 9,
    "function": null,
    "comment": "Icon.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 19,
    "function": null,
    "comment": "Icon.h:19:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "Icon.h",
    "line": 21,
    "function": null,
    "comment": "Icon.h:21:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 27,
    "function": null,
    "comment": "Icon.h:27:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "Icon.h",
    "line": 30,
    "function": null,
    "comment": "Icon.h:30:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 33,
    "function": null,
    "comment": "Icon.h:33:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 36,
    "function": null,
    "comment": "Icon.h:36:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 37,
    "function": null,
    "comment": "Icon.h:37:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 39,
    "function": null,
    "comment": "Icon.h:39:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 40,
    "function": null,
    "comment": "Icon.h:40:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 44,
    "function": null,
    "comment": "Icon.h:44:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "Icon.h",
    "line": 46,
    "function": null,
    "comment": "Icon.h:46:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 54,
    "function": null,
    "comment": "Icon.h:54:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 55,
    "function": null,
    "comment": "Icon.h:55:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 56,
    "function": null,
    "comment": "Icon.h:56:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "Icon.h",
    "line": 57,
    "function": null,
    "comment": "Icon.h:57:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "Icon.h",
    "line": 59,
    "function": null,
    "comment": "Icon.h:59:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 62,
    "function": null,
    "comment": "Icon.h:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 64,
    "function": null,
    "comment": "Icon.h:64:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 65,
    "function": null,
    "comment": "Icon.h:65:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 66,
    "function": null,
    "comment": "Icon.h:66:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "Icon.h",
    "line": 68,
    "function": null,
    "comment": "Icon.h:68:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "Icon.h",
    "line": 69,
    "function": null,
    "comment": "Icon.h:69:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 70,
    "function": null,
    "comment": "Icon.h:70:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "Icon.h",
    "line": 74,
    "function": null,
    "comment": "Icon.h:74:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 74,
    "function": null,
    "comment": "Icon.h:74:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "Icon.h",
    "line": 80,
    "function": null,
    "comment": "Icon.h:80:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "Icon.h",
    "line": 81,
    "function": null,
    "comment": "Icon.h:81:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 82,
    "function": null,
    "comment": "Icon.h:82:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "Icon.h",
    "line": 86,
    "function": null,
    "comment": "Icon.h:86:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 86,
    "function": null,
    "comment": "Icon.h:86:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "Icon.h",
    "line": 90,
    "function": null,
    "comment": "Icon.h:90:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "Icon.h",
    "line": 91,
    "function": null,
    "comment": "Icon.h:91:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 92,
    "function": null,
    "comment": "Icon.h:92:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "Icon.h",
    "line": 93,
    "function": null,
    "comment": "Icon.h:93:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not use alternative tokens instead of operators (e.g. 'and', 'or').",
    "file": "Icon.h",
    "line": 93,
    "function": null,
    "comment": "Icon.h:93:  Use operator || instead of or  [readability/alt_tokens] [2]",
    "tags": ["code-standards","google-cpp","operators","tokens","alternative-tokens"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "Icon.h",
    "line": 94,
    "function": null,
    "comment": "Icon.h:94:  For a static/global string constant, use a C style string instead: 'char format[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "Icon.h",
    "line": 99,
    "function": null,
    "comment": "Icon.h:99:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "Icon.h",
    "line": 102,
    "function": null,
    "comment": "Icon.h:102:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 102,
    "function": null,
    "comment": "Icon.h:102:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "Icon.h",
    "line": 105,
    "function": null,
    "comment": "Icon.h:105:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "Icon.h",
    "line": 106,
    "function": null,
    "comment": "Icon.h:106:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 109,
    "function": null,
    "comment": "Icon.h:109:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 111,
    "function": null,
    "comment": "Icon.h:111:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 113,
    "function": null,
    "comment": "Icon.h:113:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 114,
    "function": null,
    "comment": "Icon.h:114:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 115,
    "function": null,
    "comment": "Icon.h:115:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "Icon.h",
    "line": 115,
    "function": null,
    "comment": "Icon.h:115:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 116,
    "function": null,
    "comment": "Icon.h:116:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "Icon.h",
    "line": 122,
    "function": null,
    "comment": "Icon.h:122:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "Icon.h",
    "line": 123,
    "function": null,
    "comment": "Icon.h:123:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "Icon.h",
    "line": 124,
    "function": null,
    "comment": "Icon.h:124:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 127,
    "function": null,
    "comment": "Icon.h:127:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 129,
    "function": null,
    "comment": "Icon.h:129:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 133,
    "function": null,
    "comment": "Icon.h:133:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "Icon.h",
    "line": 134,
    "function": null,
    "comment": "Icon.h:134:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 134,
    "function": null,
    "comment": "Icon.h:134:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "Icon.h",
    "line": 134,
    "function": null,
    "comment": "Icon.h:134:  Is this a non-const reference? If so, make const or use a pointer: Stream& s  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 135,
    "function": null,
    "comment": "Icon.h:135:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "Icon.h",
    "line": 137,
    "function": null,
    "comment": "Icon.h:137:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "Icon.h",
    "line": 140,
    "function": null,
    "comment": "Icon.h:140:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "Icon.h",
    "line": 148,
    "function": null,
    "comment": "Icon.h:148:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "Icon.h",
    "line": 149,
    "function": null,
    "comment": "Icon.h:149:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "Icon.h",
    "line": 151,
    "function": null,
    "comment": "Icon.h:151:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "Icon.h",
    "line": 47,
    "function": null,
    "comment": "Icon.h:47:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "StatusCodes.h",
    "line": null,
    "function": null,
    "comment": "StatusCodes.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "StatusCodes.h",
    "line": 2,
    "function": null,
    "comment": "StatusCodes.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_STATUSCODES_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "StatusCodes.h",
    "line": 2,
    "function": null,
    "comment": "StatusCodes.h:2:  #ifndef header guard has wrong style, please use: STATUSCODES_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "StatusCodes.h",
    "line": 148,
    "function": null,
    "comment": "StatusCodes.h:148:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_STATUSCODES_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 1,
    "function": null,
    "comment": "StatusCodes.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "StatusCodes.h",
    "line": 6,
    "function": null,
    "comment": "StatusCodes.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "StatusCodes.h",
    "line": 9,
    "function": null,
    "comment": "StatusCodes.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 19,
    "function": null,
    "comment": "StatusCodes.h:19:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StatusCodes.h",
    "line": 21,
    "function": null,
    "comment": "StatusCodes.h:21:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 25,
    "function": null,
    "comment": "StatusCodes.h:25:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "StatusCodes.h",
    "line": 28,
    "function": null,
    "comment": "StatusCodes.h:28:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 29,
    "function": null,
    "comment": "StatusCodes.h:29:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 40,
    "function": null,
    "comment": "StatusCodes.h:40:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 41,
    "function": null,
    "comment": "StatusCodes.h:41:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StatusCodes.h",
    "line": 43,
    "function": null,
    "comment": "StatusCodes.h:43:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 47,
    "function": null,
    "comment": "StatusCodes.h:47:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 51,
    "function": null,
    "comment": "StatusCodes.h:51:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 52,
    "function": null,
    "comment": "StatusCodes.h:52:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 53,
    "function": null,
    "comment": "StatusCodes.h:53:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "StatusCodes.h",
    "line": 54,
    "function": null,
    "comment": "StatusCodes.h:54:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StatusCodes.h",
    "line": 56,
    "function": null,
    "comment": "StatusCodes.h:56:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 59,
    "function": null,
    "comment": "StatusCodes.h:59:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 61,
    "function": null,
    "comment": "StatusCodes.h:61:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 62,
    "function": null,
    "comment": "StatusCodes.h:62:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 63,
    "function": null,
    "comment": "StatusCodes.h:63:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StatusCodes.h",
    "line": 65,
    "function": null,
    "comment": "StatusCodes.h:65:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StatusCodes.h",
    "line": 66,
    "function": null,
    "comment": "StatusCodes.h:66:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 67,
    "function": null,
    "comment": "StatusCodes.h:67:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StatusCodes.h",
    "line": 71,
    "function": null,
    "comment": "StatusCodes.h:71:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 71,
    "function": null,
    "comment": "StatusCodes.h:71:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StatusCodes.h",
    "line": 77,
    "function": null,
    "comment": "StatusCodes.h:77:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StatusCodes.h",
    "line": 78,
    "function": null,
    "comment": "StatusCodes.h:78:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 79,
    "function": null,
    "comment": "StatusCodes.h:79:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StatusCodes.h",
    "line": 83,
    "function": null,
    "comment": "StatusCodes.h:83:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 83,
    "function": null,
    "comment": "StatusCodes.h:83:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "StatusCodes.h",
    "line": 87,
    "function": null,
    "comment": "StatusCodes.h:87:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StatusCodes.h",
    "line": 88,
    "function": null,
    "comment": "StatusCodes.h:88:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 89,
    "function": null,
    "comment": "StatusCodes.h:89:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "StatusCodes.h",
    "line": 90,
    "function": null,
    "comment": "StatusCodes.h:90:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 102,
    "function": null,
    "comment": "StatusCodes.h:102:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "StatusCodes.h",
    "line": 105,
    "function": null,
    "comment": "StatusCodes.h:105:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StatusCodes.h",
    "line": 108,
    "function": null,
    "comment": "StatusCodes.h:108:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 108,
    "function": null,
    "comment": "StatusCodes.h:108:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 111,
    "function": null,
    "comment": "StatusCodes.h:111:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StatusCodes.h",
    "line": 112,
    "function": null,
    "comment": "StatusCodes.h:112:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StatusCodes.h",
    "line": 113,
    "function": null,
    "comment": "StatusCodes.h:113:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 116,
    "function": null,
    "comment": "StatusCodes.h:116:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 118,
    "function": null,
    "comment": "StatusCodes.h:118:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 120,
    "function": null,
    "comment": "StatusCodes.h:120:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 121,
    "function": null,
    "comment": "StatusCodes.h:121:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 122,
    "function": null,
    "comment": "StatusCodes.h:122:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "StatusCodes.h",
    "line": 122,
    "function": null,
    "comment": "StatusCodes.h:122:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 123,
    "function": null,
    "comment": "StatusCodes.h:123:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StatusCodes.h",
    "line": 127,
    "function": null,
    "comment": "StatusCodes.h:127:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StatusCodes.h",
    "line": 128,
    "function": null,
    "comment": "StatusCodes.h:128:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StatusCodes.h",
    "line": 129,
    "function": null,
    "comment": "StatusCodes.h:129:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 132,
    "function": null,
    "comment": "StatusCodes.h:132:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 134,
    "function": null,
    "comment": "StatusCodes.h:134:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 138,
    "function": null,
    "comment": "StatusCodes.h:138:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "StatusCodes.h",
    "line": 139,
    "function": null,
    "comment": "StatusCodes.h:139:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "StatusCodes.h",
    "line": 139,
    "function": null,
    "comment": "StatusCodes.h:139:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "StatusCodes.h",
    "line": 139,
    "function": null,
    "comment": "StatusCodes.h:139:  Is this a non-const reference? If so, make const or use a pointer: Stream& s  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "StatusCodes.h",
    "line": 140,
    "function": null,
    "comment": "StatusCodes.h:140:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StatusCodes.h",
    "line": 145,
    "function": null,
    "comment": "StatusCodes.h:145:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StatusCodes.h",
    "line": 146,
    "function": null,
    "comment": "StatusCodes.h:146:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "StatusCodes.h",
    "line": 148,
    "function": null,
    "comment": "StatusCodes.h:148:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "StatusCodes.h",
    "line": 44,
    "function": null,
    "comment": "StatusCodes.h:44:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "ExchangeApp.h",
    "line": null,
    "function": null,
    "comment": "ExchangeApp.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "ExchangeApp.h",
    "line": 2,
    "function": null,
    "comment": "ExchangeApp.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_EXCHANGEAPP_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "ExchangeApp.h",
    "line": 2,
    "function": null,
    "comment": "ExchangeApp.h:2:  #ifndef header guard has wrong style, please use: EXCHANGEAPP_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "ExchangeApp.h",
    "line": 205,
    "function": null,
    "comment": "ExchangeApp.h:205:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_EXCHANGEAPP_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 1,
    "function": null,
    "comment": "ExchangeApp.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "ExchangeApp.h",
    "line": 6,
    "function": null,
    "comment": "ExchangeApp.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "ExchangeApp.h",
    "line": 9,
    "function": null,
    "comment": "ExchangeApp.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 20,
    "function": null,
    "comment": "ExchangeApp.h:20:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ExchangeApp.h",
    "line": 22,
    "function": null,
    "comment": "ExchangeApp.h:22:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 33,
    "function": null,
    "comment": "ExchangeApp.h:33:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "ExchangeApp.h",
    "line": 36,
    "function": null,
    "comment": "ExchangeApp.h:36:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 44,
    "function": null,
    "comment": "ExchangeApp.h:44:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 47,
    "function": null,
    "comment": "ExchangeApp.h:47:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 48,
    "function": null,
    "comment": "ExchangeApp.h:48:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 50,
    "function": null,
    "comment": "ExchangeApp.h:50:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 51,
    "function": null,
    "comment": "ExchangeApp.h:51:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 53,
    "function": null,
    "comment": "ExchangeApp.h:53:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 54,
    "function": null,
    "comment": "ExchangeApp.h:54:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 56,
    "function": null,
    "comment": "ExchangeApp.h:56:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 57,
    "function": null,
    "comment": "ExchangeApp.h:57:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 59,
    "function": null,
    "comment": "ExchangeApp.h:59:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 60,
    "function": null,
    "comment": "ExchangeApp.h:60:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use 2 spaces for indentation.",
    "file": "ExchangeApp.h",
    "line": 63,
    "function": null,
    "comment": "ExchangeApp.h:63:  Weird number of spaces at line-start.  Are you using a 2-space indent?  [whitespace/indent] [3]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","indentation"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 69,
    "function": null,
    "comment": "ExchangeApp.h:69:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 70,
    "function": null,
    "comment": "ExchangeApp.h:70:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ExchangeApp.h",
    "line": 72,
    "function": null,
    "comment": "ExchangeApp.h:72:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 76,
    "function": null,
    "comment": "ExchangeApp.h:76:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 80,
    "function": null,
    "comment": "ExchangeApp.h:80:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 81,
    "function": null,
    "comment": "ExchangeApp.h:81:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 82,
    "function": null,
    "comment": "ExchangeApp.h:82:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "ExchangeApp.h",
    "line": 83,
    "function": null,
    "comment": "ExchangeApp.h:83:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ExchangeApp.h",
    "line": 85,
    "function": null,
    "comment": "ExchangeApp.h:85:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 88,
    "function": null,
    "comment": "ExchangeApp.h:88:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 90,
    "function": null,
    "comment": "ExchangeApp.h:90:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 91,
    "function": null,
    "comment": "ExchangeApp.h:91:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 92,
    "function": null,
    "comment": "ExchangeApp.h:92:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ExchangeApp.h",
    "line": 94,
    "function": null,
    "comment": "ExchangeApp.h:94:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ExchangeApp.h",
    "line": 95,
    "function": null,
    "comment": "ExchangeApp.h:95:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 96,
    "function": null,
    "comment": "ExchangeApp.h:96:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ExchangeApp.h",
    "line": 100,
    "function": null,
    "comment": "ExchangeApp.h:100:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 100,
    "function": null,
    "comment": "ExchangeApp.h:100:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ExchangeApp.h",
    "line": 106,
    "function": null,
    "comment": "ExchangeApp.h:106:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ExchangeApp.h",
    "line": 107,
    "function": null,
    "comment": "ExchangeApp.h:107:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 108,
    "function": null,
    "comment": "ExchangeApp.h:108:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ExchangeApp.h",
    "line": 112,
    "function": null,
    "comment": "ExchangeApp.h:112:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 112,
    "function": null,
    "comment": "ExchangeApp.h:112:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ExchangeApp.h",
    "line": 116,
    "function": null,
    "comment": "ExchangeApp.h:116:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ExchangeApp.h",
    "line": 117,
    "function": null,
    "comment": "ExchangeApp.h:117:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 118,
    "function": null,
    "comment": "ExchangeApp.h:118:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "ExchangeApp.h",
    "line": 119,
    "function": null,
    "comment": "ExchangeApp.h:119:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ExchangeApp.h",
    "line": 120,
    "function": null,
    "comment": "ExchangeApp.h:120:  For a static/global string constant, use a C style string instead: 'char name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ExchangeApp.h",
    "line": 122,
    "function": null,
    "comment": "ExchangeApp.h:122:  For a static/global string constant, use a C style string instead: 'char display_name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ExchangeApp.h",
    "line": 124,
    "function": null,
    "comment": "ExchangeApp.h:124:  For a static/global string constant, use a C style string instead: 'char version[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ExchangeApp.h",
    "line": 126,
    "function": null,
    "comment": "ExchangeApp.h:126:  For a static/global string constant, use a C style string instead: 'char latest_version[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ExchangeApp.h",
    "line": 128,
    "function": null,
    "comment": "ExchangeApp.h:128:  For a static/global string constant, use a C style string instead: 'char description[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 133,
    "function": null,
    "comment": "ExchangeApp.h:133:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ExchangeApp.h",
    "line": 136,
    "function": null,
    "comment": "ExchangeApp.h:136:  For a static/global string constant, use a C style string instead: 'char format[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "ExchangeApp.h",
    "line": 141,
    "function": null,
    "comment": "ExchangeApp.h:141:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ExchangeApp.h",
    "line": 144,
    "function": null,
    "comment": "ExchangeApp.h:144:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 144,
    "function": null,
    "comment": "ExchangeApp.h:144:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ExchangeApp.h",
    "line": 147,
    "function": null,
    "comment": "ExchangeApp.h:147:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ExchangeApp.h",
    "line": 148,
    "function": null,
    "comment": "ExchangeApp.h:148:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 151,
    "function": null,
    "comment": "ExchangeApp.h:151:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 153,
    "function": null,
    "comment": "ExchangeApp.h:153:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 155,
    "function": null,
    "comment": "ExchangeApp.h:155:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 156,
    "function": null,
    "comment": "ExchangeApp.h:156:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 157,
    "function": null,
    "comment": "ExchangeApp.h:157:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "ExchangeApp.h",
    "line": 157,
    "function": null,
    "comment": "ExchangeApp.h:157:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 158,
    "function": null,
    "comment": "ExchangeApp.h:158:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ExchangeApp.h",
    "line": 169,
    "function": null,
    "comment": "ExchangeApp.h:169:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ExchangeApp.h",
    "line": 170,
    "function": null,
    "comment": "ExchangeApp.h:170:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ExchangeApp.h",
    "line": 171,
    "function": null,
    "comment": "ExchangeApp.h:171:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 174,
    "function": null,
    "comment": "ExchangeApp.h:174:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 176,
    "function": null,
    "comment": "ExchangeApp.h:176:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 180,
    "function": null,
    "comment": "ExchangeApp.h:180:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ExchangeApp.h",
    "line": 181,
    "function": null,
    "comment": "ExchangeApp.h:181:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 181,
    "function": null,
    "comment": "ExchangeApp.h:181:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "ExchangeApp.h",
    "line": 181,
    "function": null,
    "comment": "ExchangeApp.h:181:  Is this a non-const reference? If so, make const or use a pointer: Stream& s  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ExchangeApp.h",
    "line": 182,
    "function": null,
    "comment": "ExchangeApp.h:182:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 184,
    "function": null,
    "comment": "ExchangeApp.h:184:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 186,
    "function": null,
    "comment": "ExchangeApp.h:186:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 188,
    "function": null,
    "comment": "ExchangeApp.h:188:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 190,
    "function": null,
    "comment": "ExchangeApp.h:190:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 192,
    "function": null,
    "comment": "ExchangeApp.h:192:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ExchangeApp.h",
    "line": 195,
    "function": null,
    "comment": "ExchangeApp.h:195:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ExchangeApp.h",
    "line": 202,
    "function": null,
    "comment": "ExchangeApp.h:202:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ExchangeApp.h",
    "line": 203,
    "function": null,
    "comment": "ExchangeApp.h:203:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ExchangeApp.h",
    "line": 205,
    "function": null,
    "comment": "ExchangeApp.h:205:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "ExchangeApp.h",
    "line": 73,
    "function": null,
    "comment": "ExchangeApp.h:73:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "AppStatus.h",
    "line": null,
    "function": null,
    "comment": "AppStatus.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "AppStatus.h",
    "line": 2,
    "function": null,
    "comment": "AppStatus.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_APPSTATUS_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "AppStatus.h",
    "line": 2,
    "function": null,
    "comment": "AppStatus.h:2:  #ifndef header guard has wrong style, please use: APPSTATUS_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "AppStatus.h",
    "line": 152,
    "function": null,
    "comment": "AppStatus.h:152:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_APPSTATUS_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 1,
    "function": null,
    "comment": "AppStatus.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "AppStatus.h",
    "line": 6,
    "function": null,
    "comment": "AppStatus.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "AppStatus.h",
    "line": 9,
    "function": null,
    "comment": "AppStatus.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 19,
    "function": null,
    "comment": "AppStatus.h:19:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "AppStatus.h",
    "line": 21,
    "function": null,
    "comment": "AppStatus.h:21:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 27,
    "function": null,
    "comment": "AppStatus.h:27:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "AppStatus.h",
    "line": 30,
    "function": null,
    "comment": "AppStatus.h:30:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 33,
    "function": null,
    "comment": "AppStatus.h:33:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 39,
    "function": null,
    "comment": "AppStatus.h:39:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 40,
    "function": null,
    "comment": "AppStatus.h:40:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 46,
    "function": null,
    "comment": "AppStatus.h:46:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 47,
    "function": null,
    "comment": "AppStatus.h:47:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppStatus.h",
    "line": 49,
    "function": null,
    "comment": "AppStatus.h:49:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 57,
    "function": null,
    "comment": "AppStatus.h:57:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 58,
    "function": null,
    "comment": "AppStatus.h:58:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 59,
    "function": null,
    "comment": "AppStatus.h:59:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "AppStatus.h",
    "line": 60,
    "function": null,
    "comment": "AppStatus.h:60:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppStatus.h",
    "line": 62,
    "function": null,
    "comment": "AppStatus.h:62:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 65,
    "function": null,
    "comment": "AppStatus.h:65:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 67,
    "function": null,
    "comment": "AppStatus.h:67:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 68,
    "function": null,
    "comment": "AppStatus.h:68:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 69,
    "function": null,
    "comment": "AppStatus.h:69:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "AppStatus.h",
    "line": 71,
    "function": null,
    "comment": "AppStatus.h:71:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppStatus.h",
    "line": 72,
    "function": null,
    "comment": "AppStatus.h:72:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 73,
    "function": null,
    "comment": "AppStatus.h:73:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppStatus.h",
    "line": 77,
    "function": null,
    "comment": "AppStatus.h:77:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 77,
    "function": null,
    "comment": "AppStatus.h:77:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "AppStatus.h",
    "line": 83,
    "function": null,
    "comment": "AppStatus.h:83:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppStatus.h",
    "line": 84,
    "function": null,
    "comment": "AppStatus.h:84:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 85,
    "function": null,
    "comment": "AppStatus.h:85:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppStatus.h",
    "line": 89,
    "function": null,
    "comment": "AppStatus.h:89:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 89,
    "function": null,
    "comment": "AppStatus.h:89:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "AppStatus.h",
    "line": 93,
    "function": null,
    "comment": "AppStatus.h:93:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppStatus.h",
    "line": 94,
    "function": null,
    "comment": "AppStatus.h:94:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 95,
    "function": null,
    "comment": "AppStatus.h:95:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "AppStatus.h",
    "line": 96,
    "function": null,
    "comment": "AppStatus.h:96:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "AppStatus.h",
    "line": 96,
    "function": null,
    "comment": "AppStatus.h:96:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "AppStatus.h",
    "line": 97,
    "function": null,
    "comment": "AppStatus.h:97:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Assignment operators should be preceeded and followed by whitespace.",
    "file": "AppStatus.h",
    "line": 98,
    "function": null,
    "comment": "AppStatus.h:98:  Missing spaces around =  [whitespace/operators] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","assignment"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "AppStatus.h",
    "line": 102,
    "function": null,
    "comment": "AppStatus.h:102:  For a static/global string constant, use a C style string instead: 'char status[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "AppStatus.h",
    "line": 104,
    "function": null,
    "comment": "AppStatus.h:104:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppStatus.h",
    "line": 107,
    "function": null,
    "comment": "AppStatus.h:107:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 107,
    "function": null,
    "comment": "AppStatus.h:107:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppStatus.h",
    "line": 110,
    "function": null,
    "comment": "AppStatus.h:110:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppStatus.h",
    "line": 111,
    "function": null,
    "comment": "AppStatus.h:111:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 114,
    "function": null,
    "comment": "AppStatus.h:114:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 116,
    "function": null,
    "comment": "AppStatus.h:116:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 118,
    "function": null,
    "comment": "AppStatus.h:118:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 119,
    "function": null,
    "comment": "AppStatus.h:119:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 120,
    "function": null,
    "comment": "AppStatus.h:120:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "AppStatus.h",
    "line": 120,
    "function": null,
    "comment": "AppStatus.h:120:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 121,
    "function": null,
    "comment": "AppStatus.h:121:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppStatus.h",
    "line": 127,
    "function": null,
    "comment": "AppStatus.h:127:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppStatus.h",
    "line": 128,
    "function": null,
    "comment": "AppStatus.h:128:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppStatus.h",
    "line": 129,
    "function": null,
    "comment": "AppStatus.h:129:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 132,
    "function": null,
    "comment": "AppStatus.h:132:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 134,
    "function": null,
    "comment": "AppStatus.h:134:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 138,
    "function": null,
    "comment": "AppStatus.h:138:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppStatus.h",
    "line": 139,
    "function": null,
    "comment": "AppStatus.h:139:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 139,
    "function": null,
    "comment": "AppStatus.h:139:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "AppStatus.h",
    "line": 139,
    "function": null,
    "comment": "AppStatus.h:139:  Is this a non-const reference? If so, make const or use a pointer: Stream& s  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppStatus.h",
    "line": 140,
    "function": null,
    "comment": "AppStatus.h:140:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppStatus.h",
    "line": 144,
    "function": null,
    "comment": "AppStatus.h:144:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppStatus.h",
    "line": 149,
    "function": null,
    "comment": "AppStatus.h:149:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppStatus.h",
    "line": 150,
    "function": null,
    "comment": "AppStatus.h:150:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppStatus.h",
    "line": 152,
    "function": null,
    "comment": "AppStatus.h:152:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "AppStatus.h",
    "line": 50,
    "function": null,
    "comment": "AppStatus.h:50:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "AppList.h",
    "line": null,
    "function": null,
    "comment": "AppList.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "AppList.h",
    "line": 2,
    "function": null,
    "comment": "AppList.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_APPLIST_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "AppList.h",
    "line": 2,
    "function": null,
    "comment": "AppList.h:2:  #ifndef header guard has wrong style, please use: APPLIST_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "AppList.h",
    "line": 193,
    "function": null,
    "comment": "AppList.h:193:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_APPLIST_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 1,
    "function": null,
    "comment": "AppList.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "AppList.h",
    "line": 6,
    "function": null,
    "comment": "AppList.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "AppList.h",
    "line": 9,
    "function": null,
    "comment": "AppList.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not include the same file twice.",
    "file": "AppList.h",
    "line": 18,
    "function": null,
    "comment": "AppList.h:18:  'app_manager/App.h' already included at AppList.h:17  [build/include] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 21,
    "function": null,
    "comment": "AppList.h:21:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "AppList.h",
    "line": 23,
    "function": null,
    "comment": "AppList.h:23:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 29,
    "function": null,
    "comment": "AppList.h:29:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "AppList.h",
    "line": 32,
    "function": null,
    "comment": "AppList.h:32:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 35,
    "function": null,
    "comment": "AppList.h:35:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 38,
    "function": null,
    "comment": "AppList.h:38:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 39,
    "function": null,
    "comment": "AppList.h:39:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 41,
    "function": null,
    "comment": "AppList.h:41:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 42,
    "function": null,
    "comment": "AppList.h:42:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 46,
    "function": null,
    "comment": "AppList.h:46:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppList.h",
    "line": 48,
    "function": null,
    "comment": "AppList.h:48:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 56,
    "function": null,
    "comment": "AppList.h:56:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 57,
    "function": null,
    "comment": "AppList.h:57:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 58,
    "function": null,
    "comment": "AppList.h:58:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "AppList.h",
    "line": 59,
    "function": null,
    "comment": "AppList.h:59:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppList.h",
    "line": 61,
    "function": null,
    "comment": "AppList.h:61:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 64,
    "function": null,
    "comment": "AppList.h:64:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 66,
    "function": null,
    "comment": "AppList.h:66:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 67,
    "function": null,
    "comment": "AppList.h:67:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 68,
    "function": null,
    "comment": "AppList.h:68:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "AppList.h",
    "line": 70,
    "function": null,
    "comment": "AppList.h:70:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppList.h",
    "line": 71,
    "function": null,
    "comment": "AppList.h:71:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 72,
    "function": null,
    "comment": "AppList.h:72:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppList.h",
    "line": 76,
    "function": null,
    "comment": "AppList.h:76:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 76,
    "function": null,
    "comment": "AppList.h:76:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "AppList.h",
    "line": 82,
    "function": null,
    "comment": "AppList.h:82:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppList.h",
    "line": 83,
    "function": null,
    "comment": "AppList.h:83:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 84,
    "function": null,
    "comment": "AppList.h:84:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppList.h",
    "line": 88,
    "function": null,
    "comment": "AppList.h:88:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 88,
    "function": null,
    "comment": "AppList.h:88:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "AppList.h",
    "line": 92,
    "function": null,
    "comment": "AppList.h:92:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppList.h",
    "line": 93,
    "function": null,
    "comment": "AppList.h:93:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 94,
    "function": null,
    "comment": "AppList.h:94:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "AppList.h",
    "line": 95,
    "function": null,
    "comment": "AppList.h:95:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 98,
    "function": null,
    "comment": "AppList.h:98:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "AppList.h",
    "line": 101,
    "function": null,
    "comment": "AppList.h:101:  For a static/global string constant, use a C style string instead: 'char name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "AppList.h",
    "line": 103,
    "function": null,
    "comment": "AppList.h:103:  For a static/global string constant, use a C style string instead: 'char display_name[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 106,
    "function": null,
    "comment": "AppList.h:106:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "There should never be a space before a ( when it is a function argument. Closing parenthesis should not be preceded only by whitespaces.",
    "file": "AppList.h",
    "line": 106,
    "function": null,
    "comment": "AppList.h:106:  Extra space before ( in function call  [whitespace/parens] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp","parenthesis"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 109,
    "function": null,
    "comment": "AppList.h:109:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "AppList.h",
    "line": 112,
    "function": null,
    "comment": "AppList.h:112:  For a static/global string constant, use a C style string instead: 'char format[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 117,
    "function": null,
    "comment": "AppList.h:117:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "AppList.h",
    "line": 120,
    "function": null,
    "comment": "AppList.h:120:  For a static/global string constant, use a C style string instead: 'char client_type[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 122,
    "function": null,
    "comment": "AppList.h:122:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 128,
    "function": null,
    "comment": "AppList.h:128:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "AppList.h",
    "line": 130,
    "function": null,
    "comment": "AppList.h:130:  For a static/global string constant, use a C style string instead: 'char key[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "AppList.h",
    "line": 131,
    "function": null,
    "comment": "AppList.h:131:  For a static/global string constant, use a C style string instead: 'char value[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "AppList.h",
    "line": 133,
    "function": null,
    "comment": "AppList.h:133:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppList.h",
    "line": 136,
    "function": null,
    "comment": "AppList.h:136:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 136,
    "function": null,
    "comment": "AppList.h:136:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppList.h",
    "line": 139,
    "function": null,
    "comment": "AppList.h:139:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppList.h",
    "line": 140,
    "function": null,
    "comment": "AppList.h:140:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 143,
    "function": null,
    "comment": "AppList.h:143:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 145,
    "function": null,
    "comment": "AppList.h:145:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 147,
    "function": null,
    "comment": "AppList.h:147:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 148,
    "function": null,
    "comment": "AppList.h:148:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 149,
    "function": null,
    "comment": "AppList.h:149:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "AppList.h",
    "line": 149,
    "function": null,
    "comment": "AppList.h:149:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 150,
    "function": null,
    "comment": "AppList.h:150:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppList.h",
    "line": 156,
    "function": null,
    "comment": "AppList.h:156:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppList.h",
    "line": 157,
    "function": null,
    "comment": "AppList.h:157:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppList.h",
    "line": 158,
    "function": null,
    "comment": "AppList.h:158:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 161,
    "function": null,
    "comment": "AppList.h:161:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 163,
    "function": null,
    "comment": "AppList.h:163:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 167,
    "function": null,
    "comment": "AppList.h:167:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "AppList.h",
    "line": 168,
    "function": null,
    "comment": "AppList.h:168:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 168,
    "function": null,
    "comment": "AppList.h:168:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "AppList.h",
    "line": 168,
    "function": null,
    "comment": "AppList.h:168:  Is this a non-const reference? If so, make const or use a pointer: Stream& s  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 169,
    "function": null,
    "comment": "AppList.h:169:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 172,
    "function": null,
    "comment": "AppList.h:172:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 176,
    "function": null,
    "comment": "AppList.h:176:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "AppList.h",
    "line": 180,
    "function": null,
    "comment": "AppList.h:180:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "AppList.h",
    "line": 184,
    "function": null,
    "comment": "AppList.h:184:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppList.h",
    "line": 190,
    "function": null,
    "comment": "AppList.h:190:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppList.h",
    "line": 191,
    "function": null,
    "comment": "AppList.h:191:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "AppList.h",
    "line": 193,
    "function": null,
    "comment": "AppList.h:193:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "AppList.h",
    "line": 49,
    "function": null,
    "comment": "AppList.h:49:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Every source and header file must contain a license and copyright statement at the beginning of the file.",
    "file": "ClientApp.h",
    "line": null,
    "function": null,
    "comment": "ClientApp.h:0:  No copyright message found.  You should have a line: 'Copyright [year] <Copyright Owner>'  [legal/copyright] [5]",
    "tags": ["ros","comments","code-standards","google-cpp","license","copyright"]
  },
  {
    "rule": "The format of the symbol name should be <PROJECT>_<PATH>_<FILE>_H_.",
    "file": "ClientApp.h",
    "line": 2,
    "function": null,
    "comment": "ClientApp.h:2:  #ifndef header guard has wrong style, please use: _HOME_ANDRE_ROS_HAROS_ANALYSER_CLIENTAPP_H_  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the symbol name should be <PACKAGE>_<PATH>_<FILE>_H.",
    "file": "ClientApp.h",
    "line": 2,
    "function": null,
    "comment": "ClientApp.h:2:  #ifndef header guard has wrong style, please use: CLIENTAPP_H  [build/header_guard] [5]",
    "tags": ["ros","code-standards","ros-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "The format of the guard's end should be '#endif  // <PROJECT>_<PATH>_<FILE>_H_' or '#endif  /* <PROJECT>_<PATH>_<FILE>_H_ */'.",
    "file": "ClientApp.h",
    "line": 177,
    "function": null,
    "comment": "ClientApp.h:177:  #endif line should be '#endif  // _HOME_ANDRE_ROS_HAROS_ANALYSER_CLIENTAPP_H_'  [build/header_guard] [5]",
    "tags": ["code-standards","google-cpp","header","header-guard","preprocessor"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 1,
    "function": null,
    "comment": "ClientApp.h:1:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "ClientApp.h",
    "line": 6,
    "function": null,
    "comment": "ClientApp.h:6:  Include 'map' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Include files in alphabetical order, and in the following order. 1. preferred location 2. c system files 3. cpp system files 4. deprecated location 5. other headers",
    "file": "ClientApp.h",
    "line": 9,
    "function": null,
    "comment": "ClientApp.h:9:  Include 'ros/builtin_message_traits.h' not in alphabetical order  [build/include_alpha] [4]",
    "tags": ["code-standards","formatting","google-cpp","include","preprocessor"]
  },
  {
    "rule": "Do not include the same file twice.",
    "file": "ClientApp.h",
    "line": 18,
    "function": null,
    "comment": "ClientApp.h:18:  'app_manager/KeyValue.h' already included at ClientApp.h:17  [build/include] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 21,
    "function": null,
    "comment": "ClientApp.h:21:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ClientApp.h",
    "line": 23,
    "function": null,
    "comment": "ClientApp.h:23:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 30,
    "function": null,
    "comment": "ClientApp.h:30:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Zero-parameter constructors, single-parameter constructors and constructors callable with one argument should be marked explicit.",
    "file": "ClientApp.h",
    "line": 33,
    "function": null,
    "comment": "ClientApp.h:33:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]",
    "tags": ["code-standards","google-cpp","constructors","explicit"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 37,
    "function": null,
    "comment": "ClientApp.h:37:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 40,
    "function": null,
    "comment": "ClientApp.h:40:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 41,
    "function": null,
    "comment": "ClientApp.h:41:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 43,
    "function": null,
    "comment": "ClientApp.h:43:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 44,
    "function": null,
    "comment": "ClientApp.h:44:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 46,
    "function": null,
    "comment": "ClientApp.h:46:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 47,
    "function": null,
    "comment": "ClientApp.h:47:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 50,
    "function": null,
    "comment": "ClientApp.h:50:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 51,
    "function": null,
    "comment": "ClientApp.h:51:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ClientApp.h",
    "line": 53,
    "function": null,
    "comment": "ClientApp.h:53:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 61,
    "function": null,
    "comment": "ClientApp.h:61:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 62,
    "function": null,
    "comment": "ClientApp.h:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 63,
    "function": null,
    "comment": "ClientApp.h:63:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The closing curly brace is always on its own line.",
    "file": "ClientApp.h",
    "line": 64,
    "function": null,
    "comment": "ClientApp.h:64:  } should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ClientApp.h",
    "line": 66,
    "function": null,
    "comment": "ClientApp.h:66:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 69,
    "function": null,
    "comment": "ClientApp.h:69:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 71,
    "function": null,
    "comment": "ClientApp.h:71:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 72,
    "function": null,
    "comment": "ClientApp.h:72:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 73,
    "function": null,
    "comment": "ClientApp.h:73:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ClientApp.h",
    "line": 75,
    "function": null,
    "comment": "ClientApp.h:75:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ClientApp.h",
    "line": 76,
    "function": null,
    "comment": "ClientApp.h:76:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 77,
    "function": null,
    "comment": "ClientApp.h:77:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ClientApp.h",
    "line": 81,
    "function": null,
    "comment": "ClientApp.h:81:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 81,
    "function": null,
    "comment": "ClientApp.h:81:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ClientApp.h",
    "line": 87,
    "function": null,
    "comment": "ClientApp.h:87:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ClientApp.h",
    "line": 88,
    "function": null,
    "comment": "ClientApp.h:88:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 89,
    "function": null,
    "comment": "ClientApp.h:89:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ClientApp.h",
    "line": 93,
    "function": null,
    "comment": "ClientApp.h:93:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 93,
    "function": null,
    "comment": "ClientApp.h:93:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace is always on its own line.",
    "file": "ClientApp.h",
    "line": 97,
    "function": null,
    "comment": "ClientApp.h:97:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]",
    "tags": ["ros","code-standards","formatting","ros-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ClientApp.h",
    "line": 98,
    "function": null,
    "comment": "ClientApp.h:98:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 99,
    "function": null,
    "comment": "ClientApp.h:99:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "ClientApp.h",
    "line": 100,
    "function": null,
    "comment": "ClientApp.h:100:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not use alternative tokens instead of operators (e.g. 'and', 'or').",
    "file": "ClientApp.h",
    "line": 100,
    "function": null,
    "comment": "ClientApp.h:100:  Use operator || instead of or  [readability/alt_tokens] [2]",
    "tags": ["code-standards","google-cpp","operators","tokens","alternative-tokens"]
  },
  {
    "rule": "Do not use alternative tokens instead of operators (e.g. 'and', 'or').",
    "file": "ClientApp.h",
    "line": 100,
    "function": null,
    "comment": "ClientApp.h:100:  Use operator || instead of or  [readability/alt_tokens] [2]",
    "tags": ["code-standards","google-cpp","operators","tokens","alternative-tokens"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ClientApp.h",
    "line": 101,
    "function": null,
    "comment": "ClientApp.h:101:  For a static/global string constant, use a C style string instead: 'char client_type[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 103,
    "function": null,
    "comment": "ClientApp.h:103:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 109,
    "function": null,
    "comment": "ClientApp.h:109:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ClientApp.h",
    "line": 111,
    "function": null,
    "comment": "ClientApp.h:111:  For a static/global string constant, use a C style string instead: 'char key[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Use C-style strings for static and global string constants.",
    "file": "ClientApp.h",
    "line": 112,
    "function": null,
    "comment": "ClientApp.h:112:  For a static/global string constant, use a C style string instead: 'char value[]'.  [runtime/string] [4]",
    "tags": ["code-standards","google-cpp","strings","constants"]
  },
  {
    "rule": "Strings and /**/-comments should not extend beyond one line.",
    "file": "ClientApp.h",
    "line": 114,
    "function": null,
    "comment": "ClientApp.h:114:  Multi-line string ('...') found.  This lint script doesn't do well with such strings, and may give bogus warnings.  Use C++11 raw strings or concatenation instead.  [readability/multiline_string] [5]",
    "tags": ["comments","code-standards","google-cpp","multiline-comments","strings","multiline-strings"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ClientApp.h",
    "line": 117,
    "function": null,
    "comment": "ClientApp.h:117:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 117,
    "function": null,
    "comment": "ClientApp.h:117:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ClientApp.h",
    "line": 120,
    "function": null,
    "comment": "ClientApp.h:120:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ClientApp.h",
    "line": 121,
    "function": null,
    "comment": "ClientApp.h:121:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 124,
    "function": null,
    "comment": "ClientApp.h:124:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 126,
    "function": null,
    "comment": "ClientApp.h:126:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 128,
    "function": null,
    "comment": "ClientApp.h:128:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 129,
    "function": null,
    "comment": "ClientApp.h:129:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 130,
    "function": null,
    "comment": "ClientApp.h:130:  Lines should be <= 80 characters long  [whitespace/line_length] [2]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "ClientApp.h",
    "line": 130,
    "function": null,
    "comment": "ClientApp.h:130:  Is this a non-const reference? If so, make const or use a pointer: Stream& stream  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 131,
    "function": null,
    "comment": "ClientApp.h:131:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ClientApp.h",
    "line": 138,
    "function": null,
    "comment": "ClientApp.h:138:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ClientApp.h",
    "line": 139,
    "function": null,
    "comment": "ClientApp.h:139:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ClientApp.h",
    "line": 140,
    "function": null,
    "comment": "ClientApp.h:140:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 143,
    "function": null,
    "comment": "ClientApp.h:143:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 145,
    "function": null,
    "comment": "ClientApp.h:145:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 149,
    "function": null,
    "comment": "ClientApp.h:149:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "Do not leave whitespace at the end of a line.",
    "file": "ClientApp.h",
    "line": 150,
    "function": null,
    "comment": "ClientApp.h:150:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]",
    "tags": ["code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 150,
    "function": null,
    "comment": "ClientApp.h:150:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "Avoid non-const reference parameters. Use const or pointers.",
    "file": "ClientApp.h",
    "line": 150,
    "function": null,
    "comment": "ClientApp.h:150:  Is this a non-const reference? If so, make const or use a pointer: Stream& s  [runtime/references] [2]",
    "tags": ["code-standards","parameters","google-cpp","const","pointers","references"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 151,
    "function": null,
    "comment": "ClientApp.h:151:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 153,
    "function": null,
    "comment": "ClientApp.h:153:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 156,
    "function": null,
    "comment": "ClientApp.h:156:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 160,
    "function": null,
    "comment": "ClientApp.h:160:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "The open curly brace should almost never be on its own line.",
    "file": "ClientApp.h",
    "line": 164,
    "function": null,
    "comment": "ClientApp.h:164:  { should almost always be at the end of the previous line  [whitespace/braces] [4]",
    "tags": ["code-standards","formatting","google-cpp","curly-braces"]
  },
  {
    "rule": "No line should exceed 80 characters in length.",
    "file": "ClientApp.h",
    "line": 168,
    "function": null,
    "comment": "ClientApp.h:168:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]",
    "tags": ["code-standards","formatting","line-length","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ClientApp.h",
    "line": 174,
    "function": null,
    "comment": "ClientApp.h:174:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ClientApp.h",
    "line": 175,
    "function": null,
    "comment": "ClientApp.h:175:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "At least two spaces is best between code and comments.",
    "file": "ClientApp.h",
    "line": 177,
    "function": null,
    "comment": "ClientApp.h:177:  At least two spaces is best between code and comments  [whitespace/comments] [2]",
    "tags": ["comments","code-standards","formatting","whitespace","google-cpp"]
  },
  {
    "rule": "Include all required headers for what you use.",
    "file": "ClientApp.h",
    "line": 54,
    "function": null,
    "comment": "ClientApp.h:54:  Add #include <memory> for allocator<>  [build/include_what_you_use] [4]",
    "tags": ["code-standards","google-cpp","headers","include","preprocessor"]
  },
  {
    "rule": "Minimum lines of comments: 20%",
    "file": "setup.py",
    "line": null,
    "function": null,
    "comment": "Comment ratio is below 20%",
    "tags": ["metrics","nasa-satc","his","uai","ros","comments","comment-ratio"]
  },
  {
    "rule": "Minimum lines of comments: 20%",
    "file": "exchange.py",
    "line": null,
    "function": null,
    "comment": "Comment ratio is below 20%",
    "tags": ["metrics","nasa-satc","his","uai","ros","comments","comment-ratio"]
  },
  {
    "rule": "Minimum lines of comments: 20%",
    "file": "app_manager.py",
    "line": null,
    "function": null,
    "comment": "Comment ratio is below 20%",
    "tags": ["metrics","nasa-satc","his","uai","ros","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "app_list.py",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "exceptions.py",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "exceptions.py",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  },
  {
    "rule": "Minimum lines of comments: 20%",
    "file": "master_sync.py",
    "line": null,
    "function": null,
    "comment": "Comment ratio is below 20%",
    "tags": ["metrics","nasa-satc","his","uai","ros","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 30%",
    "file": "__init__.py",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 30%",
    "tags": ["metrics","nasa-satc","comments","comment-ratio"]
  },
  {
    "rule": "Maximum lines of comments: 40%",
    "file": "__init__.py",
    "line": null,
    "function": null,
    "comment": "Comment ratio is above 40%",
    "tags": ["metrics","uai","comments","comment-ratio"]
  },
  {
    "rule": "Minimum lines of comments: 20%",
    "file": "test_app.py",
    "line": null,
    "function": null,
    "comment": "Comment ratio is below 20%",
    "tags": ["metrics","nasa-satc","his","uai","ros","comments","comment-ratio"]
  },
  {
    "rule": "Minimum lines of comments: 20%",
    "file": "test_app.py",
    "line": null,
    "function": null,
    "comment": "Comment ratio is below 20%",
    "tags": ["metrics","nasa-satc","his","uai","ros","comments","comment-ratio"]
  }
]