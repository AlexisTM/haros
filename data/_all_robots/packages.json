[
  {
    "Name": "turtlebot",
    "Metapackage": true,
    "Contains": [
            "turtlebot_teleop",
            "turtlebot_bringup"
    ],
    "Description": "The turtlebot meta package provides all the basic drivers for running and using a TurtleBot.",
    "Wiki": "http://ros.org/wiki/turtlebot",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "turtlebot_teleop",
            "turtlebot_bringup"
    ]
  },
  {
    "Name": "turtlebot_teleop",
    "Metapackage": false,
    "Description": "Provides teleoperation using joysticks or keyboard.",
    "Wiki": "http://ros.org/wiki/turtlebot_teleop",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "3": 1,
        "18": 1
      }
    },
    "Edge": [
            "yocs_velocity_smoother",
            "kobuki_safety_controller",
            "turtlebot_bringup"
    ]
  },
  {
    "Name": "turtlebot_bringup",
    "Metapackage": false,
    "Description": "turtlebot_bringup provides roslaunch scripts for starting the TurtleBot base functionality.",
    "Wiki": "http://ros.org/wiki/turtlebot_bringup",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "yocs_cmd_vel_mux",
            "kobuki_bumper2pc",
            "kobuki_safety_controller",
            "kobuki_node"
    ]
  },
  {
    "Name": "ethercat_hardware",
    "Metapackage": false,
    "Description": "Package for creating a hardware interface to the robot using the EtherCAT motor controller/driver",
    "Wiki": "http://ros.org/wiki/ethercat_hardware",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 10,
        "2": 17,
        "3": 16,
        "5": 27,
        "6": 14,
        "18": 14
      }
    },
    "Edge": [
            "pr2_hardware_interface"
    ]
  },
  {
    "Name": "fingertip_pressure",
    "Metapackage": false,
    "Description": "This package provides access to the PR2 fingertip pressure sensors. This information includes:",
    "Wiki": "http://ros.org/wiki/fingertip_pressure",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_ethercat_drivers",
    "Metapackage": true,
    "Contains": [
            "fingertip_pressure",
            "ethercat_hardware"
    ],
    "Description": "This stack contains drivers for the ethercat system and the peripheralsthat connect to it: motor control boards, fingertip sensors, textureprojector, hand accelerometer.",
    "Wiki": "http://ros.org/wiki/pr2_ethercat_drivers",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "fingertip_pressure",
            "ethercat_hardware"
    ]
  },
  {
    "Name": "pr2_ethercat",
    "Metapackage": false,
    "Description": "Main loop that runs the robot.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1
      }
    },
    "Edge": [
            "pr2_controller_manager",
            "ethercat_hardware"
    ]
  },
  {
    "Name": "pr2_camera_synchronizer",
    "Metapackage": false,
    "Description": "",
    "Wiki": "http://pr.willowgarage.com/wiki/pr2_camera_synchronizer",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "ethercat_trigger_controllers"
    ]
  },
  {
    "Name": "pr2_robot",
    "Metapackage": true,
    "Contains": [
            "pr2_camera_synchronizer",
            "pr2_computer_monitor",
            "pr2_run_stop_auto_restart",
            "pr2_ethercat"
    ],
    "Description": "This stack collects PR2-specific components that are used in bringing upa robot.",
    "Wiki": "http://ros.org/wiki/pr2_robot",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "pr2_camera_synchronizer",
            "pr2_computer_monitor",
            "pr2_run_stop_auto_restart",
            "pr2_ethercat"
    ]
  },
  {
    "Name": "pr2_run_stop_auto_restart",
    "Metapackage": false,
    "Description": "This package provides a node that monitors the state of the run stops of the pr2_robot. When the state of the run stop changes from off to on, this node will automatically enable the power to the motors, and reset the motors. This allows you to use the run stop as a 'pause' button. By using the run stop as a tool to power up the robot, the run stop is also in reach of the user once the robot starts moving.",
    "Wiki": "http://ros.org/wiki/pr2_run_stop_auto_restart",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "3": 1
      }
    },
    "Edge": [
            "pr2_power_board"
    ]
  },
  {
    "Name": "pr2_computer_monitor",
    "Metapackage": false,
    "Description": "Monitors the computer's processor and hard drives of the PR2 and publishes data to diagnostics.",
    "Wiki": "http://www.ros.org/wiki/pr2_computer_monitor",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_command_tools",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "The cob_command_tools stack provides tools, for operating Care-O-bot.",
    "Wiki": "http://ros.org/wiki/cob_command_tools",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_teleop",
    "Metapackage": false,
    "Description": "teleop_node_of_v2",
    "Wiki": "http://www.ros.org/wiki/cob_teleop",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "18": 4,
        "2": 2,
        "5": 5,
        "6": 4
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_script_server",
    "Metapackage": false,
    "Description": "The cob_script_server package provides a simple interface to operate Care-O-bot. It can be used via the python API or the actionlib interface.",
    "Wiki": "http://ros.org/wiki/cob_script_server",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_command_gui",
    "Metapackage": false,
    "Description": "This package provides a simple GUI for operating Care-O-bot.",
    "Wiki": "http://www.ros.org/wiki/cob_command_gui",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_monitoring",
    "Metapackage": false,
    "Description": "cob_monitoring",
    "Wiki": "http://ros.org/wiki/cob_monitoring",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_interactive_teleop",
    "Metapackage": false,
    "Description": "COB teleop interactive marker for RViz provided by dcgm-robotics@FIT group.",
    "Wiki": "http://ros.org/wiki/cob_interactive_teleop",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 6,
        "3": 6
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_dashboard",
    "Metapackage": false,
    "Description": "cob_dashboard is a modified version of [[pr2_dashboard]].",
    "Wiki": "http://ros.org/wiki/cob_dashboard",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "sr_robot_lib",
    "Metapackage": false,
    "Description": "sr_robot_lib contains the robot library used in the sr_edc_ethercat_drivers. Thelibrary is used to store the incoming etherCAT messages in an easy to access format,and prepare the messages to be send through etherCAT.",
    "Wiki": "http://ros.org/wiki/sr_robot_lib",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 5,
        "2": 20,
        "3": 20,
        "5": 9,
        "6": 6,
        "18": 19
      }
    },
    "Edge": [
            "sr_hardware_interface",
            "sr_mechanism_model",
            "sr_utilities",
            "sr_self_test"
    ]
  },
  {
    "Name": "shadow_robot_ethercat",
    "Metapackage": true,
    "Contains": [
            "sr_robot_lib",
            "sr_edc_ethercat_drivers",
            "sr_edc_controller_configuration"
    ],
    "Description": "This stack contains the drivers and the controllers for Shadow Robot's EtherCAT Hand.",
    "Wiki": "http://ros.org/wiki/shadow_robot_ethercat",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "sr_robot_lib",
            "sr_edc_ethercat_drivers",
            "sr_edc_controller_configuration"
    ]
  },
  {
    "Name": "sr_edc_controller_configuration",
    "Metapackage": false,
    "Description": "contains the different launch files for Shadow Robot hand controllers. The actual configuration files arestored in the sr_config stack.",
    "Wiki": "http://ros.org/wiki/sr_edc_controller_configuration",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "sr_edc_ethercat_drivers",
    "Metapackage": false,
    "Description": "A package implementing a ROS interface for the etherCAT Shadow Robot Dextrous Hand.",
    "Wiki": "http://ros.org/wiki/sr_edc_ethercat_drivers",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 16,
        "3": 16,
        "18": 5,
        "5": 3
      }
    },
    "Edge": [
            "sr_robot_lib",
            "ros_ethercat_hardware"
    ]
  },
  {
    "Name": "shuttle_xpress",
    "Metapackage": false,
    "Description": "A driver for the Shuttle Xpress from Contour.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cyberglove",
    "Metapackage": false,
    "Description": "This is a generic ROS interface to the Cyberglove from Immersion. It reads data from the Cyberglove, calibrate them and streams them to two different /joint_states topic: calibrated and raw data.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 9,
        "3": 7,
        "18": 1,
        "6": 1,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cyberglove_trajectory",
    "Metapackage": false,
    "Description": "A package that gets joint positions from the cyberglove via serial port, and calibrates them, remaps them to Shadow hand joints, and publishes them as joint trajectories in a single node",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2,
        "18": 1
      }
    },
    "Edge": [
            "sr_remappers",
            "cyberglove",
            "sr_utilities"
    ]
  },
  {
    "Name": "sr_remappers",
    "Metapackage": false,
    "Description": "Remaps data from and to the Shadow Robot hardware",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 8,
        "3": 8,
        "18": 1
      }
    },
    "Edge": [
            "cyberglove"
    ]
  },
  {
    "Name": "sr_teleop",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "logitech_r400",
    "Metapackage": false,
    "Description": "A driver for the Logitech R400.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "orocos_kinematics_dynamics",
    "Metapackage": false,
    "Description": "This package depends on a recent version of the Kinematics and DynamicsLibrary (KDL), distributed by the Orocos Project. It is a meta-package thatdepends on kdl which contains the c++ version and pykdl which contains thegenerated python bindings.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "orocos_kdl"
    ]
  },
  {
    "Name": "orocos_kdl",
    "Metapackage": false,
    "Description": "This package contains a recent version of the Kinematics and DynamicsLibrary (KDL), distributed by the Orocos Project.",
    "Wiki": "http://wiki.ros.org/orocos_kdl",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 34,
        "2": 119,
        "3": 108,
        "5": 23,
        "6": 5,
        "18": 33,
        "25": 3
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "industrial_utils",
    "Metapackage": false,
    "Description": "Industrial utils is a library package that captures common funcitonality for the ROS-Industrial distribution.",
    "Wiki": "http://ros.org/wiki/industrial_utils",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 6,
        "3": 5,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "industrial_core",
    "Metapackage": true,
    "Contains": [
            "industrial_robot_client",
            "industrial_utils",
            "simple_message"
    ],
    "Description": "ROS-Industrial core stack contains packages and libraries for supporing industrial systems",
    "Wiki": "http://ros.org/wiki/industrial_core",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "industrial_robot_client",
            "industrial_utils",
            "simple_message"
    ]
  },
  {
    "Name": "simple_message",
    "Metapackage": false,
    "Description": "simple_message defines a simple messaging connection and protocol for communicating with an industrial robot controller.Additional handler and manager classes are included for handling connection limited systems.This package is part of the ROS-Industrial program.",
    "Wiki": "http://ros.org/wiki/simple_message",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 3,
        "2": 48,
        "3": 44,
        "18": 2,
        "5": 6
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "industrial_robot_client",
    "Metapackage": false,
    "Description": "industrial robot client contains generic clients for connectingto industrial robot controllers with servers that adhere to the simple message protocol.",
    "Wiki": "http://ros.org/wiki/industrial_robot_client",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 18,
        "3": 17,
        "18": 5,
        "5": 2
      }
    },
    "Edge": [
            "industrial_utils",
            "simple_message"
    ]
  },
  {
    "Name": "ocean_battery_driver",
    "Metapackage": false,
    "Description": "This is an interface to the Ocean Server Technology Intelligent Battery and Power System.",
    "Wiki": "http://www.ros.org/wiki/ocean_battery_driver",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 3,
        "18": 1,
        "5": 8,
        "6": 4
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_power_board",
    "Metapackage": false,
    "Description": "This provides a ROS node for the PR2 Power Board.",
    "Wiki": "http://www.ros.org/wiki/pr2_power_board",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 4,
        "18": 5,
        "5": 9,
        "6": 5
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_power_drivers",
    "Metapackage": true,
    "Contains": [
            "pr2_power_board",
            "ocean_battery_driver",
            "power_monitor"
    ],
    "Description": "Power drivers for the PR2 robot.",
    "Wiki": "http://ros.org/wiki/pr2_power_drivers",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "pr2_power_board",
            "power_monitor",
            "ocean_battery_driver"
    ]
  },
  {
    "Name": "power_monitor",
    "Metapackage": false,
    "Description": "The power_monitor collects messages from the ocean_battery_server and the pr2_power_board, and publishes a summary of their data in a friendlier message format.",
    "Wiki": "http://www.ros.org/wiki/power_monitor",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 4,
        "3": 4,
        "18": 2,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "naoqi_driver",
    "Metapackage": false,
    "Description": "Driver module between Aldebaran's NAOqiOS and ROS. It publishes all sensor and actuator data as well as basic diagnostic for battery, termperature. It subscribes also to RVIZ simple goal and cmd_vel for teleop.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 5,
        "2": 82,
        "3": 75,
        "5": 9,
        "6": 4,
        "18": 32
      }
    },
    "Edge": [
            "orocos_kdl"
    ]
  },
  {
    "Name": "app_manager",
    "Metapackage": false,
    "Description": "app_manager",
    "Wiki": "http://ros.org/wiki/app_manager",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 16
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "sr_ronex_hardware_interface",
    "Metapackage": false,
    "Description": "This package contains the definition of the CustomHW to beadded to the ros_ethercat_model CustomHWMap for theRoNeX.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2
      }
    },
    "Edge": [
            "ros_ethercat_model",
            "ros_ethercat_hardware",
            "sr_ronex_external_protocol"
    ]
  },
  {
    "Name": "sr_ronex_examples",
    "Metapackage": false,
    "Description": "Package containing examples for the RoNeX boards.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 6,
        "3": 6,
        "18": 1
      }
    },
    "Edge": [
            "ros_ethercat_model",
            "sr_ronex_utilities",
            "sr_ronex_hardware_interface"
    ]
  },
  {
    "Name": "sr_ronex_utilities",
    "Metapackage": false,
    "Description": "Package containing a header library with useful inline functions for working with the RoNeX.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "sr_ronex_transmissions",
    "Metapackage": false,
    "Description": "Contains the transmissions that can be used with the RoNeX driver. Using those transmissions makes it possible for the user to remap from the RoNeX to a joint based robot.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 10,
        "3": 9,
        "18": 4,
        "6": 1,
        "5": 3
      }
    },
    "Edge": [
            "ros_ethercat_model",
            "sr_ronex_hardware_interface"
    ]
  },
  {
    "Name": "sr_ronex_external_protocol",
    "Metapackage": false,
    "Description": "Contains the protocol to communicate between the driver and the ronex hardware.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "3": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "sr_ronex",
    "Metapackage": true,
    "Contains": [
            "sr_ronex_drivers",
            "sr_ronex_utilities",
            "sr_ronex_transmissions",
            "sr_ronex_controllers",
            "sr_ronex_external_protocol",
            "sr_ronex_hardware_interface",
            "sr_ronex_examples"
    ],
    "Description": "This stack contains the different packages related to the RoNeX (Robot Nervous System).",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "sr_ronex_drivers",
            "sr_ronex_utilities",
            "sr_ronex_transmissions",
            "sr_ronex_controllers",
            "sr_ronex_examples",
            "sr_ronex_hardware_interface",
            "sr_ronex_external_protocol"
    ]
  },
  {
    "Name": "sr_ronex_drivers",
    "Metapackage": false,
    "Description": "Package containing the driver for the RoNeX boards.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 16,
        "3": 14,
        "18": 6,
        "6": 1,
        "5": 2
      }
    },
    "Edge": [
            "ros_ethercat_model",
            "sr_ronex_hardware_interface",
            "sr_ronex_utilities",
            "ros_ethercat_hardware",
            "sr_ronex_external_protocol"
    ]
  },
  {
    "Name": "sr_ronex_controllers",
    "Metapackage": false,
    "Description": "Contains different useful controllers to use with the RoNeX.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 7,
        "3": 6,
        "5": 3,
        "6": 1,
        "18": 4
      }
    },
    "Edge": [
            "sr_ronex_drivers",
            "ros_ethercat_model",
            "sr_ronex_utilities",
            "sr_ronex_hardware_interface"
    ]
  },
  {
    "Name": "grizzly_robot",
    "Metapackage": true,
    "Contains": [
            "grizzly_base"
    ],
    "Description": "Metapackage for Grizzly robot computers.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "grizzly_base"
    ]
  },
  {
    "Name": "grizzly_base",
    "Metapackage": false,
    "Description": "Package contains C++ and Python nodes which make up the low level interface to the motordrivers, thermal management, and power system on board Grizzly.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "18": 2
      }
    },
    "Edge": [
            "roboteq_driver",
            "roboteq_diagnostics",
            "grizzly_msgs"
    ]
  },
  {
    "Name": "roboteq_driver",
    "Metapackage": false,
    "Description": "The roboteq_driver package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "18": 2,
        "3": 3,
        "2": 3
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "roboteq_diagnostics",
    "Metapackage": false,
    "Description": "Republish basic Roboteq motor controller data to the standard ROSdiagnostics topic.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "roboteq",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "abb",
    "Metapackage": true,
    "Contains": [
            "abb_driver",
            "abb_irb2400_moveit_plugins"
    ],
    "Description": "ROS-Industrial support for ABB manipulators (metapackage).",
    "Wiki": "http://ros.org/wiki/abb",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "abb_driver",
            "abb_irb2400_moveit_plugins"
    ]
  },
  {
    "Name": "abb_driver",
    "Metapackage": false,
    "Description": "",
    "Wiki": "http://ros.org/wiki/abb_driver",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 3,
        "3": 3
      }
    },
    "Edge": [
            "industrial_robot_client",
            "simple_message"
    ]
  },
  {
    "Name": "abb_irb2400_moveit_plugins",
    "Metapackage": false,
    "Description": "",
    "Wiki": "http://ros.org/wiki/abb_irb2400_moveit_plugins",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 2,
        "3": 1,
        "5": 6,
        "6": 4,
        "18": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_voltage_control",
    "Metapackage": false,
    "Description": "Interface to IO board that manages emergency stop and battery voltage on rob@work 3",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "18": 1,
        "5": 1,
        "6": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_phidgets",
    "Metapackage": false,
    "Description": "cob_phidgets",
    "Wiki": "http://ros.org/wiki/cob_phidgets",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 4,
        "2": 9,
        "3": 9,
        "18": 1,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_utilities",
    "Metapackage": false,
    "Description": "Deprecatedcob_utilities subsumes a number of classes, which are used in the original COb3 software. E.g. IniFile.h supports the original inifile structure of Care-O-bot 3. MathSup.h provides some basic functions like conversion from degree to radion or norming of angles within +/- PI. The package is currently used while the drivers are ported to ROS and Orocos respectively. Midterm it shall be removed and the ROS structures shall be used for reading parameters during initialization. So, don't use this package in new code!",
    "Wiki": "http://ros.org/wiki/cob_utilities",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 9,
        "3": 9,
        "5": 7,
        "6": 3
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_camera_sensors",
    "Metapackage": false,
    "Description": "For more information read the readme.htm file located in",
    "Wiki": "http://ros.org/wiki/cob_camera_sensors",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 4,
        "2": 12,
        "3": 10,
        "5": 9,
        "6": 5,
        "18": 6
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_light",
    "Metapackage": false,
    "Description": "This package contains scripts to operate the LED lights on Care-O-bot.",
    "Wiki": "http://ros.org/wiki/cob_light",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 3,
        "2": 24,
        "3": 22,
        "5": 4,
        "6": 3,
        "18": 5
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_canopen_motor",
    "Metapackage": false,
    "Description": "The package cob_canopen_motor implements a controller-drive component which is connected to a can-bus and works with a canopen-interface. CanDriveItf provides a - more or less - generic interface to the controller-drive components. CanDrvie... then implements a specific setup, e.g. an ELMO Harmonica Controller in case of the CanDriveHarmonica.",
    "Wiki": "http://ros.org/wiki/cob_canopen_motor",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 7,
        "3": 6,
        "5": 4,
        "6": 2,
        "18": 1,
        "21": 1,
        "25": 3
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_sick_s300",
    "Metapackage": false,
    "Description": "This package published a laser scan message out of a Sick S300 laser scanner.",
    "Wiki": "http://ros.org/wiki/cob_sick_s300",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 13,
        "3": 12,
        "5": 7,
        "6": 3,
        "18": 3,
        "25": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_sound",
    "Metapackage": false,
    "Description": "This package implements a sound play module using text2wave and aplay through python.",
    "Wiki": "http://ros.org/wiki/cob_sound",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "18": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_relayboard",
    "Metapackage": false,
    "Description": "cob_relayboard",
    "Wiki": "http://ros.org/wiki/cob_relayboard",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 9,
        "3": 8,
        "5": 4,
        "6": 2,
        "18": 1,
        "25": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_head_axis",
    "Metapackage": false,
    "Description": "cob_head_axis",
    "Wiki": "http://ros.org/wiki/cob_head_axis",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 3,
        "3": 2,
        "18": 2,
        "6": 1,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_driver",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "The cob_driver stack includes packages that provide access to the Care-O-bot hardware through ROS messages, services and actions. E.g. for mobile base, arm, camera sensors, laser scanners, etc...",
    "Wiki": "http://ros.org/wiki/cob_driver",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_generic_can",
    "Metapackage": false,
    "Description": "The package cob_generic_can provides an interface for nodes on a can-bus and examplary wrappers for two PeakSys-can-libs. When a can-bus-device is generated (for an example see base_dirve_chain) you can use generic_can to create as many itfs as there will be components communicating via this can-bus. Assign type of the can communication device (e.g. usb-to-can or can-card of a specific vendor) and can-address of the target device. This package comes with wrappers for PeakSys and PeakSysUSB adapters.",
    "Wiki": "http://ros.org/wiki/cob_generic_can",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 8,
        "3": 5,
        "18": 1,
        "6": 1,
        "5": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_mimic",
    "Metapackage": false,
    "Description": "This package implements the Care-O-bot mimic",
    "Wiki": "http://ros.org/wiki/cob_mimic",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_undercarriage_ctrl",
    "Metapackage": false,
    "Description": "cob_undercarriage_ctrl implements a controller for the omnidirectional base of Care-O-bot 3 on joint level. For a given Pltf-Twist the according wheel steering angles and linear wheel velocities are calculated based on the principle of rigid body motion. Each joint is than controlled individually to achieve the computed position and velocity",
    "Wiki": "http://ros.org/wiki/cob_undercarriage_ctrl",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "18": 1,
        "2": 3,
        "3": 3,
        "5": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_sick_lms1xx",
    "Metapackage": false,
    "Description": "This package published a laser scan message out of a Sick LMS1xx laser scanner.This version is made by fusion of ipa320/RCPRG_laser_drivers and ipa320/libLMS1xx repository. This package shuld have clearer structure and be easier to install.",
    "Wiki": "http://ros.org/wiki/cob_sick_lms1xx",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 3,
        "3": 2,
        "5": 2,
        "6": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_base_drive_chain",
    "Metapackage": false,
    "Description": "This package contains classes that are able to control the platform of the Care-O-Bot. This means to establish a CAN communication to drive and steering motors of the platform and later send motion commands and receive motor information.",
    "Wiki": "http://ros.org/wiki/cob_base_drive_chain",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 1,
        "18": 2,
        "6": 5,
        "5": 7
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_image_flip",
    "Metapackage": false,
    "Description": "Flips the image of Care-O-bots kinect in dependence of the viewing direction of the cameras to receive an upright image all the time.",
    "Wiki": "http://wiki.ros.org/cob_image_flip",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 4,
        "3": 4,
        "18": 2,
        "6": 1,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_cam3d_throttle",
    "Metapackage": false,
    "Description": "cob_cam3d_throttle: only for Trottel",
    "Wiki": "http://ros.org/wiki/cob_cam3d_throttle",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "3": 1,
        "18": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_perception_common",
    "Metapackage": true,
    "Contains": [
            "cob_object_detection_visualizer",
            "cob_cam3d_throttle",
            "cob_image_flip",
            "cob_vision_utils"
    ],
    "Description": "This stack provides utilities commonly needed for a variety of computer vision tasks.",
    "Wiki": "http://wiki.ros.org/cob_perception_common",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "cob_object_detection_visualizer",
            "cob_cam3d_throttle",
            "cob_image_flip",
            "cob_vision_utils"
    ]
  },
  {
    "Name": "cob_vision_utils",
    "Metapackage": false,
    "Description": "Contains utilities used within the object detection tool chain.",
    "Wiki": "http://wiki.ros.org/cob_vision_utils",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 6,
        "3": 6,
        "5": 6,
        "6": 4
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_object_detection_visualizer",
    "Metapackage": false,
    "Description": "The cob_object_detection_visualizer package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "3": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "husky_bringup",
    "Metapackage": false,
    "Description": "Clearpath Husky installation and integration package",
    "Wiki": "http://ros.org/wiki/husky_bringup",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "husky_control",
            "ur_driver",
            "husky_base"
    ]
  },
  {
    "Name": "husky_base",
    "Metapackage": false,
    "Description": "Clearpath Husky robot driver",
    "Wiki": "http://ros.org/wiki/husky_base",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 5,
        "2": 19,
        "3": 17,
        "5": 7,
        "6": 2,
        "18": 6,
        "19": 2,
        "25": 1
      }
    },
    "Edge": [
            "husky_control"
    ]
  },
  {
    "Name": "husky_robot",
    "Metapackage": true,
    "Contains": [
            "husky_bringup",
            "husky_base"
    ],
    "Description": "Metapackage for Clearpath Husky robot software",
    "Wiki": "http://ros.org/wiki/husky_robot",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "husky_bringup",
            "husky_base"
    ]
  },
  {
    "Name": "cob_lookat_action",
    "Metapackage": false,
    "Description": "cob_lookat_action",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "18": 1,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_tactiletools",
    "Metapackage": false,
    "Description": "cob_tactiletools",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_tray_monitor",
    "Metapackage": false,
    "Description": "cob_tray_monitor",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_kinematics",
    "Metapackage": false,
    "Description": "IK solvers and utilities for Care-O-bot",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 4,
        "2": 3,
        "3": 3,
        "5": 7,
        "6": 7,
        "18": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_moveit_interface",
    "Metapackage": false,
    "Description": "cob_moveit_interface",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_grasp_generation",
    "Metapackage": false,
    "Description": "Grasp generation for Care-O-bot based on OpenRAVE",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_manipulation",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "The cob_manipulation stack includes packages that provide manipulation capabilities for Care-O-bot.",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_pick_place_action",
    "Metapackage": false,
    "Description": "An action interface to MoveIt!'s pick-and-place for Care-O-bot",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2,
        "18": 2,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_common_actions",
    "Metapackage": true,
    "Contains": [
            "joint_trajectory_generator",
            "joint_trajectory_action_tools",
            "pr2_tilt_laser_interface",
            "pr2_tuck_arms_action",
            "pr2_arm_move_ik"
    ],
    "Description": "Various actions which help in moving the arms of the PR2or getting data from its tilting laser.",
    "Wiki": "http://wiki.ros.org/pr2_common_actions",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "joint_trajectory_generator",
            "joint_trajectory_action_tools",
            "pr2_tilt_laser_interface",
            "pr2_arm_move_ik",
            "pr2_tuck_arms_action"
    ]
  },
  {
    "Name": "joint_trajectory_action_tools",
    "Metapackage": false,
    "Description": "joint_trajectory_action_tools",
    "Wiki": "http://ros.org/wiki/joint_trajectory_action_tools",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "joint_trajectory_action"
    ]
  },
  {
    "Name": "joint_trajectory_generator",
    "Metapackage": false,
    "Description": "joint_trajectory_generator action takes in a trajectory specifiedby a number of joint positions, and it generates a new smooth trajectorythrough these joint positions.",
    "Wiki": "http://ros.org/wiki/joint_trajectory_generator",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 3,
        "3": 3,
        "18": 1,
        "5": 1
      }
    },
    "Edge": [
            "orocos_kdl",
            "joint_trajectory_action"
    ]
  },
  {
    "Name": "pr2_tuck_arms_action",
    "Metapackage": false,
    "Description": "The pr2_tuck_arms_action package",
    "Wiki": "http://wiki.ros.org/pr2_tuck_arms_action",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_tilt_laser_interface",
    "Metapackage": false,
    "Description": "Provides a set of tools/actions for manipulating the pr2's tiltinglaser. Simplifies previously complex tasks, such as fetchinga single sweep, given a set of desired parameters for both the laserdriver and tilting platform.",
    "Wiki": "http://ros.org/wiki/pr2_tilt_laser",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "18": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_arm_move_ik",
    "Metapackage": false,
    "Description": "Move the pr2 arm using inverse kinematics",
    "Wiki": "http://ros.org/wiki/pr2_arm_move_ik",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 4,
        "3": 4,
        "18": 1,
        "5": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_frame_tracker",
    "Metapackage": false,
    "Description": "The cob_frame_tracker package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 4,
        "2": 2,
        "3": 1,
        "5": 4,
        "6": 1,
        "18": 3
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_twist_controller",
    "Metapackage": false,
    "Description": "The main purpose of the cob_twist_controller is to convert target twists into joint velocities. Therefore it makes use of several implemented inverse kinematics approaches at the first order differential level. The inverse differential kinematics solver considers kinematic chain extensions, singularity robustness, redundancy resolution and priority-based methods.To avoid hardware destruction there is a limiter interface active as well. Via parameter server users can dynamically configure the solving strategy.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 8,
        "2": 40,
        "3": 37,
        "5": 5,
        "6": 1,
        "18": 15
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_collision_velocity_filter",
    "Metapackage": false,
    "Description": "The cob_collision_velocity_filter package is a package for collision avoidance using teleoperation.",
    "Wiki": "http://ros.org/wiki/cob_collision_velocity_filter",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2,
        "18": 3,
        "6": 5,
        "5": 5
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_control_mode_adapter",
    "Metapackage": false,
    "Description": "The cob_control_mode_adapter package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "18": 1,
        "5": 2,
        "6": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_trajectory_controller",
    "Metapackage": false,
    "Description": "This package provides a trajectory controller which controlls velocities for a chain of joints. This controller can be used e.g. with [[schunk_powercube_chain]].",
    "Wiki": "http://ros.org/wiki/cob_trajectory_controller",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 5,
        "3": 4,
        "5": 6,
        "6": 2,
        "18": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_base_velocity_smoother",
    "Metapackage": false,
    "Description": "The 'cob_base_velocity_smoother' reads velocity messages and publishes messages of the same type for smoothed velocity to avoid shaking behavior.",
    "Wiki": "http://ros.org/wiki/cob_base_velocity_smoother",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 1,
        "18": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_control",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "cob_control meta-package",
    "Wiki": "http://ros.org/wiki/cob_control",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_obstacle_distance",
    "Metapackage": false,
    "Description": "The cob_obstacle_distance package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 20,
        "3": 18,
        "5": 6,
        "6": 1,
        "18": 11
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_footprint_observer",
    "Metapackage": false,
    "Description": "The cob_footprint_observer package adjusts the footprint of the robot based on the setup (e.g. arm and/or tray).",
    "Wiki": "http://ros.org/wiki/cob_footprint_observer",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 1,
        "18": 1,
        "6": 1,
        "5": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_cartesian_controller",
    "Metapackage": false,
    "Description": "This package provides nodes that broadcast tf-frames along various (model-based) Cartesian paths.The tf-frames can be used as targets for the cob_frame_tracker/cob_twist_controller",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 10,
        "3": 8,
        "5": 3,
        "6": 1,
        "18": 4
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_model_identifier",
    "Metapackage": false,
    "Description": "The cob_model_identifier package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 1,
        "3": 1,
        "18": 1,
        "5": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_omni_drive_controller",
    "Metapackage": false,
    "Description": "The cob_omni_drive_controller package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 5,
        "2": 3,
        "3": 3,
        "5": 2,
        "6": 1,
        "18": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "ecl_io",
    "Metapackage": false,
    "Description": "Most implementations (windows, posix, ...) have slightly different api forlow level input-output functions. These are gathered here and re-representedwith a cross platform set of functions.",
    "Wiki": "http://wiki.ros.org/ecl_io",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 5,
        "3": 4,
        "5": 4,
        "6": 3
      }
    },
    "Edge": [
            "ecl_errors",
            "ecl_config"
    ]
  },
  {
    "Name": "ecl_converters_lite",
    "Metapackage": false,
    "Description": "These are a very simple version of some of the functions in ecl_converterssuitable for firmware development. That is, there is no use of new,templates or exceptions.",
    "Wiki": "http://wiki.ros.org/ecl_converters_lite",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2
      }
    },
    "Edge": [
            "ecl_config"
    ]
  },
  {
    "Name": "ecl_time_lite",
    "Metapackage": false,
    "Description": "Provides a portable set of time functions that are especially useful forporting other code or being wrapped by higher level c++ classes.",
    "Wiki": "http://wiki.ros.org/ecl_time_lite",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 14,
        "3": 14,
        "5": 2
      }
    },
    "Edge": [
            "ecl_errors",
            "ecl_config"
    ]
  },
  {
    "Name": "ecl_errors",
    "Metapackage": false,
    "Description": "This library provides lean and mean error mechanisms. It includes c style error functions as well as a few useful macros. For higher level mechanisms, refer to ecl_exceptions.",
    "Wiki": "http://wiki.ros.org/ecl_errors",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 6,
        "3": 5
      }
    },
    "Edge": [
            "ecl_config"
    ]
  },
  {
    "Name": "ecl_lite",
    "Metapackage": true,
    "Contains": [
            "ecl_converters_lite",
            "ecl_sigslots_lite",
            "ecl_time_lite",
            "ecl_config",
            "ecl_errors",
            "ecl_io"
    ],
    "Description": "Libraries and utilities for embedded and low-level linux development.",
    "Wiki": "http://www.ros.org/wiki/ecl_lite",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "ecl_converters_lite",
            "ecl_sigslots_lite",
            "ecl_time_lite",
            "ecl_config",
            "ecl_errors",
            "ecl_io"
    ]
  },
  {
    "Name": "ecl_sigslots_lite",
    "Metapackage": false,
    "Description": "This avoids use of dynamic storage (malloc/new) and thread safety (mutexes) to provide a very simple sigslots implementation that can be used for *very* embedded development.",
    "Wiki": "http://wiki.ros.org/ecl_sigslots_lite",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 5,
        "3": 4,
        "5": 1
      }
    },
    "Edge": [
            "ecl_errors",
            "ecl_config"
    ]
  },
  {
    "Name": "ecl_config",
    "Metapackage": false,
    "Description": "These tools inspect and describe your system with macros, typesand functions.",
    "Wiki": "http://wiki.ros.org/ecl_config",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 7,
        "3": 7,
        "5": 1,
        "6": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "schunk_sdhx",
    "Metapackage": false,
    "Description": "The schunk_sdhx package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "schunk_sdh",
    "Metapackage": false,
    "Description": "This package provides an interface for operating the schunk dexterous hand (SDH), including the tactile sensors.",
    "Wiki": "http://ros.org/wiki/schunk_sdh",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 26,
        "3": 26,
        "18": 3,
        "5": 4
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "schunk_libm5api",
    "Metapackage": false,
    "Description": "This package wraps the libm5api to use it as a ros dependency. Original sources from http://www.schunk-modular-robotics.com/fileadmin/user_upload/software/schunk_libm5api_source.zip.",
    "Wiki": "http://ros.org/wiki/schunk_libm5api",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 3,
        "2": 25,
        "3": 23,
        "5": 41,
        "6": 14,
        "18": 1,
        "21": 2,
        "22": 2,
        "25": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "schunk_simulated_tactile_sensors",
    "Metapackage": false,
    "Description": "This package provides simulated tactile sensors for the Schunk Dextrous Hand (SDH) which is mounted on the Care-O-bot arm. The node subscribes to the Gazebo bumper topics of the SDH. It transforms the Gazebo feedback to the tactile_data topic to provide the same tactile sensor interface as the schunk_sdh package. The following parameters can be set: * cells_x: The number of patches on the tactile sensor in the directionperpendicular to the finger. Defaults to 6. * cells_y: The number of patches on the tactile sensor along the directionof the finger. Defaults to 14. * output_range: The maximum output value of one patch. Defaults to 3500. * sensitivity: The change of output in one patch per Newton. Defaults to350. The sensitivity can be approximated by the followingformula: S = output_range / (measurement_range * cell_area)- The measurement range of the tactile pads is 250 kPa (fromthe data sheet).- The output range can be determined by experiment from thereal SDH. It is about 3500.- The cell area is the size of one patch. Length and widthof the area are determined by dividing the length/widthof the collision surface by the number of cells in therespective direction.Important: In most cases this is NOT the cell area that is given in the data sheet! * filter_length: The length of the moving average filter which smoothesthe values from simulation. Defaults to 10. The node subscribes to the following topics to receive data from the simulation: * thumb_2/state * thumb_3/state * finger_12/state * finger_13/state * finger_22/state * finger_23/state The node publishes the processed data on the following topic: * tactile_data The simulated bumper must obtain the collision data in the link that the sensor is attached to. This is achieved by setting the frameName property in the gazebo_ros_bumper controller.",
    "Wiki": "http://ros.org/wiki/schunk_simulated_tactile_sensors",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "schunk_modular_robotics",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "This stack includes packages that provide access to the Schunk hardware through ROS messages, services and actions.",
    "Wiki": "http://ros.org/wiki/schunk_modular_robotics",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "schunk_powercube_chain",
    "Metapackage": false,
    "Description": "This packages provides a configurable driver of a chainof Schunk powercubes. The powercube chain is configuredthrough parameters. Most users will not directly interactwith this package but with the corresponding launch filesin other packages, e.g. schunk_bringup, cob_bringup, ...",
    "Wiki": "http://ros.org/wiki/schunk_powercube_chain",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 17,
        "3": 14,
        "5": 15,
        "6": 4,
        "18": 2,
        "25": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_arm_kinematics",
    "Metapackage": false,
    "Description": "This package provides a kinematics implementation for the PR2 robot. It can be used to compute forward and inverse kinematics.",
    "Wiki": "http://ros.org/wiki/pr2_arm_kinematics",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 5,
        "2": 8,
        "3": 8,
        "5": 7,
        "6": 2,
        "18": 6
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_kinematics",
    "Metapackage": true,
    "Contains": [
            "pr2_arm_kinematics"
    ],
    "Description": "The pr2_kinematics package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "pr2_arm_kinematics"
    ]
  },
  {
    "Name": "yocs_velocity_smoother",
    "Metapackage": false,
    "Description": "Bound incoming velocity messages according to robot velocity and acceleration limits.",
    "Wiki": "http://ros.org/wiki/yocs_velocity_smoother",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 1,
        "5": 1,
        "6": 1
      }
    },
    "Edge": [
            "ecl_threads"
    ]
  },
  {
    "Name": "yocs_navigator",
    "Metapackage": false,
    "Description": "Navigation module for robots",
    "Wiki": "http://wiki.ros.org/yocs_navigator",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 6,
        "2": 2,
        "3": 1,
        "18": 2
      }
    },
    "Edge": [
            "yocs_math_toolkit"
    ]
  },
  {
    "Name": "yocs_safety_controller",
    "Metapackage": false,
    "Description": "A controller ensuring the safe operation of your robot.The SafetyController listens to ranger readings in order to stop (and move back), if obstacles get to close.This controller can be enabled/disabled.",
    "Wiki": "http://ros.org/wiki/yocsd_safety_controller",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 1,
        "3": 1,
        "18": 1
      }
    },
    "Edge": [
            "yocs_controllers",
            "ecl_threads"
    ]
  },
  {
    "Name": "yujin_ocs",
    "Metapackage": true,
    "Contains": [
            "yocs_controllers",
            "yocs_keyop",
            "yocs_safety_controller",
            "yocs_diff_drive_pose_controller",
            "yocs_math_toolkit",
            "yocs_cmd_vel_mux",
            "yocs_virtual_sensor",
            "yocs_joyop",
            "yocs_waypoints_navi",
            "yocs_velocity_smoother"
    ],
    "Description": "Yujin Robot's open-source control software",
    "Wiki": "http://ros.org/wiki/yujin_ocs",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "yocs_cmd_vel_mux",
            "yocs_keyop",
            "yocs_safety_controller",
            "yocs_diff_drive_pose_controller",
            "yocs_math_toolkit",
            "yocs_controllers",
            "yocs_virtual_sensor",
            "yocs_joyop",
            "yocs_waypoints_navi",
            "yocs_velocity_smoother"
    ]
  },
  {
    "Name": "yocs_diff_drive_pose_controller",
    "Metapackage": false,
    "Description": "A controller for driving a differential drive base to a pose goal or along a path specified by multiple poses.A pose consists of a 2D position (x,y) and a 1D orientation (theta).",
    "Wiki": "http://ros.org/wiki/yocs_diff_drive_pose_controller",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2,
        "18": 2,
        "5": 1
      }
    },
    "Edge": [
            "yocs_controllers",
            "yocs_math_toolkit",
            "ecl_threads"
    ]
  },
  {
    "Name": "yocs_ar_pair_tracking",
    "Metapackage": false,
    "Description": "The AR pair tracking package",
    "Wiki": "http://wiki.ros.org/yocs_ar_pair_tracking",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 3,
        "18": 2,
        "3": 2,
        "2": 2
      }
    },
    "Edge": [
            "yocs_math_toolkit",
            "yocs_ar_marker_tracking"
    ]
  },
  {
    "Name": "yocs_keyop",
    "Metapackage": false,
    "Description": "Keyboard teleoperation for your robot",
    "Wiki": "http://ros.org/wiki/yocs_keyop",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "3": 1,
        "18": 1,
        "5": 1
      }
    },
    "Edge": [
            "ecl_threads",
            "ecl_exceptions",
            "ecl_time"
    ]
  },
  {
    "Name": "yocs_math_toolkit",
    "Metapackage": false,
    "Description": "Math toolkit for Yujin open control system. This package is intended to contain common use functions,mostly for simple mathematics but also for tf-related conversions.By no means it pretends to be an efficient and robust, widely used math library, but a play ground whereto put common code that is typically repeated in many robot control programs.",
    "Wiki": "http://ros.org/wiki/yocs_math_toolkit",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 1,
        "3": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "yocs_controllers",
    "Metapackage": false,
    "Description": "Library for various controller types and algorithms",
    "Wiki": "http://ros.org/wiki/yocs_controllers",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "3": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "yocs_joyop",
    "Metapackage": false,
    "Description": "Joystick teleoperation for your robot robot core",
    "Wiki": "http://ros.org/wiki/yocs_joop",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "18": 1
      }
    },
    "Edge": [
            "ecl_exceptions",
            "ecl_time"
    ]
  },
  {
    "Name": "yocs_localization_manager",
    "Metapackage": false,
    "Description": "Localization Manager helps to localize robot's position with annotated information",
    "Wiki": "http://wiki.ros.org/yocs_localization_manager",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "ar_track_alvar"
    ]
  },
  {
    "Name": "yocs_waypoints_navi",
    "Metapackage": false,
    "Description": "Simple tool for waypoints navigation with two functions:",
    "Wiki": "http://ros.org/wiki/yocs_waypoints_navi",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "18": 1,
        "5": 2,
        "6": 1
      }
    },
    "Edge": [
            "yocs_math_toolkit"
    ]
  },
  {
    "Name": "yocs_ar_pair_approach",
    "Metapackage": false,
    "Description": "Search and approach behaviour, moving to a target in front of a pair of ar markers.",
    "Wiki": "http://ros.org/wiki/yocs_ar_pair_approach",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "yocs_waypoint_provider",
    "Metapackage": false,
    "Description": "Parse a multiple poses from yaml and provide as topic and service. This package is highly inspired by yocs_waypoints_navi",
    "Wiki": "http://ros.org/wiki/yocs_waypoint_provider",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 3,
        "3": 2,
        "18": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "yocs_cmd_vel_mux",
    "Metapackage": false,
    "Description": "A multiplexer for command velocity inputs. Arbitrates incoming cmd_vel messages from several topics, allowing one topic at a time to command the robot, based on priorities. It also deallocates current allowed topic if no messages are received after a configured timeout. All topics, together with their priority and timeout are configured through a YAML file, that can be reload at runtime.",
    "Wiki": "http://ros.org/wiki/yocs_cmd_vel_mux",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 5,
        "3": 5,
        "18": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "yocs_ar_marker_tracking",
    "Metapackage": false,
    "Description": "Collecting, tracking and generating statistics for ar markers from ar_track_alvar.",
    "Wiki": "http://wiki.ros.org/yocs_ar_marker_tracking",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 4,
        "3": 3,
        "18": 1,
        "5": 1
      }
    },
    "Edge": [
            "yocs_math_toolkit"
    ]
  },
  {
    "Name": "yocs_virtual_sensor",
    "Metapackage": false,
    "Description": "Virtual sensor that uses semantic map information to see obstacles undetectable by robot sensors.Current implementation cannot read obstacles from YAML files. Until this feature gets implemented, weuse auxiliary scripts to read and publish files' content. Data directory contains some example files.",
    "Wiki": "http://ros.org/wiki/yocs_virtual_sensor",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "18": 1,
        "5": 2
      }
    },
    "Edge": [
            "yocs_math_toolkit"
    ]
  },
  {
    "Name": "pano_core",
    "Metapackage": false,
    "Description": "Library for the opencv-based panorama stitching algorithm",
    "Wiki": "http://ros.org/wiki/pano_core",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 33,
        "2": 7,
        "3": 6,
        "5": 6,
        "6": 4,
        "18": 15
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "turtlebot_actions",
    "Metapackage": false,
    "Description": "turtlebot_actions provides several basic actionlib actions for the TurtleBot.",
    "Wiki": "http://ros.org/wiki/turtlebot_actions",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "18": 4,
        "2": 2,
        "5": 2
      }
    },
    "Edge": [
            "turtlebot_bringup"
    ]
  },
  {
    "Name": "pano_ros",
    "Metapackage": false,
    "Description": "The ros frontend to the pano subsystem.",
    "Wiki": "http://ros.org/wiki/pano_ros",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "pano_py"
    ]
  },
  {
    "Name": "turtlebot_apps",
    "Metapackage": true,
    "Contains": [
            "pano_py",
            "pano_core",
            "turtlebot_follower",
            "pano_ros",
            "turtlebot_calibration",
            "turtlebot_navigation",
            "turtlebot_panorama",
            "turtlebot_actions"
    ],
    "Description": "turtlebot_apps is a group of simple demos and exmaples to run on your TurtleBot to help you get started with ROS and TurtleBot.",
    "Wiki": "http://ros.org/wiki/turtlebot_apps",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "pano_py",
            "pano_core",
            "turtlebot_follower",
            "pano_ros",
            "turtlebot_calibration",
            "turtlebot_navigation",
            "turtlebot_panorama",
            "turtlebot_actions"
    ]
  },
  {
    "Name": "turtlebot_navigation",
    "Metapackage": false,
    "Description": "turtlebot_navigation",
    "Wiki": "http://ros.org/wiki/turtlebot_navigation",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "3": 1,
        "18": 1
      }
    },
    "Edge": [
            "turtlebot_bringup"
    ]
  },
  {
    "Name": "pano_py",
    "Metapackage": false,
    "Description": "This is a python wraper around the pano_core library (I think)",
    "Wiki": "http://ros.org/wiki/pano_py",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 12,
        "2": 1,
        "3": 1,
        "5": 2,
        "6": 1
      }
    },
    "Edge": [
            "pano_core"
    ]
  },
  {
    "Name": "turtlebot_calibration",
    "Metapackage": false,
    "Description": "turtlebot_calibration",
    "Wiki": "http://ros.org/wiki/turtlebot_calibration",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "turtlebot_bringup"
    ]
  },
  {
    "Name": "turtlebot_panorama",
    "Metapackage": false,
    "Description": "This app utilises pano_ros for taking snapshots and stitching them together to create panorama pictures.",
    "Wiki": "http://ros.org/wiki/turtlebot_panorama",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2,
        "18": 2,
        "6": 1,
        "5": 1
      }
    },
    "Edge": [
            "yocs_velocity_smoother",
            "pano_ros",
            "turtlebot_bringup"
    ]
  },
  {
    "Name": "turtlebot_follower",
    "Metapackage": false,
    "Description": "Follower for the turtlebot. Follows humans and robots around by following the centroid of a box points in front of the turtlebot.",
    "Wiki": "http://ros.org/wiki/turtlebot_apps",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "18": 1,
        "5": 1
      }
    },
    "Edge": [
            "turtlebot_bringup"
    ]
  },
  {
    "Name": "pr2_mechanism_diagnostics",
    "Metapackage": false,
    "Description": "The `pr2_mechanism_diagnostics` node subscribes to `mechanism_statistics` and publishes diagnostics data for joints and controllers on `/diagnostics`.",
    "Wiki": "http://ros.org/wiki/pr2_mechanism_diagnostics",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 6,
        "3": 5,
        "18": 1
      }
    },
    "Edge": [
            "pr2_mechanism_model"
    ]
  },
  {
    "Name": "pr2_controller_interface",
    "Metapackage": false,
    "Description": "This package specifies the interface to a realtime controller. A controller that implements this interface can be executed by the",
    "Wiki": "http://ros.org/wiki/pr2_controller_interface",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 1,
        "3": 1
      }
    },
    "Edge": [
            "pr2_mechanism_model"
    ]
  },
  {
    "Name": "pr2_controller_manager",
    "Metapackage": false,
    "Description": "The controller manager (CM) package provides the infrastructure to run controllers in a hard realtime loop.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 5,
        "2": 4,
        "3": 4,
        "5": 6,
        "6": 4,
        "18": 4
      }
    },
    "Edge": [
            "pr2_hardware_interface",
            "pr2_controller_interface",
            "pr2_mechanism_diagnostics",
            "pr2_mechanism_model"
    ]
  },
  {
    "Name": "pr2_mechanism",
    "Metapackage": true,
    "Contains": [
            "pr2_controller_manager",
            "pr2_mechanism_model",
            "pr2_controller_interface",
            "pr2_mechanism_diagnostics",
            "pr2_hardware_interface"
    ],
    "Description": "The pr2_mechanism stack contains the infrastructure to control the PR2 robot in a hard realtime control loop.",
    "Wiki": "http://ros.org/wiki/pr2_mechanism",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "pr2_controller_manager",
            "pr2_mechanism_model",
            "pr2_mechanism_diagnostics",
            "pr2_hardware_interface",
            "pr2_controller_interface"
    ]
  },
  {
    "Name": "pr2_hardware_interface",
    "Metapackage": false,
    "Description": "This package contains the C++ interfaces to the PR2 hardwarecomponents that are controlled over EtherCAT. This includes themotors and encoders needed to control the PR2 mechanism, as well ascomponents like the pressure sensors in the fingertips, cameratriggers, etc... All of the hardware components in this interface aredirectly available to the controllers inside the hard realtimecontrol loop.",
    "Wiki": "http://ros.org/wiki/pr2_hardware_interface",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "3": 1,
        "18": 3
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_mechanism_model",
    "Metapackage": false,
    "Description": "",
    "Wiki": "http://ros.org/wiki/pr2_mechanism_model",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 16,
        "3": 16,
        "5": 9,
        "6": 5,
        "18": 6
      }
    },
    "Edge": [
            "pr2_hardware_interface"
    ]
  },
  {
    "Name": "cob_linear_nav",
    "Metapackage": false,
    "Description": "cob_linear_nav provides a simple navigation instrument driving on a linear path from current position to goal without any planning or obstacle avoidance capabilites.Obstacle avoidance should be carried out in other package, e.g.",
    "Wiki": "http://ros.org/wiki/cob_linear_nav",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "18": 1,
        "5": 4,
        "6": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_navigation",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "The cob_navigation stack provides different navigation packages for",
    "Wiki": "http://ros.org/wiki/cob_navigation",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_scan_unifier",
    "Metapackage": false,
    "Description": "The cob_scan_unifier package holds code to unify two or more laser-scans to one unified scan-message",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2,
        "18": 1,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "kobuki_controller_tutorial",
    "Metapackage": false,
    "Description": "Code for the Kobuki controller tutorial.",
    "Wiki": "http://ros.org/wiki/kobuki_controller_tutorial",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2,
        "18": 1
      }
    },
    "Edge": [
            "yocs_controllers"
    ]
  },
  {
    "Name": "kobuki_testsuite",
    "Metapackage": false,
    "Description": "Kobuki test suite: this package provides tools to thoroughly test Kobuki's hardware.",
    "Wiki": "http://ros.org/wiki/kobuki_testsuite",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "kobuki_node"
    ]
  },
  {
    "Name": "kobuki_auto_docking",
    "Metapackage": false,
    "Description": "Automatic docking for Kobuki:Users owning a docking station for Kobuki can use this tool to let Kobuki find its nest autonomously.",
    "Wiki": "http://ros.org/wiki/kobuki_auto_docking",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2,
        "18": 2
      }
    },
    "Edge": [
            "yocs_cmd_vel_mux",
            "kobuki_dock_drive",
            "ecl_linear_algebra",
            "ecl_geometry",
            "ecl_threads"
    ]
  },
  {
    "Name": "kobuki_node",
    "Metapackage": false,
    "Description": "ROS nodelet for Kobuki: ROS wrapper for the Kobuki driver.",
    "Wiki": "http://ros.org/wiki/kobuki_node",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 7,
        "3": 4,
        "18": 6,
        "5": 3
      }
    },
    "Edge": [
            "ecl_threads",
            "ecl_streams",
            "kobuki_safety_controller",
            "kobuki_keyop",
            "kobuki_ftdi",
            "ecl_sigslots",
            "ecl_exceptions",
            "kobuki_driver"
    ]
  },
  {
    "Name": "kobuki",
    "Metapackage": true,
    "Contains": [
            "kobuki_testsuite",
            "kobuki_bumper2pc",
            "kobuki_random_walker",
            "kobuki_controller_tutorial",
            "kobuki_safety_controller",
            "kobuki_auto_docking",
            "kobuki_keyop",
            "kobuki_node"
    ],
    "Description": "Software for Kobuki, Yujin Robot's mobile research base.",
    "Wiki": "http://ros.org/wiki/kobuki",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "kobuki_testsuite",
            "kobuki_bumper2pc",
            "kobuki_random_walker",
            "kobuki_node",
            "kobuki_safety_controller",
            "kobuki_auto_docking",
            "kobuki_keyop",
            "kobuki_controller_tutorial"
    ]
  },
  {
    "Name": "kobuki_safety_controller",
    "Metapackage": false,
    "Description": "A controller ensuring the safe operation of Kobuki.The SafetyController keeps track of bumper, cliff and wheel drop events. In case of the first two,Kobuki is commanded to move back. In the latter case, Kobuki is stopped.This controller can be enabled/disabled.The safety states (bumper pressed etc.) can be reset. WARNING: Dangerous!",
    "Wiki": "http://ros.org/wiki/kobuki_safety_controller",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2
      }
    },
    "Edge": [
            "yocs_controllers",
            "ecl_threads"
    ]
  },
  {
    "Name": "kobuki_bumper2pc",
    "Metapackage": false,
    "Description": "Bumper/cliff to pointcloud nodelet:Publish bumpers and cliff sensors events as points in a pointcloud, so navistack can use themfor poor-man navigation. Implemented as a nodelet intended to run together with kobuki_node.",
    "Wiki": "http://ros.org/wiki/kobuki_bumper2pc",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 1,
        "18": 1,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "kobuki_random_walker",
    "Metapackage": false,
    "Description": "Random walker app for Kobuki",
    "Wiki": "http://ros.org/wiki/kobuki_random_walker",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "3": 1,
        "18": 1,
        "2": 1,
        "5": 3,
        "6": 3
      }
    },
    "Edge": [
            "yocs_cmd_vel_mux",
            "ecl_threads",
            "yocs_controllers"
    ]
  },
  {
    "Name": "kobuki_keyop",
    "Metapackage": false,
    "Description": "Keyboard teleoperation for Kobuki: relays commands from a keyboard to Kobuki.",
    "Wiki": "http://ros.org/wiki/kobuki_keyop",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2,
        "18": 1
      }
    },
    "Edge": [
            "yocs_cmd_vel_mux",
            "ecl_threads",
            "yocs_velocity_smoother",
            "ecl_exceptions",
            "ecl_time"
    ]
  },
  {
    "Name": "pr2_gripper_sensor_action",
    "Metapackage": false,
    "Description": "The pr2_gripper_sensor_action package provides an action interface for talking to the pr2_gripper_sensor_controller real-time controller.It provides several different actions for getting high-level sensor information from the PR2 palm-mounted accelerometers, fingertip pressure arrays, and gripper motor/encoder, as well as several sensor-based gripper control actions that respond with low-latency in real-time.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 13,
        "3": 7,
        "18": 7,
        "6": 1,
        "5": 1
      }
    },
    "Edge": [
            "pr2_mechanism_controllers",
            "pr2_mechanism_model",
            "robot_mechanism_controllers",
            "pr2_gripper_sensor_controller"
    ]
  },
  {
    "Name": "pr2_gripper_sensor",
    "Metapackage": true,
    "Contains": [
            "pr2_gripper_sensor_controller",
            "pr2_gripper_sensor_action"
    ],
    "Description": "The pr2_gripper_sensor package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "pr2_gripper_sensor_controller",
            "pr2_gripper_sensor_action"
    ]
  },
  {
    "Name": "pr2_gripper_sensor_controller",
    "Metapackage": false,
    "Description": "The pr2_gripper_sensor_controller package is a real-time controller that integrates signals from the PR2 hand-mounted accelerometer and finger-mounted pressure sensors with motor control of the gripper joint to do highly responsive sensing and low-latency closed-loop control.",
    "Wiki": "http://ros.org/wiki/pr2_gripper_sensor_controller",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 9,
        "3": 8,
        "18": 2,
        "6": 2,
        "5": 5
      }
    },
    "Edge": [
            "pr2_controller_manager",
            "pr2_controller_interface",
            "pr2_mechanism_model"
    ]
  },
  {
    "Name": "ecl_statistics",
    "Metapackage": false,
    "Description": "Common statistical structures and algorithms for control systems.",
    "Wiki": "http://wiki.ros.org/ecl_statistics",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2
      }
    },
    "Edge": [
            "ecl_linear_algebra",
            "ecl_config"
    ]
  },
  {
    "Name": "ecl_exceptions",
    "Metapackage": false,
    "Description": "Template based exceptions - these are simple and practical and avoid the proliferation of exception types. Although not syntatactically ideal, it is convenient and eminently practical.",
    "Wiki": "http://wiki.ros.org/ecl_exceptions",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 4,
        "3": 4
      }
    },
    "Edge": [
            "ecl_errors",
            "ecl_config"
    ]
  },
  {
    "Name": "ecl_devices",
    "Metapackage": false,
    "Description": "Provides an extensible and standardised framework for input-output devices.",
    "Wiki": "http://wiki.ros.org/ecl_devices",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 29,
        "3": 26,
        "5": 18,
        "6": 10
      }
    },
    "Edge": [
            "ecl_utilities",
            "ecl_mpl",
            "ecl_containers",
            "ecl_type_traits",
            "ecl_threads",
            "ecl_config",
            "ecl_errors"
    ]
  },
  {
    "Name": "ecl_containers",
    "Metapackage": false,
    "Description": "The containers included here are intended to extend the stl containers.In all cases, these implementations are designed to implementc++ conveniences and safety where speed is not sacrificed. Also includes techniques for memory debugging of common problems suchas buffer overruns.",
    "Wiki": "http://wiki.ros.org/ecl_containers",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 5,
        "2": 16,
        "3": 13
      }
    },
    "Edge": [
            "ecl_utilities",
            "ecl_mpl",
            "ecl_type_traits",
            "ecl_formatters",
            "ecl_converters",
            "ecl_config",
            "ecl_errors",
            "ecl_exceptions"
    ]
  },
  {
    "Name": "ecl_streams",
    "Metapackage": false,
    "Description": "These are lightweight text streaming classes that connect to standardised ecl type devices.",
    "Wiki": "http://wiki.ros.org/ecl_streams",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 6,
        "2": 13,
        "3": 12
      }
    },
    "Edge": [
            "ecl_type_traits",
            "ecl_devices",
            "ecl_concepts",
            "ecl_converters",
            "ecl_time",
            "ecl_errors"
    ]
  },
  {
    "Name": "ecl_mpl",
    "Metapackage": false,
    "Description": "Metaprogramming tools move alot of runtime calculations to be shifted tocompile time. This has only very elementary structures at this stage.",
    "Wiki": "http://wiki.ros.org/ecl_mpl",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 6,
        "3": 6
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "ecl_ipc",
    "Metapackage": false,
    "Description": "Interprocess mechanisms vary greatly across platforms - sysv, posix, win32, thereare more than a few. This package provides an infrastructure to allow for developing cross platform c++ wrappers around the lower level c api's that handle these mechanisms. These make it not only easier to utilise such mechanisms, but allow it to be done consistently across platforms.",
    "Wiki": "http://wiki.ros.org/ecl_ipc",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 7,
        "3": 7
      }
    },
    "Edge": [
            "ecl_errors",
            "ecl_time_lite",
            "ecl_exceptions",
            "ecl_time",
            "ecl_config"
    ]
  },
  {
    "Name": "ecl_sigslots",
    "Metapackage": false,
    "Description": "Provides a signal/slot mechanism (in the same vein as qt sigslots,boost::signals etc for intra-process communication. These includesome improvements - they do not need a preprocessor, are fully type safe, allow for simple connections via a posix style string identifierand are multithread-safe.",
    "Wiki": "http://ros.org/wiki/ecl_sigslots",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 8,
        "3": 7
      }
    },
    "Edge": [
            "ecl_threads",
            "ecl_config"
    ]
  },
  {
    "Name": "ecl_threads",
    "Metapackage": false,
    "Description": "This package provides the c++ extensions for a variety of threadedprogramming tools. These are usually different on differentplatforms, so the architecture for a cross-platform framework is also implemented.",
    "Wiki": "http://wiki.ros.org/ecl_threads",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 14,
        "3": 11,
        "5": 7,
        "6": 3
      }
    },
    "Edge": [
            "ecl_utilities",
            "ecl_concepts",
            "ecl_time",
            "ecl_config",
            "ecl_errors",
            "ecl_exceptions"
    ]
  },
  {
    "Name": "ecl_converters",
    "Metapackage": false,
    "Description": "Some fast/convenient type converters, mostly for char strings or strings. These are not really fully fleshed out, alot of them could use the addition for the whole range of fundamental types (e.g. all integers, not just int, unsigned int).They will come as the need arises.",
    "Wiki": "http://wiki.ros.org/ecl_converters",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 8,
        "3": 7
      }
    },
    "Edge": [
            "ecl_mpl",
            "ecl_type_traits",
            "ecl_concepts",
            "ecl_config",
            "ecl_errors",
            "ecl_exceptions"
    ]
  },
  {
    "Name": "ecl_geometry",
    "Metapackage": false,
    "Description": "Any tools relating to mathematical geometry.Primarily featuring polynomials and interpolations.",
    "Wiki": "http://wiki.ros.org/ecl_geometry",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 28,
        "3": 22,
        "5": 3
      }
    },
    "Edge": [
            "ecl_mpl",
            "ecl_containers",
            "ecl_type_traits",
            "ecl_formatters",
            "ecl_linear_algebra",
            "ecl_math",
            "ecl_config",
            "ecl_exceptions"
    ]
  },
  {
    "Name": "ecl_eigen",
    "Metapackage": false,
    "Description": "This provides an Eigen implementation for ecl's linear algebra.",
    "Wiki": "http://wiki.ros.org/ecl_eigen",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 289,
        "2": 222,
        "3": 195,
        "5": 76,
        "6": 36,
        "18": 6,
        "21": 4,
        "22": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "ecl_time",
    "Metapackage": false,
    "Description": "Timing utilities are very dependent on the system api provided for their use.This package provides a means for handling different timing models. Current support- posix rt : complete.- macosx : posix timers only, missing absolute timers.- win : none.",
    "Wiki": "http://wiki.ros.org/ecl_time",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 3,
        "2": 26,
        "3": 26,
        "5": 2,
        "6": 1
      }
    },
    "Edge": [
            "ecl_errors",
            "ecl_time_lite",
            "ecl_exceptions",
            "ecl_config"
    ]
  },
  {
    "Name": "ecl_core_apps",
    "Metapackage": false,
    "Description": "This includes a suite of programs demo'ing various aspects of the ecl_core. It also includes various benchmarking and utility programs for use primarily with embedded systems.",
    "Wiki": "http://wiki.ros.org/ecl_core_apps",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 4,
        "2": 8,
        "3": 6,
        "5": 7,
        "6": 3
      }
    },
    "Edge": [
            "ecl_containers",
            "ecl_type_traits",
            "ecl_config",
            "ecl_formatters",
            "ecl_threads",
            "ecl_devices",
            "ecl_time_lite",
            "ecl_streams",
            "ecl_command_line",
            "ecl_ipc",
            "ecl_converters",
            "ecl_linear_algebra",
            "ecl_errors",
            "ecl_sigslots",
            "ecl_exceptions",
            "ecl_geometry"
    ]
  },
  {
    "Name": "ecl_utilities",
    "Metapackage": false,
    "Description": "Includes various supporting tools and utilities for c++ programming.",
    "Wiki": "http://wiki.ros.org/ecl_utilities",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 13,
        "3": 12,
        "18": 3
      }
    },
    "Edge": [
            "ecl_mpl",
            "ecl_concepts"
    ]
  },
  {
    "Name": "ecl_filesystem",
    "Metapackage": false,
    "Description": "Cross platform filesystem utilities (until c++11 makes its way in).",
    "Wiki": "http://wiki.ros.org/ecl_filesystem",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 4,
        "3": 4
      }
    },
    "Edge": [
            "ecl_errors",
            "ecl_exceptions",
            "ecl_config"
    ]
  },
  {
    "Name": "ecl_concepts",
    "Metapackage": false,
    "Description": "Introduces a compile time concept checking mechanism that can be used most commonly to check for required functionality when passing template arguments.",
    "Wiki": "http://wiki.ros.org/ecl_concepts",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 7,
        "3": 7,
        "18": 1
      }
    },
    "Edge": [
            "ecl_type_traits",
            "ecl_config"
    ]
  },
  {
    "Name": "ecl_math",
    "Metapackage": false,
    "Description": "This package provides simple support to cmath, filling in holesor redefining in a c++ formulation where desirable.",
    "Wiki": "http://wiki.ros.org/ecl_math",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 7,
        "3": 7
      }
    },
    "Edge": [
            "ecl_type_traits"
    ]
  },
  {
    "Name": "ecl_core",
    "Metapackage": true,
    "Contains": [
            "ecl_statistics",
            "ecl_utilities",
            "ecl_mpl",
            "ecl_eigen",
            "ecl_containers",
            "ecl_type_traits",
            "ecl_command_line",
            "ecl_ipc",
            "ecl_threads",
            "ecl_devices",
            "ecl_concepts",
            "ecl_streams",
            "ecl_math",
            "ecl_formatters",
            "ecl_converters",
            "ecl_time",
            "ecl_linear_algebra",
            "ecl_core_apps",
            "ecl_sigslots",
            "ecl_exceptions",
            "ecl_geometry"
    ],
    "Description": "A set of tools and interfaces extending the capabilities of c++ to provide a lightweight, consistent interface with a focus for controlprogramming.",
    "Wiki": "http://www.ros.org/wiki/ecl_core",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "ecl_utilities",
            "ecl_statistics",
            "ecl_mpl",
            "ecl_eigen",
            "ecl_containers",
            "ecl_type_traits",
            "ecl_command_line",
            "ecl_ipc",
            "ecl_threads",
            "ecl_devices",
            "ecl_concepts",
            "ecl_streams",
            "ecl_math",
            "ecl_formatters",
            "ecl_converters",
            "ecl_time",
            "ecl_linear_algebra",
            "ecl_core_apps",
            "ecl_sigslots",
            "ecl_exceptions",
            "ecl_geometry"
    ]
  },
  {
    "Name": "ecl_linear_algebra",
    "Metapackage": false,
    "Description": "Ecl frontend to a linear matrix package (currently eigen).",
    "Wiki": "http://wiki.ros.org/ecl_linear_algebra",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 5,
        "3": 4
      }
    },
    "Edge": [
            "ecl_formatters",
            "ecl_exceptions",
            "ecl_eigen"
    ]
  },
  {
    "Name": "ecl_formatters",
    "Metapackage": false,
    "Description": "The formatters here simply format various input types to a specified text format. They can be used with most streaming types (including both ecl and stl streams).",
    "Wiki": "http://wiki.ros.org/ecl_formatters",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 5,
        "3": 5
      }
    },
    "Edge": [
            "ecl_converters",
            "ecl_exceptions",
            "ecl_config"
    ]
  },
  {
    "Name": "ecl_type_traits",
    "Metapackage": false,
    "Description": "Extends c++ type traits and implements a few more to boot.",
    "Wiki": "http://wiki.ros.org/ecl_type_traits",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 5,
        "3": 5,
        "18": 2
      }
    },
    "Edge": [
            "ecl_mpl",
            "ecl_config"
    ]
  },
  {
    "Name": "ecl_command_line",
    "Metapackage": false,
    "Description": "Embeds the TCLAP library inside the ecl. This is a very convenient command line parser in templatised c++.",
    "Wiki": "http://wiki.ros.org/ecl_command_line",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 22,
        "3": 22,
        "18": 6,
        "6": 1,
        "5": 5
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "ros_ethercat_hardware",
    "Metapackage": false,
    "Description": "Package for creating a hardware interface to the robot using the EtherCAT motor controller/driver",
    "Wiki": "http://ros.org/wiki/ros_ethercat_hardware",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 4,
        "3": 4,
        "5": 4,
        "6": 1,
        "18": 4
      }
    },
    "Edge": [
            "ros_ethercat_eml",
            "ros_ethercat_model"
    ]
  },
  {
    "Name": "ros_ethercat_loop",
    "Metapackage": false,
    "Description": "Main loop to run EtherCAT robot hardware.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "5": 3,
        "6": 3
      }
    },
    "Edge": [
            "ros_ethercat_model",
            "ros_ethercat_hardware"
    ]
  },
  {
    "Name": "ros_ethercat_eml",
    "Metapackage": false,
    "Description": "This is an implementation of the EtherCAT master protocol for use wiht ros_ethercar packagebased on the work done at Flanders' Mechatronics Technology Centre and Willow Garage.",
    "Wiki": "http://ros.org/wiki/ros_ethercat_eml",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 16,
        "3": 16,
        "5": 3,
        "6": 3,
        "18": 16,
        "25": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "ros_ethercat_model",
    "Metapackage": false,
    "Description": "The mechanism model",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 6,
        "3": 6,
        "18": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "ros_ethercat",
    "Metapackage": true,
    "Contains": [
            "ros_ethercat_eml",
            "ros_ethercat_model",
            "ros_ethercat_hardware",
            "ros_ethercat_loop"
    ],
    "Description": "A pr2 agnostic replacement for robots using EtherCAT",
    "Wiki": "http://ros.org/wiki/ros_ethercat",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "ros_ethercat_eml",
            "ros_ethercat_model",
            "ros_ethercat_hardware",
            "ros_ethercat_loop"
    ]
  },
  {
    "Name": "sr_example",
    "Metapackage": false,
    "Description": "sr_example is an example of a real package interfaced with our robot. Please refer to the tutorialCreating a package to interact with our robots.",
    "Wiki": "http://ros.org/wiki/sr_example",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "3": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "sr_interface",
    "Metapackage": true,
    "Contains": [
            "hand_kinematics",
            "kdl_coupling",
            "sr_grasp",
            "sr_example",
            "sr_robot_commander"
    ],
    "Description": "This repository contains the high level interface and its dependencies for interacting simply with ourrobots.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "hand_kinematics",
            "kdl_coupling",
            "sr_grasp",
            "sr_example",
            "sr_robot_commander"
    ]
  },
  {
    "Name": "hand_kinematics",
    "Metapackage": false,
    "Description": "Computation of forward and inverse kinematics for the fingers of the Shadow Hand, including coupling.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 5,
        "2": 3,
        "3": 2,
        "5": 14,
        "6": 6,
        "18": 3
      }
    },
    "Edge": [
            "orocos_kdl",
            "sr_utilities",
            "kdl_coupling"
    ]
  },
  {
    "Name": "sr_grasp",
    "Metapackage": false,
    "Description": "Execute moveit_msgs/Grasp grasps on the Shadow Hand.",
    "Wiki": "http://ros.org/wiki/sr_grasp",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "sr_hand"
    ]
  },
  {
    "Name": "sr_robot_commander",
    "Metapackage": false,
    "Description": "This is a ROS interface to the robotic arm.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "kdl_coupling",
    "Metapackage": false,
    "Description": "Provides additionnal KDL functions or modified functions to handle coupling in joints as well as 3D IKsolutions for less than 6 DOF chains.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 6,
        "3": 5,
        "5": 1,
        "6": 1,
        "18": 2
      }
    },
    "Edge": [
            "orocos_kdl"
    ]
  },
  {
    "Name": "sr_hand",
    "Metapackage": false,
    "Description": "This is a ROS interface to the Shadow Robot's robotic hand. Itcontains both an interface to the real hand (communicating viaa CAN interface) and a simulated version of the hand. It alsocontains an interface to Shadow Robot's muscle arm.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 3,
        "2": 26,
        "3": 26,
        "18": 9,
        "5": 3
      }
    },
    "Edge": [
            "sr_utilities"
    ]
  },
  {
    "Name": "sr_mechanism_controllers",
    "Metapackage": false,
    "Description": "The sr_mechanism_controllers package contains different types ofcontrollers for the etherCAT hand:(fake) calibration controllers,position controllers, velocity controllers, force controllers, ...",
    "Wiki": "http://ros.org/wiki/sr_mechanism_controllers",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 4,
        "2": 24,
        "3": 22,
        "5": 15,
        "6": 10,
        "18": 15
      }
    },
    "Edge": [
            "ros_ethercat_model",
            "sr_hardware_interface",
            "sr_utilities"
    ]
  },
  {
    "Name": "sr_core",
    "Metapackage": true,
    "Contains": [
            "sr_hand",
            "sr_mechanism_model",
            "sr_self_test",
            "sr_gazebo_sim",
            "sr_mechanism_controllers",
            "sr_hardware_interface",
            "sr_tactile_sensors",
            "sr_utilities"
    ],
    "Description": "These are the core packages for the Shadow Robot hardware and simulation.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "sr_hand",
            "sr_mechanism_model",
            "sr_self_test",
            "sr_gazebo_sim",
            "sr_mechanism_controllers",
            "sr_hardware_interface",
            "sr_tactile_sensors",
            "sr_utilities"
    ]
  },
  {
    "Name": "sr_hardware_interface",
    "Metapackage": false,
    "Description": "This package contains the actuator used in the hand model.",
    "Wiki": "http://ros.org/wiki/sr_hardware_interface",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1
      }
    },
    "Edge": [
            "ros_ethercat_model",
            "ros_ethercat_hardware"
    ]
  },
  {
    "Name": "sr_utilities",
    "Metapackage": false,
    "Description": "sr_utilities contains different useful header libraries (math libraries, etc...).",
    "Wiki": "http://ros.org/wiki/sr_utilities",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 9,
        "3": 7
      }
    },
    "Edge": [
            "ros_ethercat_model"
    ]
  },
  {
    "Name": "sr_self_test",
    "Metapackage": false,
    "Description": "sr_self_test",
    "Wiki": "http://ros.org/wiki/sr_self_test",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 13,
        "3": 12,
        "5": 3,
        "6": 1,
        "18": 6
      }
    },
    "Edge": [
            "sr_hand",
            "sr_movements"
    ]
  },
  {
    "Name": "sr_gazebo_sim",
    "Metapackage": false,
    "Description": "The sr_gazebo_sim package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 1,
        "3": 1
      }
    },
    "Edge": [
            "ros_ethercat_model",
            "sr_hardware_interface"
    ]
  },
  {
    "Name": "sr_tactile_sensors",
    "Metapackage": false,
    "Description": "An interface to the tactile sensors used in the Shadow Dextrous Hand. Also Contains a virtual set ofsensors.",
    "Wiki": "http://ros.org/wiki/sr_tactile_sensors",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 10,
        "3": 9,
        "18": 3
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "sr_mechanism_model",
    "Metapackage": false,
    "Description": "sr_mechanism_model contains the transmissions used in the robot model. We needed specifictransmission as we're using our own actuator. We also needed to take care of the joint 0swhich combine the distal and middle phalanges.",
    "Wiki": "http://ros.org/wiki/sr_mechanism_model",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 10,
        "3": 10
      }
    },
    "Edge": [
            "ros_ethercat_model",
            "sr_hardware_interface"
    ]
  },
  {
    "Name": "ecl_mobile_robot",
    "Metapackage": false,
    "Description": "Contains transforms (e.g. differential drive inverse kinematics)for the various types of mobile robot platforms.",
    "Wiki": "http://wiki.ros.org/ecl_mobile_robot",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 4,
        "3": 4
      }
    },
    "Edge": [
            "ecl_errors",
            "ecl_formatters",
            "ecl_geometry",
            "ecl_math",
            "ecl_linear_algebra"
    ]
  },
  {
    "Name": "ecl_navigation",
    "Metapackage": true,
    "Contains": [
            "ecl_mobile_robot"
    ],
    "Description": "This stack aims to bring the common tools and algorithms needed todevelop navigation algorithms, in particular slam. It does not focus onthe end-point solution, rather the tools needed to create a variety ofend-point solutions.",
    "Wiki": "http://www.ros.org/wiki/ecl_navigation",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "ecl_mobile_robot"
    ]
  },
  {
    "Name": "joint_trajectory_action",
    "Metapackage": false,
    "Description": "The joint_trajectory_action is a node that exposes an action interface to a joint trajectory controller.",
    "Wiki": "http://ros.org/wiki/joint_trajectory_action",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "18": 1,
        "5": 1,
        "6": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_head_action",
    "Metapackage": false,
    "Description": "The PR2 head action is a node that provides an action interface forpointing the head of the PR2.It passes trajectory goals to thecontroller, and reports success when they have finished executing.",
    "Wiki": "http://ros.org/wiki/pr2_head_action",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "18": 1,
        "5": 1,
        "6": 1
      }
    },
    "Edge": [
            "orocos_kdl"
    ]
  },
  {
    "Name": "single_joint_position_action",
    "Metapackage": false,
    "Description": "The single joint position action is a node that provides an actioninterface for commanding a trajectory to move a joint to a particularposition. The action reports success when the joint reaches the desiredposition.",
    "Wiki": "http://ros.org/wiki/single_joint_position_action",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "18": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "robot_mechanism_controllers",
    "Metapackage": false,
    "Description": "Generic Mechanism Controller Library",
    "Wiki": "http://ros.org/wiki/robot_mechanism_controllers",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 14,
        "3": 11,
        "5": 6,
        "6": 5,
        "18": 10
      }
    },
    "Edge": [
            "pr2_controller_manager",
            "pr2_controller_interface",
            "pr2_mechanism_model"
    ]
  },
  {
    "Name": "pr2_mechanism_controllers",
    "Metapackage": false,
    "Description": "The pr2_mechanism_controllers package contains realtimecontrollers that are meant for specific mechanisms of the PR2.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 3,
        "2": 17,
        "3": 14,
        "5": 11,
        "6": 5,
        "18": 11
      }
    },
    "Edge": [
            "pr2_mechanism_model",
            "robot_mechanism_controllers",
            "pr2_controller_interface"
    ]
  },
  {
    "Name": "pr2_gripper_action",
    "Metapackage": false,
    "Description": "The pr2_gripper_action provides an action interface for using thegripper. Users can specify what position to move to (while limiting theforce) and the action will report success when the position is reached orfailure when the gripper cannot move any longer.",
    "Wiki": "http://ros.org/wiki/pr2_gripper_action",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "18": 1
      }
    },
    "Edge": [
            "pr2_mechanism_controllers",
            "robot_mechanism_controllers",
            "pr2_mechanism_model"
    ]
  },
  {
    "Name": "ethercat_trigger_controllers",
    "Metapackage": false,
    "Description": "Controllers to operate the digital output of the motor controllerboards and the projector board. This package has not been reviewed andshould be considered unstable.",
    "Wiki": "http://www.ros.org/wiki/ethercat_trigger_controllers",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 5,
        "3": 5,
        "18": 3,
        "5": 3
      }
    },
    "Edge": [
            "pr2_controller_interface"
    ]
  },
  {
    "Name": "pr2_calibration_controllers",
    "Metapackage": false,
    "Description": "The pr2_calibration_controllers package contains the controllers used to bring all the joints in the PR2 to a calibrated state.",
    "Wiki": "http://ros.org/wiki/pr2_calibration_controllers",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 6,
        "3": 6,
        "5": 5,
        "6": 5,
        "18": 5
      }
    },
    "Edge": [
            "pr2_mechanism_controllers",
            "pr2_controller_interface",
            "robot_mechanism_controllers",
            "pr2_mechanism_model"
    ]
  },
  {
    "Name": "pr2_controllers",
    "Metapackage": true,
    "Contains": [
            "single_joint_position_action",
            "ethercat_trigger_controllers",
            "pr2_calibration_controllers",
            "joint_trajectory_action",
            "robot_mechanism_controllers",
            "pr2_mechanism_controllers",
            "pr2_gripper_action",
            "pr2_head_action"
    ],
    "Description": "Contains the controllers that run in realtime on the PR2 and supporting packages.",
    "Wiki": "http://ros.org/wiki/pr2_controllers",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "single_joint_position_action",
            "ethercat_trigger_controllers",
            "pr2_calibration_controllers",
            "joint_trajectory_action",
            "robot_mechanism_controllers",
            "pr2_mechanism_controllers",
            "pr2_gripper_action",
            "pr2_head_action"
    ]
  },
  {
    "Name": "pr2_position_scripts",
    "Metapackage": false,
    "Description": "This package contains a number of scripts to set various components of the PR2. They are used in the apps to improve usablity.",
    "Wiki": "http://ros.org/wiki/pr2_position_scripts",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_mannequin_mode",
    "Metapackage": false,
    "Description": "The pr2_mannequin_mode package",
    "Wiki": "http://wiki.ros.org/pr2_mannequin_mode",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "pr2_controller_manager"
    ]
  },
  {
    "Name": "pr2_teleop_general",
    "Metapackage": false,
    "Description": "pr2_teleop_general",
    "Wiki": "http://ros.org/wiki/pr2_teleop_general",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 3,
        "18": 3,
        "5": 11,
        "6": 7
      }
    },
    "Edge": [
            "pr2_controller_manager"
    ]
  },
  {
    "Name": "pr2_tuckarm",
    "Metapackage": false,
    "Description": "Tucks the arms of the PR2 robot into a safe position for moving the base of the robot. This also moves the arms out of the view of the tilting laser scanner, as much as possible.",
    "Wiki": "http://ros.org/wiki/pr2_tuckarm",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "pr2_tuck_arms_action"
    ]
  },
  {
    "Name": "pr2_app_manager",
    "Metapackage": false,
    "Description": "Scripts and tools for running the application manager on the PR2.",
    "Wiki": "http://ros.org/wiki/application_manager",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "app_manager"
    ]
  },
  {
    "Name": "pr2_apps",
    "Metapackage": true,
    "Contains": [
            "pr2_position_scripts",
            "pr2_tuckarm",
            "pr2_app_manager",
            "pr2_teleop_general"
    ],
    "Description": "Basic applications for the PR2 robot",
    "Wiki": "http://ros.org/wiki/pr2_apps",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "pr2_tuckarm",
            "pr2_position_scripts",
            "pr2_teleop_general",
            "pr2_app_manager"
    ]
  },
  {
    "Name": "pr2_teleop",
    "Metapackage": false,
    "Description": "The pr2_teleop package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "3": 1,
        "18": 1,
        "6": 2,
        "5": 3
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "kobuki_core",
    "Metapackage": true,
    "Contains": [
            "kobuki_ftdi",
            "kobuki_dock_drive",
            "kobuki_driver"
    ],
    "Description": "Non-ROS software for Kobuki, Yujin Robot's mobile research base.",
    "Wiki": "http://ros.org/wiki/kobuki_core",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "kobuki_ftdi",
            "kobuki_dock_drive",
            "kobuki_driver"
    ]
  },
  {
    "Name": "kobuki_dock_drive",
    "Metapackage": false,
    "Description": "Dock driving library for Kobuki. Users owning a docking station for Kobuki can use this tool to develop autonomous docking drive algorithms.",
    "Wiki": "http://ros.org/wiki/kobuki_dock_drive",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 5,
        "3": 5,
        "5": 1
      }
    },
    "Edge": [
            "ecl_threads",
            "ecl_geometry",
            "ecl_linear_algebra"
    ]
  },
  {
    "Name": "kobuki_driver",
    "Metapackage": false,
    "Description": "C++ driver library for Kobuki:Pure C++ driver library for Kobuki. This is for those who do not wish to use ROS on their systems.",
    "Wiki": "http://ros.org/wiki/kobuki_driver",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 31,
        "3": 29,
        "5": 7,
        "6": 3,
        "18": 3
      }
    },
    "Edge": [
            "ecl_command_line",
            "ecl_devices",
            "ecl_mobile_robot",
            "ecl_converters",
            "ecl_time",
            "ecl_geometry",
            "ecl_sigslots"
    ]
  },
  {
    "Name": "kobuki_ftdi",
    "Metapackage": false,
    "Description": "Utilities for flashing and enabling Kobuki's USB connection.This package contains tools for flashing the Kobuki's FTDI chip (usually done at the factory).The special firmware for the FTDI chip (USB to serial converter) enables it to appear as /dev/kobuki on the user's PC.",
    "Wiki": "http://ros.org/wiki/kobuki_ftdi",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 12,
        "3": 11,
        "5": 8,
        "6": 4
      }
    },
    "Edge": [
            "ecl_command_line"
    ]
  },
  {
    "Name": "motoman",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "The motoman stack constains libraries, configuration files, and ROS nodes for controlling a Motoman robot from ROS-Industrial",
    "Wiki": "http://ros.org/wiki/motoman",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_delivery",
    "Metapackage": false,
    "Description": "This package contains scripts for making a PR2 deliver a smallobject from one place to another, and return to a home base.",
    "Wiki": "http://ros.org/wiki/pr2_delivery",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "pr2_gripper_sensor_action",
            "pr2_move_base",
            "pr2_tuck_arms_action"
    ]
  },
  {
    "Name": "grizzly",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "grizzly_teleop",
    "Metapackage": false,
    "Description": "Nodes to republish joystick messages as a cmd_vel topic suitable for use with real or simulated Grizzly.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "5": 1
      }
    },
    "Edge": [
            "grizzly_msgs"
    ]
  },
  {
    "Name": "grizzly_motion",
    "Metapackage": false,
    "Description": "Low-level motion control nodes for Grizzly which are common to simulated and non-simulated Grizzly.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 3,
        "2": 9,
        "3": 8,
        "5": 1,
        "6": 1,
        "18": 5
      }
    },
    "Edge": [
            "grizzly_msgs"
    ]
  },
  {
    "Name": "grizzly_msgs",
    "Metapackage": false,
    "Description": "Common messages for Grizzly.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "3": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "ur_kinematics",
    "Metapackage": false,
    "Description": "Provides forward and inverse kinematics for Universal Robots designs. See http://hdl.handle.net/1853/50782 for details.",
    "Wiki": "http://wiki.ros.org/ur_kinematics",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 4,
        "3": 4,
        "5": 2,
        "6": 2,
        "18": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "ur_driver",
    "Metapackage": false,
    "Description": "Driver for the UR5/10 arm based on the Polyscope control scheme.",
    "Wiki": "http://ros.org/wiki/ur_driver",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "universal_robot",
    "Metapackage": true,
    "Contains": [
            "ur_kinematics",
            "ur_driver"
    ],
    "Description": "Drivers, description, and utilities for Universal Robot Arms.",
    "Wiki": "http://ros.org/wiki/universal_robot",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "ur_driver",
            "ur_kinematics"
    ]
  },
  {
    "Name": "ar_track_alvar",
    "Metapackage": false,
    "Description": "This package is a ROS wrapper for Alvar, an open source AR tag tracking library.",
    "Wiki": "http://ros.org/wiki/ar_track_alvar",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 53,
        "2": 68,
        "3": 60,
        "5": 66,
        "6": 36,
        "18": 5
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_navigation_self_filter",
    "Metapackage": false,
    "Description": "Filters the robot's body out of point clouds.",
    "Wiki": "http://ros.org/wiki/pr2_navigation_self_filter",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 6,
        "3": 5,
        "5": 10,
        "6": 5,
        "18": 6
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_move_base",
    "Metapackage": false,
    "Description": "pr2_move_base",
    "Wiki": "http://ros.org/wiki/pr2_move_base",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "semantic_point_annotator",
    "Metapackage": false,
    "Description": "A node which annotates 3D point cloud data with semantic labels.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 9,
        "3": 9,
        "18": 2,
        "5": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_navigation_perception",
    "Metapackage": false,
    "Description": "This package holds navigation-specific sensor configuration options and launch files for the PR2.",
    "Wiki": "http://ros.org/wiki/pr2_navigation_perception",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2
      }
    },
    "Edge": [
            "pr2_navigation_self_filter",
            "laser_tilt_controller_filter",
            "semantic_point_annotator"
    ]
  },
  {
    "Name": "laser_tilt_controller_filter",
    "Metapackage": false,
    "Description": "laser_tilt_controller_filter",
    "Wiki": "http://ros.org/wiki/laser_tilt_controller_filter",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2,
        "18": 1,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "pr2_navigation",
    "Metapackage": true,
    "Contains": [
            "pr2_navigation_perception",
            "pr2_navigation_self_filter",
            "pr2_move_base",
            "semantic_point_annotator",
            "laser_tilt_controller_filter"
    ],
    "Description": "The pr2_navigation stack holds common configuration options for running the",
    "Wiki": "http://ros.org/wiki/pr2_navigation",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "pr2_navigation_perception",
            "pr2_navigation_self_filter",
            "laser_tilt_controller_filter",
            "semantic_point_annotator",
            "pr2_move_base"
    ]
  },
  {
    "Name": "husky_control",
    "Metapackage": false,
    "Description": "Clearpath Husky controller configurations",
    "Wiki": "http://ros.org/wiki/husky_control",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "husky",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "turtlebot_arm_ikfast_plugin",
    "Metapackage": false,
    "Description": "The turtlebot_arm_ikfast_plugin package",
    "Wiki": "http://ros.org/wiki/turtlebot_arm_ikfast_plugin",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 2,
        "3": 1,
        "5": 6,
        "6": 4,
        "18": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "turtlebot_arm_block_manipulation",
    "Metapackage": false,
    "Description": "turtlebot_arm_block_manipulation contains a demo allowing the TurtleBot armto manipulate small blocks on a level surface using interactive markers.",
    "Wiki": "http://ros.org/wiki/turtlebot_arm_block_manipulation",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 3,
        "18": 6,
        "6": 3,
        "5": 3
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "turtlebot_arm_moveit_demos",
    "Metapackage": false,
    "Description": "The turtlebot_arm_moveit_demos package contains scripts to start playing with a turtlebot arm and MoveIt.",
    "Wiki": "http://ros.org/wiki/turtlebot_arm_moveit_demos",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "turtlebot_arm",
    "Metapackage": true,
    "Contains": [
            "turtlebot_arm_block_manipulation",
            "turtlebot_arm_kinect_calibration",
            "turtlebot_arm_ikfast_plugin",
            "turtlebot_arm_moveit_demos"
    ],
    "Description": "The turtlebot arm meta package.",
    "Wiki": "http://ros.org/wiki/turtlebot_arm",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "turtlebot_arm_block_manipulation",
            "turtlebot_arm_kinect_calibration",
            "turtlebot_arm_ikfast_plugin",
            "turtlebot_arm_moveit_demos"
    ]
  },
  {
    "Name": "turtlebot_arm_kinect_calibration",
    "Metapackage": false,
    "Description": "turtlebot_arm_kinect_calibration allows calibration of a kinect to a TurtleBot arm,including a kinect on-board and off-board the TurtleBot for more precise manipulation.",
    "Wiki": "http://ros.org/wiki/turtlebot_arm_kinect_calibration",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 2,
        "3": 2,
        "18": 3
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "nao_extras",
    "Metapackage": true,
    "Contains": [
            "nao_teleop",
            "nao_path_follower"
    ],
    "Description": "Extra tools for the Nao robot: teleoperation with a gamepad and path following. Renamedfrom the nao_common stack.",
    "Wiki": "http://www.ros.org/wiki/nao_extras",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "nao_teleop",
            "nao_path_follower"
    ]
  },
  {
    "Name": "nao_path_follower",
    "Metapackage": false,
    "Description": "Enables a Nao humanoid to either walk to a target location (with localization feedback),or follow a planned 2D path closely. Sends naoqi_msgs to the nao_walker node in nao_apps.",
    "Wiki": "http://ros.org/wiki/nao_path_follower",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "18": 1,
        "5": 3,
        "6": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "nao_teleop",
    "Metapackage": false,
    "Description": "Teleoperation (gamepad or joystick) for the Nao humanoid",
    "Wiki": "http://ros.org/wiki/nao_remote",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 3,
        "3": 3,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "sr_tools",
    "Metapackage": true,
    "Contains": [
            "sr_movements"
    ],
    "Description": "This metapackage contains more advanced tools that might be needed in specific use cases.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "sr_movements"
    ]
  },
  {
    "Name": "sr_movements",
    "Metapackage": false,
    "Description": "Contains a node which can be used to take the hand through a series of movements (perfect for tuningcontrollers for example).",
    "Wiki": "http://ros.org/wiki/sr_movements",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 8,
        "3": 7,
        "18": 2
      }
    },
    "Edge": [
            "sr_hand",
            "sr_utilities"
    ]
  },
  {
    "Name": "sr_grasp_fast_planner",
    "Metapackage": false,
    "Description": "The sr_grasp_fast_planner package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  }
]