[
  {
    "Name": "cob_scan_unifier",
    "Metapackage": false,
    "Description": "The cob_scan_unifier package holds code to unify two or more laser-scans to one unified scan-message",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2,
        "18": 1,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_linear_nav",
    "Metapackage": false,
    "Description": "cob_linear_nav provides a simple navigation instrument driving on a linear path from current position to goal without any planning or obstacle avoidance capabilites.Obstacle avoidance should be carried out in other package, e.g.",
    "Wiki": "http://ros.org/wiki/cob_linear_nav",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "18": 1,
        "5": 4,
        "6": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_navigation",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "The cob_navigation stack provides different navigation packages for",
    "Wiki": "http://ros.org/wiki/cob_navigation",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_script_server",
    "Metapackage": false,
    "Description": "The cob_script_server package provides a simple interface to operate Care-O-bot. It can be used via the python API or the actionlib interface.",
    "Wiki": "http://ros.org/wiki/cob_script_server",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_command_tools",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "The cob_command_tools stack provides tools, for operating Care-O-bot.",
    "Wiki": "http://ros.org/wiki/cob_command_tools",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_command_gui",
    "Metapackage": false,
    "Description": "This package provides a simple GUI for operating Care-O-bot.",
    "Wiki": "http://www.ros.org/wiki/cob_command_gui",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_monitoring",
    "Metapackage": false,
    "Description": "cob_monitoring",
    "Wiki": "http://ros.org/wiki/cob_monitoring",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_interactive_teleop",
    "Metapackage": false,
    "Description": "COB teleop interactive marker for RViz provided by dcgm-robotics@FIT group.",
    "Wiki": "http://ros.org/wiki/cob_interactive_teleop",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 6,
        "3": 6
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_teleop",
    "Metapackage": false,
    "Description": "teleop_node_of_v2",
    "Wiki": "http://www.ros.org/wiki/cob_teleop",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "18": 4,
        "2": 2,
        "5": 5,
        "6": 4
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_dashboard",
    "Metapackage": false,
    "Description": "cob_dashboard is a modified version of [[pr2_dashboard]].",
    "Wiki": "http://ros.org/wiki/cob_dashboard",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_perception_common",
    "Metapackage": true,
    "Contains": [
            "cob_object_detection_visualizer",
            "cob_cam3d_throttle",
            "cob_image_flip",
            "cob_vision_utils"
    ],
    "Description": "This stack provides utilities commonly needed for a variety of computer vision tasks.",
    "Wiki": "http://wiki.ros.org/cob_perception_common",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "cob_cam3d_throttle",
            "cob_image_flip",
            "cob_object_detection_visualizer",
            "cob_vision_utils"
    ]
  },
  {
    "Name": "cob_object_detection_visualizer",
    "Metapackage": false,
    "Description": "The cob_object_detection_visualizer package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "3": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_vision_utils",
    "Metapackage": false,
    "Description": "Contains utilities used within the object detection tool chain.",
    "Wiki": "http://wiki.ros.org/cob_vision_utils",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 6,
        "3": 6,
        "5": 6,
        "6": 4
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_image_flip",
    "Metapackage": false,
    "Description": "Flips the image of Care-O-bots kinect in dependence of the viewing direction of the cameras to receive an upright image all the time.",
    "Wiki": "http://wiki.ros.org/cob_image_flip",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 4,
        "3": 4,
        "18": 2,
        "6": 1,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_cam3d_throttle",
    "Metapackage": false,
    "Description": "cob_cam3d_throttle: only for Trottel",
    "Wiki": "http://ros.org/wiki/cob_cam3d_throttle",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 1,
        "3": 1,
        "18": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "schunk_powercube_chain",
    "Metapackage": false,
    "Description": "This packages provides a configurable driver of a chainof Schunk powercubes. The powercube chain is configuredthrough parameters. Most users will not directly interactwith this package but with the corresponding launch filesin other packages, e.g. schunk_bringup, cob_bringup, ...",
    "Wiki": "http://ros.org/wiki/schunk_powercube_chain",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 17,
        "3": 14,
        "5": 15,
        "6": 4,
        "18": 2,
        "25": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "schunk_simulated_tactile_sensors",
    "Metapackage": false,
    "Description": "This package provides simulated tactile sensors for the Schunk Dextrous Hand (SDH) which is mounted on the Care-O-bot arm. The node subscribes to the Gazebo bumper topics of the SDH. It transforms the Gazebo feedback to the tactile_data topic to provide the same tactile sensor interface as the schunk_sdh package. The following parameters can be set: * cells_x: The number of patches on the tactile sensor in the directionperpendicular to the finger. Defaults to 6. * cells_y: The number of patches on the tactile sensor along the directionof the finger. Defaults to 14. * output_range: The maximum output value of one patch. Defaults to 3500. * sensitivity: The change of output in one patch per Newton. Defaults to350. The sensitivity can be approximated by the followingformula: S = output_range / (measurement_range * cell_area)- The measurement range of the tactile pads is 250 kPa (fromthe data sheet).- The output range can be determined by experiment from thereal SDH. It is about 3500.- The cell area is the size of one patch. Length and widthof the area are determined by dividing the length/widthof the collision surface by the number of cells in therespective direction.Important: In most cases this is NOT the cell area that is given in the data sheet! * filter_length: The length of the moving average filter which smoothesthe values from simulation. Defaults to 10. The node subscribes to the following topics to receive data from the simulation: * thumb_2/state * thumb_3/state * finger_12/state * finger_13/state * finger_22/state * finger_23/state The node publishes the processed data on the following topic: * tactile_data The simulated bumper must obtain the collision data in the link that the sensor is attached to. This is achieved by setting the frameName property in the gazebo_ros_bumper controller.",
    "Wiki": "http://ros.org/wiki/schunk_simulated_tactile_sensors",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "schunk_sdhx",
    "Metapackage": false,
    "Description": "The schunk_sdhx package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "schunk_sdh",
    "Metapackage": false,
    "Description": "This package provides an interface for operating the schunk dexterous hand (SDH), including the tactile sensors.",
    "Wiki": "http://ros.org/wiki/schunk_sdh",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 26,
        "3": 26,
        "18": 3,
        "5": 4
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "schunk_libm5api",
    "Metapackage": false,
    "Description": "This package wraps the libm5api to use it as a ros dependency. Original sources from http://www.schunk-modular-robotics.com/fileadmin/user_upload/software/schunk_libm5api_source.zip.",
    "Wiki": "http://ros.org/wiki/schunk_libm5api",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 3,
        "2": 25,
        "3": 23,
        "5": 41,
        "6": 14,
        "18": 1,
        "21": 2,
        "22": 2,
        "25": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "schunk_modular_robotics",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "This stack includes packages that provide access to the Schunk hardware through ROS messages, services and actions.",
    "Wiki": "http://ros.org/wiki/schunk_modular_robotics",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "orocos_kinematics_dynamics",
    "Metapackage": false,
    "Description": "This package depends on a recent version of the Kinematics and DynamicsLibrary (KDL), distributed by the Orocos Project. It is a meta-package thatdepends on kdl which contains the c++ version and pykdl which contains thegenerated python bindings.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
            "orocos_kdl"
    ]
  },
  {
    "Name": "orocos_kdl",
    "Metapackage": false,
    "Description": "This package contains a recent version of the Kinematics and DynamicsLibrary (KDL), distributed by the Orocos Project.",
    "Wiki": "http://wiki.ros.org/orocos_kdl",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 34,
        "2": 119,
        "3": 108,
        "5": 23,
        "6": 5,
        "18": 33,
        "25": 3
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_moveit_interface",
    "Metapackage": false,
    "Description": "cob_moveit_interface",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_manipulation",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "The cob_manipulation stack includes packages that provide manipulation capabilities for Care-O-bot.",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_pick_place_action",
    "Metapackage": false,
    "Description": "An action interface to MoveIt!'s pick-and-place for Care-O-bot",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2,
        "18": 2,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_lookat_action",
    "Metapackage": false,
    "Description": "cob_lookat_action",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "18": 1,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_tactiletools",
    "Metapackage": false,
    "Description": "cob_tactiletools",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_tray_monitor",
    "Metapackage": false,
    "Description": "cob_tray_monitor",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_grasp_generation",
    "Metapackage": false,
    "Description": "Grasp generation for Care-O-bot based on OpenRAVE",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_kinematics",
    "Metapackage": false,
    "Description": "IK solvers and utilities for Care-O-bot",
    "Wiki": "http://ros.org/wiki/cob_manipulation/",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 4,
        "2": 3,
        "3": 3,
        "5": 7,
        "6": 7,
        "18": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_relayboard",
    "Metapackage": false,
    "Description": "cob_relayboard",
    "Wiki": "http://ros.org/wiki/cob_relayboard",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 9,
        "3": 8,
        "5": 4,
        "6": 2,
        "18": 1,
        "25": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_light",
    "Metapackage": false,
    "Description": "This package contains scripts to operate the LED lights on Care-O-bot.",
    "Wiki": "http://ros.org/wiki/cob_light",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 3,
        "2": 24,
        "3": 22,
        "5": 4,
        "6": 3,
        "18": 5
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_generic_can",
    "Metapackage": false,
    "Description": "The package cob_generic_can provides an interface for nodes on a can-bus and examplary wrappers for two PeakSys-can-libs. When a can-bus-device is generated (for an example see base_dirve_chain) you can use generic_can to create as many itfs as there will be components communicating via this can-bus. Assign type of the can communication device (e.g. usb-to-can or can-card of a specific vendor) and can-address of the target device. This package comes with wrappers for PeakSys and PeakSysUSB adapters.",
    "Wiki": "http://ros.org/wiki/cob_generic_can",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 8,
        "3": 5,
        "18": 1,
        "6": 1,
        "5": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_driver",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "The cob_driver stack includes packages that provide access to the Care-O-bot hardware through ROS messages, services and actions. E.g. for mobile base, arm, camera sensors, laser scanners, etc...",
    "Wiki": "http://ros.org/wiki/cob_driver",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_canopen_motor",
    "Metapackage": false,
    "Description": "The package cob_canopen_motor implements a controller-drive component which is connected to a can-bus and works with a canopen-interface. CanDriveItf provides a - more or less - generic interface to the controller-drive components. CanDrvie... then implements a specific setup, e.g. an ELMO Harmonica Controller in case of the CanDriveHarmonica.",
    "Wiki": "http://ros.org/wiki/cob_canopen_motor",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 7,
        "3": 6,
        "5": 4,
        "6": 2,
        "18": 1,
        "21": 1,
        "25": 3
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_sick_s300",
    "Metapackage": false,
    "Description": "This package published a laser scan message out of a Sick S300 laser scanner.",
    "Wiki": "http://ros.org/wiki/cob_sick_s300",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 13,
        "3": 12,
        "5": 7,
        "6": 3,
        "18": 3,
        "25": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_voltage_control",
    "Metapackage": false,
    "Description": "Interface to IO board that manages emergency stop and battery voltage on rob@work 3",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "18": 1,
        "5": 1,
        "6": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_undercarriage_ctrl",
    "Metapackage": false,
    "Description": "cob_undercarriage_ctrl implements a controller for the omnidirectional base of Care-O-bot 3 on joint level. For a given Pltf-Twist the according wheel steering angles and linear wheel velocities are calculated based on the principle of rigid body motion. Each joint is than controlled individually to achieve the computed position and velocity",
    "Wiki": "http://ros.org/wiki/cob_undercarriage_ctrl",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "18": 1,
        "2": 3,
        "3": 3,
        "5": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_sick_lms1xx",
    "Metapackage": false,
    "Description": "This package published a laser scan message out of a Sick LMS1xx laser scanner.This version is made by fusion of ipa320/RCPRG_laser_drivers and ipa320/libLMS1xx repository. This package shuld have clearer structure and be easier to install.",
    "Wiki": "http://ros.org/wiki/cob_sick_lms1xx",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 3,
        "3": 2,
        "5": 2,
        "6": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_base_drive_chain",
    "Metapackage": false,
    "Description": "This package contains classes that are able to control the platform of the Care-O-Bot. This means to establish a CAN communication to drive and steering motors of the platform and later send motion commands and receive motor information.",
    "Wiki": "http://ros.org/wiki/cob_base_drive_chain",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 1,
        "18": 2,
        "6": 5,
        "5": 7
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_phidgets",
    "Metapackage": false,
    "Description": "cob_phidgets",
    "Wiki": "http://ros.org/wiki/cob_phidgets",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 4,
        "2": 9,
        "3": 9,
        "18": 1,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_sound",
    "Metapackage": false,
    "Description": "This package implements a sound play module using text2wave and aplay through python.",
    "Wiki": "http://ros.org/wiki/cob_sound",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "18": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_utilities",
    "Metapackage": false,
    "Description": "Deprecatedcob_utilities subsumes a number of classes, which are used in the original COb3 software. E.g. IniFile.h supports the original inifile structure of Care-O-bot 3. MathSup.h provides some basic functions like conversion from degree to radion or norming of angles within +/- PI. The package is currently used while the drivers are ported to ROS and Orocos respectively. Midterm it shall be removed and the ROS structures shall be used for reading parameters during initialization. So, don't use this package in new code!",
    "Wiki": "http://ros.org/wiki/cob_utilities",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 9,
        "3": 9,
        "5": 7,
        "6": 3
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_mimic",
    "Metapackage": false,
    "Description": "This package implements the Care-O-bot mimic",
    "Wiki": "http://ros.org/wiki/cob_mimic",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_head_axis",
    "Metapackage": false,
    "Description": "cob_head_axis",
    "Wiki": "http://ros.org/wiki/cob_head_axis",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 3,
        "3": 2,
        "18": 2,
        "6": 1,
        "5": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_camera_sensors",
    "Metapackage": false,
    "Description": "For more information read the readme.htm file located in",
    "Wiki": "http://ros.org/wiki/cob_camera_sensors",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 4,
        "2": 12,
        "3": 10,
        "5": 9,
        "6": 5,
        "18": 6
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_frame_tracker",
    "Metapackage": false,
    "Description": "The cob_frame_tracker package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 4,
        "2": 2,
        "3": 1,
        "5": 4,
        "6": 1,
        "18": 3
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_obstacle_distance",
    "Metapackage": false,
    "Description": "The cob_obstacle_distance package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 20,
        "3": 18,
        "5": 6,
        "6": 1,
        "18": 11
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_footprint_observer",
    "Metapackage": false,
    "Description": "The cob_footprint_observer package adjusts the footprint of the robot based on the setup (e.g. arm and/or tray).",
    "Wiki": "http://ros.org/wiki/cob_footprint_observer",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 1,
        "18": 1,
        "6": 1,
        "5": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_cartesian_controller",
    "Metapackage": false,
    "Description": "This package provides nodes that broadcast tf-frames along various (model-based) Cartesian paths.The tf-frames can be used as targets for the cob_frame_tracker/cob_twist_controller",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "2": 10,
        "3": 8,
        "5": 3,
        "6": 1,
        "18": 4
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_control_mode_adapter",
    "Metapackage": false,
    "Description": "The cob_control_mode_adapter package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 1,
        "18": 1,
        "5": 2,
        "6": 1
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_twist_controller",
    "Metapackage": false,
    "Description": "The main purpose of the cob_twist_controller is to convert target twists into joint velocities. Therefore it makes use of several implemented inverse kinematics approaches at the first order differential level. The inverse differential kinematics solver considers kinematic chain extensions, singularity robustness, redundancy resolution and priority-based methods.To avoid hardware destruction there is a limiter interface active as well. Via parameter server users can dynamically configure the solving strategy.",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 8,
        "2": 40,
        "3": 37,
        "5": 5,
        "6": 1,
        "18": 15
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_omni_drive_controller",
    "Metapackage": false,
    "Description": "The cob_omni_drive_controller package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 5,
        "2": 3,
        "3": 3,
        "5": 2,
        "6": 1,
        "18": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_model_identifier",
    "Metapackage": false,
    "Description": "The cob_model_identifier package",
    "Wiki": "",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 1,
        "3": 1,
        "18": 1,
        "5": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_collision_velocity_filter",
    "Metapackage": false,
    "Description": "The cob_collision_velocity_filter package is a package for collision avoidance using teleoperation.",
    "Wiki": "http://ros.org/wiki/cob_collision_velocity_filter",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 2,
        "18": 3,
        "6": 5,
        "5": 5
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_trajectory_controller",
    "Metapackage": false,
    "Description": "This package provides a trajectory controller which controlls velocities for a chain of joints. This controller can be used e.g. with [[schunk_powercube_chain]].",
    "Wiki": "http://ros.org/wiki/cob_trajectory_controller",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "1": 2,
        "2": 5,
        "3": 4,
        "5": 6,
        "6": 2,
        "18": 2
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_control",
    "Metapackage": true,
    "Contains": [
    ],
    "Description": "cob_control meta-package",
    "Wiki": "http://ros.org/wiki/cob_control",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
      }
    },
    "Edge": [
    ]
  },
  {
    "Name": "cob_base_velocity_smoother",
    "Metapackage": false,
    "Description": "The 'cob_base_velocity_smoother' reads velocity messages and publishes messages of the same type for smoothed velocity to avoid shaking behavior.",
    "Wiki": "http://ros.org/wiki/cob_base_velocity_smoother",
    "Metrics": {
    },
    "Repositories": [
    ],
    "Analysis": {
      "Noncompliance": {
        "2": 2,
        "3": 1,
        "18": 1
      }
    },
    "Edge": [
    ]
  }
]